{"version":3,"sources":["contexts/DataContext.js","contexts/DataProvider.js","img/dd.png","Species.js","Classes.js","services/roll.js","AbilityCells.js","data/data.js","Bonus.js","FinalValues.js","Features.js","LanguagesPick.js","TrickPick.js","ToolsPick.js","Dragons.js","SkillsClass.js","Skills.js","HalfElf.js","SpeciesChar.js","services/modificator.js","Equip.js","Instruments.js","ClassTricks.js","SpellsPick.js","ProficiencyPick.js","AddLang.js","Domain.js","Ranger.js","Fighter.js","ClassChar.js","MultiForm.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","React","createContext","DataProvider","props","updateState","bind","addPersonData","addValue","cleanValue","state","defaultStatic","default","rolled","defaultRolled","actualState","notConfirmed","finalValues","final","step_four","person","name","gender","alignment","languages","tricks","tools","dragons","skills","equip1","equip2","equip3","equip4","prof","mods","spells","classSkills","classTricks","classSpells","instruments","domain","armour","deityTricks","deityProf","addLang","enemy","terrain","patron","fight_style","update","updatePerson","values","this","setState","key","value","pick","personData","goodKey","len","length","console","log","splice","push","value1","value2","key2","value3","value4","data","data2","array","Provider","children","Component","Species","SPECIES","picked","handleData","event","target","buttonState","currentStep","FormControl","className","InputLabel","style","color","id","Select","onChange","labelId","placeholer","map","species","index","MenuItem","Classes","CLASSES","featuresNumbers","rolls","results","i","k6","Math","floor","random","sort","a","b","shift","sum","reduce","total","num","AbilityCells","features","changeValue","copy","context","defaultPicked","parseInt","every","abilities","ability","TableCell","e","def","feature","contextType","speciesBonus","species_char","speed","basic_languages","proficiency","weapons","tricksStatic","toolsStatic","skillsStatic","class_char","hit_dice","hit_points","armor","saving_throws","skills_pick","equip","tricks_pick","spells_pick","lang_pick","domains","fight_styles","Bonus","item","bon","textAlign","padding","FinalValues","useContext","profession","TableContainer","Table","TableHead","TableRow","TableBody","Features","featuresUse","numbersToShow","rollMethod","useDefault","confirmMethod","serviceRoll","pickable","unshift","defaultNumbers","bonus","rollsResults","toString","Fade","in","Button","onClick","disabled","variant","marginTop","rolling","LanguagesPick","getValue","lang","TrickPick","trick","ToolsPick","step","tool","Dragons","dragon","SkillsClass","required","skill","withSubscription","WrappedComponent","objKey","HalfelfSkills","ClassSkills","SpeciesChar","prevProps","prevState","char","noValidate","autoComplete","TextField","label","align","forEach","Equip","eq","component","FormLabel","RadioGroup","aria-label","el","FormControlLabel","control","Radio","Instruments","ClassTricks","numb","mainpick","SpellsPick","spell","ProficiencyPick","AddLang","Domain","domainEffects","nature","knowledge","Ranger","Fighter","ClassChar","warlock","warlock_spells","monk_instr","monk_tools","setPatron","setChoice","atr","deity","modificatorService","finals","choice","MultiForm","button","handleUserData","next","prev","handleButton","checkButtons","childData","previousButton","borderColor","size","nextButton","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91f29add.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;\r\n\r\n","import React from 'react'\r\nimport DataContext from './DataContext'\r\n\r\nclass DataProvider extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.updateState = this.updateState.bind(this);\r\n        this.addPersonData = this.addPersonData.bind(this);\r\n        this.addValue = this.addValue.bind(this);\r\n        this.cleanValue = this.cleanValue.bind(this);\r\n\t\tthis.state = {\r\n           defaultStatic : ['empty',15, 14, 13, 12, 10, 8],\r\n           default : ['empty',15, 14, 13, 12, 10, 8],\r\n           rolled: [],\r\n           defaultRolled: [],\r\n           actualState: ['','','','','',''],\r\n\t\t   notConfirmed: true,\r\n           finalValues: [],\r\n           final: false,\r\n           step_four: false,\r\n            person: {\r\n                name: '',\r\n                gender: '',\r\n                alignment: '',\r\n                languages: [],\r\n                tricks: [],\r\n                tools:[],\r\n                dragons: [],\r\n                skills: [],\r\n                equip1: [],\r\n                equip2: [],\r\n                equip3: [],\r\n                equip4: [],\r\n                prof: [],\r\n                mods: [],\r\n                spells: [], \r\n                classSkills: [],\r\n                classTricks: [],\r\n                classSpells: [],\r\n                instruments: [],\r\n                domain: '',\r\n                armour: [],\r\n                deityTricks: [],\r\n                deityProf: [],\r\n                addLang: [],\r\n                enemy: '',\r\n                terrain: '',\r\n                patron: '',\r\n                fight_style: '',\r\n            },\r\n            update: this.updateState,\r\n            updatePerson: this.addPersonData,\r\n            addValue: this.addValue,\r\n            cleanValue: this.cleanValue,\r\n\t\t}\r\n\t}\r\n\r\n\tupdateState(values) {\r\n\t\tthis.setState(values)\r\n\t}\r\n\r\n    addPersonData(key, value, pick) {\r\n        let personData = {...this.state.person};\r\n        let goodKey = personData[key];\r\n        let len = goodKey.length;\r\n        console.log(key);\r\n        console.log(len);\r\n        if (key === 'languages' || key === 'tricks' || key === 'tools' || key === 'dragons' || key === 'equip1' || key === 'equip2' || key === 'equip3' || key === 'equip4'  ) {\r\n            if(len <= 1 && key !== 'languages' && key !== 'tools') {\r\n                goodKey.splice(0,1,value)\r\n            } else if (len <= 1) {\r\n                goodKey.push(value);\r\n            } else {\r\n                goodKey.splice(1,2, value);\r\n            } \r\n        } else if (key === 'skills' || key === 'classSkills' || key === 'instruments' || key === 'classTricks' || key === 'spells' || key === 'deityProf' || key === 'addLang') {\r\n           \r\n            if (value === 'empty') { goodKey.splice(0, goodKey.length)\r\n            } else if(goodKey.length <= pick) {\r\n                goodKey.push(value); \r\n            } else {\r\n                goodKey.splice(0,1,value);\r\n            }\r\n        } else {\r\n                personData[key] = value;\r\n        }\r\n      \r\n        this.setState({person: personData});\r\n    }\r\n\r\n\r\n    addValue(key, value1, value2, key2, value3, value4) {\r\n        let personData = {...this.state.person};\r\n        let data = personData[key];\r\n        let data2 = personData[key2];\r\n        if(data.length < 2) {\r\n            data.push(value1, value2);\r\n            if(typeof data2 !== 'undefined')\r\n           \r\n            data2.push(value3);\r\n            if(typeof value4 !== 'undefined') data2.push(value4);\r\n        } else {\r\n            data.splice(0,2);\r\n            data.push(value1, value2);\r\n            if(typeof value4 !== 'undefined') {\r\n                data2.splice(0,2);\r\n                data2.push(value3);\r\n                if(typeof value4 !== 'undefined') data2.push(value4);\r\n            }\r\n        }\r\n        this.setState({person: personData});\r\n    }\r\n    \r\n    cleanValue(key) {\r\n        let personData = {...this.state.person};\r\n        let array = personData[key];\r\n        if(key==='tools') {\r\n            array.splice(1,1);\r\n        } else {array.length = [];}\r\n        this.setState({person: personData});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DataContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</DataContext.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataProvider","export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    SPECIES = ['Human', 'High Elf', 'Forest Elf', 'Drow - Dark Elf', 'Mountain Dwarf', 'Hill Dwarf','Halfling - Lightfoot', 'Halfling - Stout','Tiefling','Dragonborn', 'Forest Gnome', 'Rock Gnome', 'Half-Orc','Half-Elf'];\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('species',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.SPECIES.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    CLASSES = ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.CLASSES.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\nclass AbilityCells extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            default: props.default,\r\n            features: props.features,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        let data = event.target.value;\r\n        let actualState = [...this.context.actualState];\r\n        let copy;\r\n        if(this.props.defaultPicked) {\r\n            copy = [...this.context.default];\r\n        } else { \r\n            copy = [...this.context.rolled];\r\n        }\r\n        for( let i = 0; i < copy.length; i++){ \r\n            if ( copy[i] === data && data === parseInt(data, 10)) { \r\n                copy.splice(i, 1); \r\n                break;\r\n            }\r\n        }\r\n        if(actualState[index] === parseInt(actualState[index], 10)) copy.push(actualState[index])\r\n            actualState[index] = data;\r\n        if (actualState.every(value => value === parseInt(value, 10))) {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: false, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: false, actualState});\r\n        } else {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: true, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: true, actualState});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                                \r\n                                {\r\n                                this.props.defaultPicked ?\r\n                                this.context.default.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) :\r\n                                this.context.rolled.map((feature,index) => (\r\n                                    <MenuItem  className=\"option\" key={index} value={feature}>{feature}</MenuItem>\r\n                                )) \r\n                                }\r\n                            </Select> \r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nAbilityCells.contextType=DataContext;\r\nexport default AbilityCells; ","export const data = {\r\n    speciesBonus: {\r\n        'Human': [1, 1, 1, 1, 1, 1],\r\n        'High Elf': ['', 2,'',1,'',''],\r\n        'Forest Elf': ['',2, '', '', 1, ''],\r\n        'Drow - Dark Elf': ['',2,'','','',1],\r\n        'Mountain Dwarf': [2,'' ,2,'','',''],\r\n        'Hill Dwarf': ['','',2,'',1,''],\r\n        'Halfling - Lightfoot': ['',2,'','','',1],\r\n        'Halfling - Stout': ['', 2, 1, '', '','' ],\r\n        'Forest Gnome': ['',1,'',2, '',''],\r\n        'Rock Gnome': ['','',1,2,'',''],\r\n        'Tiefling': ['','','',1, '',2],\r\n        'Dragonborn': [2, '','','','',1],\r\n        'Half-Elf': ['',2,'','','',2],\r\n        'Half-Orc': [2, '',1, '','',''],\r\n    },\r\n    species_char : {\r\n        'Human': {\r\n            gender: ['female','male'],\r\n            alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n            speed: '9m',\r\n            basic_languages: 'Common',\r\n            languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n            proficiency: [],\r\n        },\r\n        'Forest Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '10,5m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Mask of the Wild', 'Martial Arts'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n         },\r\n         'High Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '9m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Magic Trick', 'Martial Arts'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n             tricks: ['Dancing Lights','Light', 'Mage Hand', 'Message','Mending','Resistance','Acid Splash','Ray of Frost','Fire Bolt','Minor Illusion','Shocking Grasp','True Strike','Poison Spray','Prestidigitation','Chill Touch','Friendship']\r\n         },\r\n         'Drow - Dark Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Superior Darkvision - 36m','Fey Ancestry', 'Trance','Sunlight Sensitivity','Drow Magic', 'Drow Weapon Training'],\r\n             weapons: ['rapier', 'hand crossbow', 'short sword'],\r\n             tricks: ['Dancing Lights'],\r\n         },\r\n         'Mountain Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Dwarvish & Common',\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Armor Training', 'Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer','light armor','medium armor'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n         },\r\n         'Hill Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Dwarvish & Common',\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Toughness','Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n         },\r\n         'Halfling - Lightfoot': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Halfling & Common',\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Naturally Stealthy'],\r\n         },\r\n         'Halfling - Stout': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Halfling & Common',\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Stout Resilience'],\r\n         },\r\n         'Tiefling': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Infernal & Common',\r\n             proficiency: ['Darkvision - 18m', 'Hellish Resistance','Infernal Legacy','Stout Resilience'],\r\n             tricksStatic: ['thaumaturgy'],\r\n         },\r\n         'Dragonborn': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Draconic & Common',\r\n             proficiency: ['Draconic Ancestry', 'Breath Weapon','Damage Resistance'],\r\n             dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n         },\r\n         'Forest Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Gnomish & Common',\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Natural Illusionist','Speak with Small Beasts'],\r\n             tricksStatic: ['Minor Illusion']\r\n         },\r\n         'Rock Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Gnomish & Common',\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Artificer’s Lore','Tinker'],\r\n             toolsStatic: ['tinker`s tools']\r\n         },\r\n         'Half-Orc': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Orc & Common',\r\n             proficiency: ['Darkvision - 18m', 'Menacing','Relentless Endurance','Savage Attacks'],\r\n             skillsStatic: ['Persuasion']\r\n         },\r\n         'Half-Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Orc & Common',\r\n             proficiency: ['Darkvision - 18m', 'Fey Ancestry','Skill Versatility','Savage Attacks'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion']\r\n         }\r\n    },\r\n    class_char: {\r\n        'Barbarian': {\r\n            hit_dice: '1k12',\r\n            hit_points: 12,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows','longswords','rapiers','shortswords'],\r\n            saving_throws: ['Dexterity', 'Charisma'],\r\n            skills_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Intimidation', 'Nature', 'Perception', 'Survival'],\r\n            equip: ['An explorer’s pack and four javelins', ['(a) a greataxe', '(b) any martial melee weapon'], ['(a) two handaxes', '(b) any simple weapon']],\r\n            proficiency: ['Rage', 'Unarmored Defense']\r\n        },\r\n        'Bard': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 3,\r\n            tricks_pick: 2,\r\n            spells_pick: 4,\r\n            skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion'],\r\n            instruments: ['empty','Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            equip: ['Leather armor and a dagger', ['(a) a rapier', '(b) a longsword', '(c) any simple weapon'], ['(a) a diplomat’s pack', '(b) an entertainer’s pack'], ['(a) a lute', '(b) any other musical instrument']],\r\n            proficiency: ['Spellcasting','Bardic Inspiration'],\r\n            classTricks: ['empty','Dancing Lights','Friends','Light','Mage Hand','Message','Minor Illusion','Prestidigitation','Vicious Mockery','True Strike','Mending','Blade Ward'],\r\n            spells: ['empty','Animal Friendship','Bane','Charm Person','Comprehend Languages','Cure Wounds','Detect Magic','Disguise Self','Dissonant Whispers','Distort Value','Earth Tremor','Faerie Fire','Feather Fall','Healing Word','Heroism','Hideous Laughter','Identify','Illusory Script','Longstrider','Silent Image','Sleep','Speak with Animals','Tasha`s Hideous Laughter','Thunderwave','Unseen Servant'],\r\n        },\r\n        'Warlock': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            tricks_pick: 2,\r\n            spells_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Arcana', 'Deception', 'History', 'Intimidation', 'Investigation', 'Nature', 'Religion'],\r\n            equip: ['Leather armor, any simple weapon, and two daggers', ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a component pouch', '(b) an arcane focus'], ['(a) a scholar’s pack', '(b) a dungeoneer’s pack']],\r\n            proficiency: ['Otherworldly Patron','Pact Magic'],\r\n            classTricks: ['empty','Friends','Mage Hand','Minor Illusion','Prestidigitation','True Strike','Blade Ward','Chill Touch','Poison Spray','Eldritch Blast'],\r\n            spells: ['empty','Armor of Agathys','Arms of Hadar','Charm Person','Comprehend Languages','Cause Fear','Distort Value','Expeditious Retreat','Hellish Rebuke','Hex','Illusory Script','Protection from Evil and Good','With Bolt','Unseen Servant'],\r\n        },\r\n        'Druid': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['Clubs', 'daggers', 'darts', 'javelins', 'maces', 'quarterstaffs', 'scimitars', 'sickles', 'slings', 'spears'],\r\n            saving_throws: ['Wisdom', 'Intelligence'],\r\n            skills_pick: 2,\r\n            tricks_pick: 2,\r\n            spells_pick: 2,\r\n            skills: ['empty','Arcana', 'Animal Handling', 'Insight', 'Medicine', 'Nature', 'Perception', 'Religion', 'Survival'],\r\n            tools: ['Herbalism kit'],\r\n            equip: ['Leather armor, an explorer’s pack, and a druidic focus', ['(a) a wooden shield', '(b) any simple weapon'], ['(a) a scimitar', '(b) any simple melee weapon']],\r\n            proficiency: ['Druidic','Spellcasting'],\r\n            classTricks: ['empty','Mending','Thorn Whip','Resistance','Shillelagh','Guidance','Create Bonfire','Poison Spray'],\r\n            spells: ['empty','Faerie Fire','Fog Cloud','Goodberry','Thunderwave','Healing Word','Cure Wounds','Purify Food and Drink','Entangle','Animal Friendship','Speak with animals','Jump','Create or Destroy Water','Longstrider','Detect Magic','Charm Person','Detect Poison and Disease'],\r\n        },\r\n        'Cleric': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            tricks_pick: 3,\r\n            lang_pick: 2,\r\n            skills: ['empty','History', 'Insight', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['A shield and a holy symbol', ['(a) a mace', 'a warhammer (if proficient)'], ['(a) scale mail', '(b) leather armor', '(c) chain mail (if proficient)'], ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a priest’s pack', '(b) an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Divine Domain'],\r\n            classTricks: ['empty','Mending','Resistance','Guidance','Light','Sacred Flame','Spare the Dying','Thaumaturgy'],\r\n            domains: ['Knowledge','Life','Light','Nature','Tempest','Trickery','War'],\r\n            'Nature': {\r\n                pick: 1,\r\n                prof: ['Animal Handling','Nature','Survival'],\r\n            },\r\n            'Knowledge': {\r\n                pick: 2,\r\n                prof: ['Arcana','History','Nature','Religion'],\r\n            },\r\n            languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n        },\r\n        'Rogue': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows', 'longswords', 'rapiers', 'shortswords'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 4,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'Deception', 'Insight', 'Intimidation', 'Investigation', 'Perception', 'Performance', 'Persuasion', 'Sleight of Hand','Stealth'],\r\n            tools: ['Thieves’ tools'],\r\n            equip: ['Leather armor, two daggers, and thieves’ tools', ['(a) a rapier', 'a shortsword'], ['(a)a shortbow and quiver of 20 arrows', '(b) a shortsword'], ['(a) a burglar’s pack', '(b) a dungeoneer’s pack','(c) an explorer’s pack']],\r\n            proficiency: ['Expertise','Sneak Attack','Thieves’ Cant']\r\n        },\r\n        'Ranger': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 3,\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Insight', 'Investigation', 'Nature', 'Perception', 'Stealth'],\r\n            tools: [],\r\n            equip: ['A longbow and a quiver of 20 arrows', ['(a) scale mail', 'leather armor'], ['(a)two shortswords', '(b) two simple melee weapons'], ['(a) a dungeoneer’s pack', '(b) an explorer’s pack']],\r\n            proficiency: ['Favored Enemy','Natural Explorer'],\r\n            enemy: ['aberrations','beasts','celestials','constructs','dragons','elementals','fey','fiends','giants'],\r\n            terrain: ['arctic','coast','desert','forest','grassland','mountain','swamp','underdark'],\r\n        },\r\n        'Wizard': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Intelligence', 'Wisdom'],\r\n            skills_pick: 2,\r\n            tricks_pick: 3,\r\n            spells_pick: 6,\r\n            skills: ['empty','Arcana', 'History', 'Insight', 'Investigation', 'Medicine', 'Religion'],\r\n            tools: [],\r\n            equip: ['A spellbook', ['a quarterstaff', 'a dagger'], ['a component pouch', 'an arcane focus'], ['a scholar’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Arcane Recovery'],\r\n            classTricks: ['empty','Mending','Prestidigitation','Acid Splash','Mage Hand','Create Bonfire','Blade Ward','Minor Illusion','Shocking Grasp','True Strike','Ray of Frost','Chill Touch','Friends','Light','Dancing Lights','Poison Spray','Message'],\r\n            spells: ['empty','Alarm','Chromatic Orb','Expeditious Retreat','Fog Cloud','Thunderwave','False Life','Identify','Illusory Script','Color Spray','Magic Missile','Silent Image','Unseen Servant','Protection from Evil and Good','Tasha`s Hideous Laughter','Feather Fall','Burning Hands','Ray of Sickness','Disguise Self','Comprehend Languages','Jump','Longstrider','Shield','Grease','Sleep','Tenser`s Floating Disk','Witch Bolt','Detect Magic','Charm Person','Mage Armour','Find Familiar'],\r\n        },\r\n        'Monk': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: [],\r\n            weapons: ['Simple weapons, shortswords'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'History', 'Insight', 'Religion','Stealth'],\r\n            instruments: ['Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            tools: ['Alchemist’s supplies','Tinker’s tools','Glassblower’s tools','Jeweler’s tools','Brewer’s supplies','Smith’s tools','Cartographer’s tools','Mason’s tools','Calligrapher`s Supplies','Painter’s supplies','Potter’s tools','Carpenter’s tools','Cobbler’s tools','Leatherworker’s tools','Cook’s utensils','Weaver’s tools','Woodcarver’s tools'],\r\n            equip: ['10 darts', ['a shortsword', 'simple weapon'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Unarmored Defense','Martial Arts']\r\n        },\r\n        'Paladin': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armour', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Athletics', 'Insight', 'Intimidation', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Chain mail and a holy symbol', ['a martial weapon and a shield', 'two martial weapons'], ['five javelins', 'any simple melee weapon'], ['a priest’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Divine Sense','Lay on Hands']\r\n        },\r\n        'Fighter': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armour', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Animal Handling', 'Athletics', 'History', 'Insight', 'Intimidation', 'Perception', 'Survival'],\r\n            tools: [],\r\n            equip: [['chain mail', 'leather armor, longbow, and 20 arrows'], ['a martial weapon and a shield', 'two martial weapons'], ['a light crossbow and 20 bolts', 'two handaxes'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Fighting Style','Second Wind'],\r\n            fight_styles: ['Archery', 'Defense','Dueling','Great Weapon Fighting','Protection','Two-Weapon Fighting'],\r\n        },\r\n        'Sorcerer': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Charisma', 'Constitution'],\r\n            skills_pick: 2,\r\n            tricks_pick: 4,\r\n            spells_pick: 2,\r\n            skills: ['empty','Arcana', 'Deception', 'Insight', 'Intimidation', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Two daggers', ['a light crossbow and 20 bolts', 'any simple weapon'], ['a component pouch', 'an arcane focus'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Sorcerous Origin - Draconic Bloodline', 'Sorcerous Origin - Wild Magic'],\r\n            dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n            classTricks: ['Prestidigitation','Acid Splash','Mage Hand','Mending','Fire Bolt','Blade Ward','Minor Illusion','Shocking Grasp','True Strike','Ray of Frost','Chill Touch','Friends','Light','Dancing Lights','Poison Spray','Message'],\r\n            spells: ['Chromatic Orb','Expeditious Retreat','Fog Cloud','Thunderwave','False Life','Color Spray','Magic Missile','Silent Image','Feather Fall','Burning Hands','Ray of Sickness','Disguise Self','Comprehend Languages','Jump','Shield','Sleep','Witch Bolt','Detect Magic','Charm Person','Mage Armor'],\r\n        },\r\n    },\r\n}\r\n\r\nexport default data;","import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...data.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n       values,\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","import React, {useContext} from 'react';\r\nimport DataContext from './contexts/DataContext'; \r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nfunction FinalValues(props) {\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <>\r\n        <h3>Your species: {props.species}</h3>\r\n        <h3>Your profession: {props.profession}</h3>\r\n        <h3>Your abilities:</h3>\r\n        <TableContainer >\r\n            <Table className=\"abilities\" id=\"finalValues\"> \r\n                <TableHead>\r\n                    <TableRow> \r\n                        {props.abilities.map((ability, index) => (\r\n                            <TableCell key={index}>{ability}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow  id=\"values\">\r\n                        {data.finalValues.map((value, index) => (\r\n                            <TableCell key={index}>{value}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default FinalValues;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AbilityCells from './AbilityCells';\r\nimport Bonus from './Bonus';\r\nimport FinalValues from './FinalValues';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            abilities: ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'],\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n            defaultPicked: false,\r\n            numbersToShow: [],\r\n            final: false,\r\n        }\r\n\r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n        this.confirmMethod = this.confirmMethod.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        let pickable = [...features]\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: features, featuresUse: pickable, rolled: true}, this.context.update({rolled: pickable, defaultRolled: pickable}) );\r\n    }\r\n\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        let pickable = [...defaultNumbers];\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: defaultNumbers, features: pickable , rolled: true, defaultPicked: true});\r\n    }\r\n\r\n    confirmMethod() {\r\n        let state = [...this.context.actualState]\r\n        const bonus =  [...data.speciesBonus[this.props.species]];\r\n        for(let i=0; i < state.length; i++) {\r\n            if(bonus[i] === parseInt(bonus[i], 10)) state[i] += bonus[i]\r\n        }\r\n        this.props.buttonState('clicked');\r\n        this.setState({final: true}, this.context.update({finalValues: state, final: true}) );\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n   \r\n       \r\n        const rollsResults = (\r\n            <>\r\n                <h4>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.numbersToShow.toString()}</h4>\r\n               \r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\" id=\"abilities\"> \r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            \r\n                            <TableRow id=\"values\">\r\n                                <AbilityCells  abilities={this.state.abilities} default={this.state.features} features={this.state.featuresUse} defaultPicked={this.state.defaultPicked}/>  \r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <Bonus species ={this.props.species}/> \r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n                </Fade> \r\n                 <Button \r\n                    onClick={this.confirmMethod} \r\n                    disabled={this.context.notConfirmed}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"  \r\n                    style={{marginTop: \"26px\"}}\r\n                    >\r\n                        Confirm - One way ticket!\r\n                    </Button>                   \r\n                \r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        \r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        } else if(!this.state.final) {\r\n            return this.state.rolled ? rollsResults : rolling      \r\n        } else {\r\n            return (<FinalValues abilities = {this.state.abilities} species={this.props.species} profession={this.props.profession}/>)\r\n        }             \r\n       \r\n    }\r\n    \r\n}\r\nFeatures.contextType=DataContext;\r\nexport default Features;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass LanguagesPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('languages', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {data.species_char[species].languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nLanguagesPick.contextType=DataContext;\r\nexport default LanguagesPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass TrickPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick One magic trick</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tricks', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.tricks[0]}\r\n                >\r\n                      {data.species_char[species].tricks.map((trick,index) => (\r\n                        <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nTrickPick.contextType=DataContext;\r\nexport default TrickPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass ToolsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one artisan`s tool</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tools', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n            \r\n                >\r\n                      {(this.props.step === 4) ?\r\n                        data.species_char[species].tools.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                        )) :\r\n                        data.class_char[prof].tools.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                        )) \r\n                        }\r\n                  \r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nToolsPick.contextType=DataContext;\r\nexport default ToolsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass Dragons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Dragon</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('dragons', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.dragons}\r\n                >\r\n                      \r\n                      {data.species_char[species].dragons.map((dragon,index) => (\r\n                        <MenuItem  key={index} value={dragon}>{dragon}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDragons.contextType=DataContext;\r\nexport default Dragons;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nconst SkillsClass = (props) => {\r\n    const profession= props.profession\r\n    return (\r\n        <>\r\n        <h4>As {profession} You can pick {data.class_char[profession].skills_pick} additional skills.</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[profession].skills_pick} skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('classSkills', e.target.value)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n                required=\"true\"\r\n            >\r\n                    \r\n                    {data.class_char[profession].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SkillsClass;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\nimport HalfElf from './HalfElf';\r\nimport SkillsClass from './SkillsClass';\r\n\r\n\r\nfunction withSubscription(WrappedComponent, objKey) {\r\n    \r\n    return class Skills extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n        }\r\n        \r\n        render() {\r\n        \r\n            return (\r\n                \r\n                <>\r\n                 <WrappedComponent species={this.props.species} getValue= {this.props.getValue} profession={this.props.profession}/>\r\n                {(this.context.person[objKey].length !== 0) && <h4>You've picked {this.context.person[objKey].toString()}</h4>}\r\n               </> \r\n            )\r\n        }\r\n        \r\n    \r\n    }\r\n    \r\n}\r\n\r\nconst HalfelfSkills = withSubscription(HalfElf, 'skills');\r\nconst ClassSkills = withSubscription(SkillsClass, 'classSkills');\r\nHalfelfSkills.contextType = DataContext;\r\nClassSkills.contextType = DataContext;\r\n\r\n\r\nexport {\r\n    HalfelfSkills,\r\n    ClassSkills,\r\n}","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst HalfElf = (props) => {\r\n    return (\r\n        <>\r\n        <h4>As Half Elf You can pick two skills</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick two skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('skills', e)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n            >\r\n                    \r\n                    {data.species_char[props.species].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HalfElf;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LanguagesPick from './LanguagesPick';\r\nimport TrickPick from './TrickPick';\r\nimport ToolsPick from './ToolsPick';\r\nimport Dragons from './Dragons';\r\nimport {HalfelfSkills} from './Skills';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpeciesChar extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            name: '',\r\n            gender: '',\r\n            alignment: '',\r\n            languages: [],\r\n            tricks: [],\r\n            tools:[],\r\n            dragons: [],\r\n            skills: [],\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let char = this.state;\r\n        // if(prevState.name !== char.name && prevState.gender !== char.gender && prevState.alignment !== char.alignment && prevProps.button === true) this.handleData();\r\n        if(prevState.name !== char.name) {\r\n            this.context.updatePerson('name',char.name);\r\n        }\r\n        if(prevState.gender !== char.gender) {\r\n            this.context.updatePerson('gender',char.gender);\r\n        }\r\n        if(prevState.alignment !== char.alignment) {\r\n            this.context.updatePerson('alignment',char.alignment);\r\n        }\r\n        if(prevState.languages !== char.languages) {\r\n            this.context.updatePerson('languages',char.languages);\r\n        }\r\n        if(prevState.tricks !== char.tricks) {\r\n            this.context.updatePerson('tricks',char.tricks);\r\n        }\r\n        if(prevState.tools !== char.tools) {\r\n            this.context.updatePerson('tools',char.tools);\r\n        }\r\n        if(prevState.dragons !== char.dragons) {\r\n            this.context.updatePerson('dragons',char.dragons);\r\n        }\r\n        if(prevState.skills !== char.skills) {\r\n            this.context.updatePerson('skills',char.skills, 1);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getValue(key, event) {\r\n        const data = event.target.value;\r\n        this.setState({[key]: data}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let char = this.state;\r\n        const species = this.props.species;\r\n        if(char.name !== '' && char.gender !== '' && char.alignment !== '') {\r\n            if(species === 'Drow - Dark Elf' || species === 'Forest Elf' || species === 'Halfling - Lightfoot' || species === 'Halfling - Stout' || species === 'Tiefling' || species === 'Forest Gnome' || species === 'Rock Gnome' || species === 'Half-Orc') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Human' && char.languages.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Half-Elf' && char.languages.length !== 0 && this.context.person.skills.length === 2) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'High Elf' && char.languages.length !== 0 && char.tricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Mountain Dwarf' && char.tools.length !== 0 || species === 'Hill Dwarf' && char.tools.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Dragonborn' && char.dragons.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        if (this.props.currentStep !== 4) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div><h2>Brave {species}. Tell us more about Yourself</h2></div>\r\n            <form className='charData' noValidate autoComplete=\"off\">\r\n                <TextField onChange={(e) =>this.getValue('name', e)} id=\"standard-basic\" label=\"Your name\" value={this.context.person.name} />\r\n                <TextField onChange={(e) =>this.getValue('gender', e)} id=\"standard-basic2\" label=\"Your gender\" value={this.context.person.gender} />\r\n                <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Alignment</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.getValue('alignment', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.alignment}\r\n                >\r\n                      \r\n                    {data.species_char[species].alignment.map((align,index) => (\r\n                        <MenuItem  key={index} value={align}>{align}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {(this.props.species === 'Human' || this.props.species === 'High Elf' || this.props.species === 'Half-Elf') && <LanguagesPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'High Elf') && <TrickPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Mountain Dwarf' || this.props.species === 'Hill Dwarf') && <ToolsPick getValue= {this.getValue}  profession={this.props.profession} step={this.props.currentStep} species = {this.props.species}/>}\r\n                {(this.props.species === 'Dragonborn') && <Dragons getValue= {this.getValue} species = {this.props.species}/>}\r\n                \r\n            </FormControl>\r\n            </form>\r\n                {(this.props.species === 'Half-Elf') && <HalfelfSkills getValue= {this.getValue} species = {this.props.species}/>}        \r\n            {(species !== 'Human') && \r\n                <h3>As {species}, You have proficiences: <br/>{data.species_char[species].proficiency.toString()}</h3>\r\n            }\r\n          \r\n            \r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nSpeciesChar.contextType=DataContext;\r\nexport default SpeciesChar;","\r\n\r\nconst modificator = (values) => {\r\n    let mods = [];\r\n   values.forEach(value => {\r\n        for(let i = -5, b=1; i < 11; i ++) {\r\n            if(value <= b) {\r\n                mods.push(i);\r\n                break;\r\n            }\r\n            b += 2;\r\n        }\r\n    });\r\n    return mods;\r\n}\r\n\r\nexport default {\r\n    modificator,\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass Equip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.context);\r\n        const profession = this.props.profession;\r\n       \r\n        console.log(this.state);\r\n        const standard = (\r\n            <>\r\n                <h3>Your equipment.</h3>\r\n                {data.class_char[profession].equip.map((item, index) => {\r\n                    if(typeof item === \"string\") {\r\n                        return (\r\n                            <p>You have {item} in your equipment. Pick the rest.</p>\r\n                        )\r\n                    } else {\r\n                        let eq;\r\n                        if(profession === 'Fighter') {\r\n                            eq = `equip${index+1}`;\r\n                        } else {eq = `equip${index}`;}\r\n                        \r\n                        return (\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Pick one from these:</FormLabel>\r\n                                    <RadioGroup aria-label=\"equipment\" name={eq} onChange={(e)=> this.props.getValue(eq, e.target.value)}>\r\n                                        {item.map((el,i) => (\r\n                                            <FormControlLabel key={i}  value={el} control={<Radio />} label={el}/>     \r\n                                        ))}\r\n                                    </RadioGroup>   \r\n                                </FormControl>  \r\n                        )\r\n                            \r\n                            \r\n                    }\r\n                })}\r\n            </>\r\n        );\r\n        return standard;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nEquip.contextType=DataContext;\r\nexport default Equip;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass Instruments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"instruments pick\">\r\n               {profession === \"Bard\" && <h4>You are musician! Pick your three best instruments</h4>}\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">{profession === 'Bard' ? 'Pick three instruments' : 'Pick one instrument'}</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('instruments', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >\r\n                        \r\n                        {data.class_char[profession].instruments.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n                {(this.context.person.instruments.length !== 0) && <h4>You've picked {this.context.person.instruments.toString()}</h4>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nInstruments.contextType=DataContext;\r\nexport default Instruments;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\nclass ClassTricks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        let key;\r\n        let numb;\r\n        if(this.context.person.domain === 'Nature' && prof === 'Druid') {\r\n            key = 'deityTricks';\r\n            numb = 1;\r\n        } else { \r\n            key = 'classTricks'\r\n            numb = data.class_char[prof].tricks_pick;\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"tricks pick\">\r\n                {(this.context.person.domain === 'Nature' && prof === 'Druid') ? \r\n                <h4>As Nature Cleric You can pick 1 Druid trick</h4> \r\n                : <h4>As {prof} You can pick {data.class_char[prof].tricks_pick} tricks</h4>\r\n                }\r\n                 \r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {numb} magic trick(s)</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue(key, e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    >  \r\n                        {data.class_char[prof].classTricks.map((trick,index) => (\r\n                            <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {(this.context.person.classTricks.length !== 0 && this.props.mainpick) && <h4>You've picked {this.context.person.classTricks.toString()}</h4>}\r\n            </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nClassTricks.contextType=DataContext;\r\nexport default ClassTricks;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpellsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        return (\r\n            \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As {prof} You can pick {data.class_char[prof].spells_pick} spells</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof].spells_pick} spells</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.props.getValue('spells', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {(prof === 'Warlock') ? \r\n                    this.props.spells.map((spell,index) => (\r\n                        <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                    ))\r\n                  : data.class_char[prof].spells.map((spell,index) => (\r\n                    <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                ))\r\n\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.spells.length !== 0) && <h4>You've picked {this.context.person.spells.toString()}</h4>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nSpellsPick.contextType=DataContext;\r\nexport default SpellsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass ProficiencyPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        const domain = this.context.person.domain;\r\n        return (\r\n            \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As {domain} Cleric You can pick {data.class_char[prof][domain].pick} additional skill(s)</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof][domain].pick} skill(s)</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.props.getValue('deityProf', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {data.class_char[prof][domain].prof.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))\r\n\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.deityProf.length !== 0) && <h4>You've picked {this.context.person.deityProf.toString()}</h4>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nProficiencyPick.contextType=DataContext;\r\nexport default ProficiencyPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass AddLang extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        return (\r\n            \r\n            <>\r\n            <h4>You can pick {data.class_char[prof].lang_pick} languages</h4>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('addLang', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >   \r\n                      {data.class_char[prof].languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.addLang.length !== 0) && <h4>You've picked {this.context.person.addLang.toString()}</h4>}\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nAddLang.contextType=DataContext;\r\nexport default AddLang;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\nimport ClassTricks from './ClassTricks';\r\nimport ProficiencyPick from './ProficiencyPick';\r\nimport AddLang from './AddLang';\r\n\r\nclass Domain extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.domainEffects = this.domainEffects.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n    }\r\n\r\n\r\n    domainEffects(domain) {\r\n        if(domain === 'Tempest') {\r\n            this.context.addValue('armour','martial weapons','heavy armour','classSpells','Fog Cloud','Thunderwave');\r\n        } else if (domain === 'Nature') {\r\n            this.context.addValue('classSpells','Animal Friendship','Speak with animals','armour','heavy armour');\r\n        } else if (domain === 'Trickery') {\r\n            this.context.addValue('classSpells','Charm Person','Disguise Self');\r\n        } else if (domain === 'Light') {\r\n            this.context.addValue('classSpells','Burning Hands','Faerie Fire','classTricks','Light');\r\n        } else if (domain === 'Knowledge') {\r\n            this.context.addValue('classSpells','Identify','Command','classTricks','Light');\r\n        } else if (domain === 'War') {\r\n            this.context.addValue('classSpells','Divine Favor','Shield of Faith','armour','martial weapons','heavy armour');\r\n        } else if (domain === 'Life') {\r\n            this.context.addValue('classSpells','Cure Wounds','\tBless','armour','heavy armour');\r\n        }\r\n        this.props.getValue('domain', domain);\r\n    }\r\n\r\n\r\n    getValue(key, event) {\r\n        this.props.getValue(key, event)\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        const nature = (\r\n            <>\r\n            <ClassTricks profession={'Druid'} mainpick={false} getValue={this.getValue}/>\r\n            <ProficiencyPick profession={'Cleric'} getValue={this.getValue}/>\r\n            </>\r\n        )\r\n\r\n        const knowledge = (\r\n            <>\r\n            <ProficiencyPick profession={'Cleric'} getValue={this.getValue}/>\r\n            <AddLang profession={prof} getValue={this.getValue}/>\r\n            </>\r\n        )\r\n\r\n        return ( \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As Cleric You have to choose one domain related to your deity</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one domain</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.domainEffects(e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {data.class_char['Cleric'].domains.map((domain,index) => (\r\n                    <MenuItem  key={index} value={domain}>{domain}</MenuItem>\r\n                ))\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.domain === 'Nature') && nature}\r\n            {(this.context.person.domain === 'Knowledge') && knowledge}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDomain.contextType=DataContext;\r\nexport default Domain;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nclass Ranger extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"enemy pick\">\r\n               <h4>Ranger! Pick your best enemy</h4>\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one enemy</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('enemy', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >  \r\n                        {data.class_char[profession].enemy.map((enemy,index) => (\r\n                        <MenuItem  key={index} value={enemy}>{enemy}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n                <h4>Pick your favorite type of terrain for rangering</h4>\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one type of land</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('terrain', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >  \r\n                        {data.class_char[profession].terrain.map((terrain,index) => (\r\n                        <MenuItem  key={index} value={terrain}>{terrain}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Ranger;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nclass Fighter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"enemy pick\">\r\n               <h4>Fighter! Pick your fighting style!</h4>\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one fighting style</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('fight_style', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >  \r\n                        {data.class_char[profession].fight_styles.map((style,index) => (\r\n                        <MenuItem  key={index} value={style}>{style}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Fighter;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport modificatorService from './services/modificator';\r\nimport {ClassSkills} from './Skills';\r\nimport Equip from './Equip';\r\nimport Instruments from './Instruments';\r\nimport ClassTricks from './ClassTricks';\r\nimport SpellsPick from './SpellsPick';\r\nimport Button from '@material-ui/core/Button';\r\nimport Domain from './Domain';\r\nimport Ranger from './Ranger';\r\nimport ToolsPick from './ToolsPick';\r\nimport Fighter from './Fighter';\r\n\r\nclass ClassChar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classSkills: [],\r\n            instruments: [],\r\n            classTricks: [],\r\n            spells: [],\r\n            warlock: false,\r\n            warlock_spells: [],\r\n            domain: '',\r\n            deityTricks:[],\r\n            deityProf:[],\r\n            addLang: [],\r\n            equip1: [],\r\n            equip2: [],\r\n            equip3: [],\r\n            equip4: [],\r\n            enemy: '',\r\n            terrain: '',\r\n            patron: '',\r\n            monk_instr: false,\r\n            monk_tools: false,\r\n            tools: [],\r\n            fight_style: '',\r\n        }\r\n\r\n        this.getValue = this.getValue.bind(this);\r\n        this.handleData = this.handleData.bind(this);\r\n        this.setPatron = this.setPatron.bind(this);\r\n        this.setChoice = this.setChoice.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let atr = this.state;\r\n        const profession = this.props.profession;\r\n        const deity = this.context.person.domain;\r\n        if(prevProps.currentStep !== this.props.currentStep) {\r\n        const mods = modificatorService.modificator(this.props.finals);\r\n        this.context.updatePerson('mods', mods);\r\n        }\r\n        if(prevProps.profession !== profession) {\r\n           if(prevProps.profession === 'Druid') this.context.cleanValue('languages');\r\n           if(profession === 'Druid') this.context.updatePerson('languages', 'Druidic');\r\n        }\r\n        if(prevState.classSkills !== atr.classSkills) {\r\n            this.context.updatePerson('classSkills', atr.classSkills, data.class_char[profession].skills_pick - 1);\r\n        }\r\n        if(prevState.equip1 !== atr.equip1) {\r\n            this.context.updatePerson('equip1', atr.equip1);\r\n        }\r\n        if(prevState.equip2 !== atr.equip2) {\r\n            this.context.updatePerson('equip2', atr.equip2);\r\n        }\r\n        if(prevState.equip3 !== atr.equip3) {\r\n            this.context.updatePerson('equip3', atr.equip3);\r\n        }\r\n        if(prevState.equip4 !== atr.equip4) {\r\n            this.context.updatePerson('equip4', atr.equip4);\r\n        }\r\n        if(prevState.instruments !== atr.instruments) {\r\n            this.context.updatePerson('instruments', atr.instruments, (profession === 'Bard') ? 2 : 0); \r\n        }\r\n        if(prevState.classTricks !== atr.classTricks) {\r\n            \r\n            this.context.updatePerson('classTricks', atr.classTricks, (deity === 'Light') ? 3 : data.class_char[profession].tricks_pick - 1); \r\n        }\r\n        if(prevState.spells !== atr.spells) {\r\n            this.context.updatePerson('spells', atr.spells, data.class_char[profession].spells_pick - 1); \r\n        }\r\n        if(prevState.domain !== atr.domain) {\r\n            this.context.updatePerson('domain', atr.domain); \r\n        }\r\n        if(prevState.deityTricks !== atr.deityTricks) {\r\n            this.context.updatePerson('deityTricks', atr.deityTricks); \r\n        }\r\n        if(prevState.deityProf !== atr.deityProf) {\r\n            this.context.updatePerson('deityProf', atr.deityProf, data.class_char[profession][deity].pick - 1); \r\n        }\r\n        if(prevState.addLang !== atr.addLang) {\r\n            this.context.updatePerson('addLang', atr.addLang, data.class_char[profession].lang_pick - 1); \r\n        }\r\n        if(prevState.enemy !== atr.enemy) {\r\n            this.context.updatePerson('enemy', atr.enemy); \r\n        }\r\n        if(prevState.terrain !== atr.terrain) {\r\n            this.context.updatePerson('terrain', atr.terrain); \r\n        }\r\n        if(prevState.patron !== atr.patron) {\r\n            this.context.updatePerson('patron', atr.patron); \r\n        }\r\n        if(prevState.tools !== atr.tools) {\r\n            this.context.updatePerson('tools', atr.tools); \r\n        }\r\n        if(prevState.fight_style !== atr.fight_style) {\r\n            this.context.updatePerson('fight_style', atr.fight_style); \r\n        }\r\n\r\n    }\r\n\r\n    getValue(key, event) {\r\n        if(key === 'tools') {\r\n            this.setState({[key]: event.target.value}, this.handleData);\r\n        } else {\r\n            this.setState({[key]: event}, this.handleData);\r\n        }\r\n        \r\n    }\r\n\r\n    handleData() {\r\n        let atr = this.state;\r\n        const prof = this.props.profession;\r\n        if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n            if(prof === 'Barbarian') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(prof === 'Bard' && atr.equip3.length !== 0 && atr.instruments.length !== 0 && atr.spells.length !== 0 && atr.classTricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Warlock' || prof === 'Wizard' || prof === 'Sorcerer') && atr.equip3.length !== 0 && atr.spells.length !== 0 && atr.classTricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Druid') && atr.classTricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Cleric') && atr.equip3.length !== 0 && atr.equip4.length !== 0 && atr.classTricks.length !== 0 && atr.domain.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Rogue' || prof === 'Paladin') && atr.equip3.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Ranger') && atr.equip3.length !== 0 && atr.enemy.length !== 0 && atr.terrain.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Monk') && (atr.tools.length !== 0 || atr.instruments.length !== 0 )) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Fighter') && atr.equip3.length !== 0 && atr.equip4.length !== 0 && atr.fight_style.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    setPatron(patron) {\r\n        let spells = [...data.class_char['Warlock'].spells];\r\n        if(patron === 'arcyfey') {\r\n            spells.push('Faerie Fire', 'Sleep')\r\n        } else if(patron === 'fiend') {\r\n            spells.push('Burning hands', 'Command')\r\n        } else {\r\n            spells.push('Bane', 'False life')\r\n        }\r\n        console.log(spells)\r\n        this.setState({warlock_spells: spells, warlock: true, patron})\r\n    }\r\n\r\n    setChoice(choice) {\r\n        if(choice === 'tools') {\r\n            this.context.cleanValue('instruments');\r\n            this.setState({monk_instr: false, monk_tools: true})\r\n        } else {\r\n            this.context.cleanValue('tools');\r\n            this.setState({monk_instr: true, monk_tools: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log(this.context.person);\r\n        console.log(this.props.currentStep);\r\n        const profession = this.props.profession;\r\n  \r\n        if (this.props.currentStep !== 5) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"classAtr\"><h2>Brave {this.context.person.name}!</h2>\r\n            <h3>As {profession}:</h3>\r\n            <p><strong>Your class proficiencies are:</strong> {data.class_char[profession].proficiency.toString()}</p>\r\n            <p><strong>You have fighting proficiency in:</strong></p>\r\n                <ul>\r\n                    <li><strong>Armour:</strong> {data.class_char[profession].armor.toString()}</li>\r\n                    <li><strong>Weapon:</strong> {data.class_char[profession].weapons.toString()}</li>\r\n                    {(profession !== 'Bard' && profession !== 'Monk') && data.class_char[profession].tools.length !== 0 ?\r\n                    <p><strong>You have tools proficiency in:</strong> {data.class_char[profession].tools.toString()}</p>\r\n                    : <></>}\r\n                    \r\n                </ul>\r\n          \r\n            <p>Your HitDice is: {data.class_char[profession].hit_dice}</p>\r\n            <p>Your current Hit Points are: {data.class_char[profession].hit_points + this.context.person.mods[2]}</p>\r\n            {/* <h4>As {this.props.profession} You can pick {data.class_char[profession].skills_pick} skills from the list</h4>   */}\r\n            <ClassSkills profession={this.props.profession} getValue={this.getValue}/>\r\n            <Equip profession={this.props.profession} getValue={this.getValue}/>\r\n            {(profession === 'Bard') && <Instruments profession={profession} getValue={this.getValue}/>}\r\n            {(profession === 'Bard' || profession === 'Warlock' || profession === 'Druid' || profession === 'Cleric' || profession === 'Wizard' || profession === 'Sorcerer') && <ClassTricks profession={profession} mainpick={true} getValue={this.getValue}/>}\r\n            {(profession === 'Bard' || profession === 'Wizard' || profession === 'Sorcerer') && <SpellsPick profession={profession} getValue={this.getValue}/>}\r\n\r\n            {(profession === 'Warlock') &&\r\n                <div className=\"patrons\">\r\n                    <h4>Pick Your Otherworldly Patron</h4>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('arcyfey')}>Arcyfey</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('fiend')}>The Fiend</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('undead')}>The Undead</Button>\r\n                </div>\r\n            }\r\n            {(profession === 'Warlock' && this.state.warlock) && <SpellsPick profession={profession} getValue={this.getValue} spells={this.state.warlock_spells}/>}\r\n            {(profession === 'Cleric') && <Domain profession={profession} getValue={this.getValue}/>}\r\n            {(profession === 'Ranger') && <div><Ranger profession={profession} getValue={this.getValue}/></div>}\r\n            {(profession === 'Monk') &&\r\n                <div className=\"patrons\">\r\n                    <h4>Pick one tool or one intrument</h4>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setChoice('tools')}>Pick tool</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setChoice('instrument')}>Pick instrument</Button>\r\n                </div>\r\n            }\r\n             {(this.state.monk_tools) && <ToolsPick profession = {profession} getValue={this.getValue} step={this.props.currentStep}/>}\r\n             {(this.state.monk_instr) && <Instruments profession = {profession} getValue={this.getValue} step={this.props.currentStep}/>}   \r\n             {(profession === 'Fighter') && <div><Fighter profession={profession} getValue={this.getValue}/></div>}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nClassChar.contextType=DataContext;\r\nexport default ClassChar;","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport SpeciesChar from './SpeciesChar';\r\nimport ClassChar from './ClassChar';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass MultiForm extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this.next = this.next.bind(this);\r\n    this.prev = this.prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n\r\n prev() {\r\n    let currentStep = this.state.currentStep\r\n    if(currentStep === 3) this.context.update({default: this.context.defaultStatic, rolled: this.context.defaultRolled, notConfirmed: true, actualState: ['','','','','','']})\r\n \r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 5 ? 6: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n  if(this.state.currentStep === 3 && this.context.final) this.setState({button:false});\r\n }\r\n\r\n  render () {\r\n    let currentStep = this.state.currentStep;\r\n    const previousButton = (\r\n      <Button className=\"previous\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        disabled={this.context.final && currentStep === 3}\r\n        onClick={this.prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button className=\"next\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this.next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1>Your Character Generator</h1>\r\n          </header>\r\n          <main>\r\n          {}\r\n            <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Features buttonState={this.handleButton} species={this.state.species} profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n            <SpeciesChar buttonState={this.handleButton} button={this.state.button} profession={this.state.profession} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <ClassChar finals={this.context.finalValues} profession={this.state.profession} buttonState={this.handleButton} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <div className=\"buttons\">\r\n              {currentStep !== 1 && previousButton}\r\n              {currentStep < 6 && nextButton } \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMultiForm.contextType=DataContext;\r\nexport default MultiForm;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport DataProvider from './contexts/DataProvider';\r\nimport MultiForm from './MultiForm';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    return (\r\n      <DataProvider>\r\n        <MultiForm/>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}