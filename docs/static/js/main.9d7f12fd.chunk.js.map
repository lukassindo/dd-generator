{"version":3,"sources":["contexts/DataContext.js","contexts/DataProvider.js","img/dd.png","Species.js","Classes.js","services/roll.js","AbilityCells.js","Bonus.js","FinalValues.js","Features.js","MultiForm.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","React","createContext","DataProvider","props","updateState","bind","state","speciesBonus","defaultStatic","default","rolled","defaultRolled","actualState","notConfirmed","finalValues","final","update","species_char","gender","alignment","speed","basic_languages","languages","proficiency","values","this","setState","Provider","value","children","Component","Species","species","picked","handleData","event","target","buttonState","currentStep","FormControl","className","InputLabel","style","color","id","Select","onChange","labelId","placeholer","map","index","MenuItem","Classes","classes","prof","featuresNumbers","rolls","results","i","k6","Math","floor","random","push","sort","a","b","shift","sum","reduce","total","num","AbilityCells","features","changeValue","copy","data","context","defaultPicked","length","parseInt","splice","every","abilities","ability","TableCell","e","def","feature","contextType","Bonus","bonus","item","bon","textAlign","padding","FinalValues","useContext","profession","TableContainer","Table","TableHead","TableRow","TableBody","Features","featuresUse","numbersToShow","rollMethod","useDefault","confirmMethod","serviceRoll","pickable","unshift","defaultNumbers","rollsResults","toString","Fade","in","Button","onClick","disabled","variant","marginTop","rolling","MultiForm","button","name","handleUserData","_next","_prev","handleButton","checkButtons","key","childData","console","log","previousButton","borderColor","size","nextButton","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAIeA,EAFKC,IAAMC,gBCsJXC,E,kDAnJd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,MAAQ,CACHC,aAAc,CACV,MAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,WAAY,CAAC,GAAI,EAAE,GAAG,EAAE,GAAG,IAC3B,aAAc,CAAC,GAAG,EAAG,GAAI,GAAI,EAAG,IAChC,kBAAmB,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAClC,iBAAkB,CAAC,EAAE,GAAI,EAAE,GAAG,GAAG,IACjC,aAAc,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,IAC5B,uBAAwB,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GACvC,mBAAoB,CAAC,GAAI,EAAG,EAAG,GAAI,GAAG,IACtC,eAAgB,CAAC,GAAG,EAAE,GAAG,EAAG,GAAG,IAC/B,aAAc,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,IAC5B,SAAY,CAAC,GAAG,GAAG,GAAG,EAAG,GAAG,GAC5B,WAAc,CAAC,EAAG,GAAG,GAAG,GAAG,GAAG,GAC9B,WAAY,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAC3B,WAAY,CAAC,EAAG,GAAG,EAAG,GAAG,GAAG,KAEjCC,cAAgB,CAAC,QAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7CC,QAAU,CAAC,QAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,GACvCC,OAAQ,GACRC,cAAe,GACfC,YAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IACnCC,cAAc,EACRC,YAAa,GACbC,OAAO,EACPC,OAAQ,EAAKZ,YACba,aAAe,CACX,MAAS,CACLC,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,KACPC,gBAAiB,SACjBC,UAAW,CAAC,SAAS,WAAW,QAAQ,UAAU,SAAS,WAAW,MAAM,WAAY,aAE5F,aAAc,CACTJ,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,mBAC1FC,MAAO,QACPC,gBAAiB,kBACjBE,YAAa,CAAC,mBAAmB,eAAgB,SAAS,mBAAoB,iBAElF,WAAY,CACRL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,mBAC1FC,MAAO,KACPC,gBAAiB,kBACjBE,YAAa,CAAC,mBAAmB,eAAgB,SAAS,cAAe,gBACzED,UAAW,CAAC,SAAS,WAAW,QAAQ,UAAU,SAAS,WAAW,QAE1E,kBAAmB,CACfJ,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,gBACzCC,MAAO,KACPC,gBAAiB,kBACjBE,YAAa,CAAC,4BAA4B,eAAgB,SAAS,uBAAuB,aAAc,yBAE5G,iBAAkB,CACdL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,OACPC,gBAAiB,oBACjBE,YAAa,CAAC,mBAAmB,qBAAsB,0BAA0B,mBAAmB,eAAgB,2BAExH,aAAc,CACVL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,OACPC,gBAAiB,oBACjBE,YAAa,CAAC,mBAAmB,qBAAsB,0BAA0B,mBAAmB,eAAgB,sBAExH,uBAAwB,CACpBL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,OACPC,gBAAiB,oBACjBE,YAAa,CAAC,QAAS,QAAQ,sBAAsB,uBAEzD,mBAAoB,CAChBL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,OACPC,gBAAiB,oBACjBE,YAAa,CAAC,QAAS,QAAQ,sBAAsB,qBAEzD,SAAY,CACRL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,KACPC,gBAAiB,oBACjBE,YAAa,CAAC,mBAAoB,qBAAqB,kBAAkB,qBAE7E,WAAc,CACVL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,KACPC,gBAAiB,oBACjBE,YAAa,CAAC,oBAAqB,gBAAgB,sBAEvD,eAAgB,CACZL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,OACPC,gBAAiB,mBACjBE,YAAa,CAAC,mBAAoB,gBAAgB,sBAAsB,4BAE5E,aAAc,CACVL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,OACPC,gBAAiB,mBACjBE,YAAa,CAAC,mBAAoB,gBAAgB,wBAAmB,WAEzE,WAAY,CACRL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,KACPC,gBAAiB,eACjBE,YAAa,CAAC,mBAAoB,WAAW,uBAAuB,mBAExE,WAAY,CACRL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzIC,MAAO,KACPC,gBAAiB,eACjBE,YAAa,CAAC,mBAAoB,eAAe,oBAAoB,qBA/HrE,E,wDAsIPC,GACXC,KAAKC,SAASF,K,+BAId,OACC,cAAC,EAAYG,SAAb,CAAsBC,MAAOH,KAAKnB,MAAlC,SACEmB,KAAKtB,MAAM0B,e,GA/IW7B,IAAM8B,W,QCHlB,MAA0B,+B,oCC+D1BC,E,kDArDX,WAAY5B,GAAQ,IAAD,8BACf,cAAMA,IAEDG,MAAQ,CACT0B,QAAU,CAAC,QAAS,WAAY,aAAc,kBAAmB,iBAAkB,aAAa,uBAAwB,mBAAmB,WAAW,aAAc,eAAgB,aAAc,WAAW,YAC7MC,OAAQ,IAIZ,EAAKC,WAAa,EAAKA,WAAW7B,KAAhB,gBATH,E,uDAaR8B,GACPV,KAAKtB,MAAM+B,WAAW,UAAUC,EAAMC,OAAOR,OAC7CH,KAAKC,SAAS,CAACO,OAAQE,EAAMC,OAAOR,QACpCH,KAAKtB,MAAMkC,YAAY,a,+BAMvB,OAA+B,IAA3BZ,KAAKtB,MAAMmC,YACJ,KAKP,mCACC,eAACC,EAAA,EAAD,CAAaC,UAAU,UAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,+BACD,cAACC,EAAA,EAAD,CACIC,SAAUrB,KAAKS,WACfa,QAAQ,2BACRH,GAAG,qBACHhB,MAAQH,KAAKnB,MAAM2B,OACnBe,WAAW,QACXN,MAAO,CAACC,MAAO,QANnB,SASKlB,KAAKnB,MAAM0B,QAAQiB,KAAI,SAACjB,EAAQkB,GAAT,OACpB,cAACC,EAAA,EAAD,CAAuBvB,MAAOI,EAA9B,SAAwCA,GAAxBkB,iB,GA1ClBlD,IAAM8B,WCqDbsB,E,kDAlDX,WAAYjD,GAAQ,IAAD,8BACf,cAAMA,IAEDG,MAAQ,CACT+C,QAAU,CAAC,YAAY,OAAO,SAAS,QAAQ,UAAU,OAAO,UAAU,SAAS,QAAQ,WAAW,UAAU,UAChHpB,OAAQ,IAGZ,EAAKC,WAAa,EAAKA,WAAW7B,KAAhB,gBARH,E,uDAYR8B,GACPV,KAAKtB,MAAM+B,WAAW,aAAaC,EAAMC,OAAOR,OAChDH,KAAKC,SAAS,CAACO,OAAQE,EAAMC,OAAOR,QACpCH,KAAKtB,MAAMkC,YAAY,a,+BAKvB,OAA+B,IAA3BZ,KAAKtB,MAAMmC,YACJ,KAKP,mCACC,eAACC,EAAA,EAAD,CAAaC,UAAU,UAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,8BACD,cAACC,EAAA,EAAD,CACIC,SAAUrB,KAAKS,WACfa,QAAQ,2BACRH,GAAG,qBACHhB,MAAQH,KAAKnB,MAAM2B,OACnBS,MAAO,CAACC,MAAO,QALnB,SAQKlB,KAAKnB,MAAM+C,QAAQJ,KAAI,SAACK,EAAKJ,GAAN,OACpB,cAACC,EAAA,EAAD,CAAuBvB,MAAO0B,EAA9B,SAAqCA,GAArBJ,iB,GAvClBlD,IAAM8B,W,iBCkBb,EA7BF,WAGT,IAFA,IAAIyB,EAAkB,GAClBC,EAAQ,EACNA,EAAQ,GAAI,CAId,IAFA,IAAIC,EAAU,GACVC,EAAI,EACFA,EAAI,GAAG,CACT,IAAIC,EAAKC,KAAKC,MAAqB,EAAfD,KAAKE,UAAe,EACxCL,EAAQM,KAAKJ,GACbD,IAGJD,EACKO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACnBC,QAEL,IAAMC,EAAMX,EAAQY,QAAO,SAACC,EAAOC,GAC/B,OAAOD,EAAQC,KAGnBhB,EAAgBQ,KAAKK,GACrBZ,IAIJ,OAAOD,G,+DCjBLiB,E,kDACF,WAAYrE,GAAQ,IAAD,8BACf,cAAMA,IAEDG,MAAQ,CACTG,QAASN,EAAMM,QACfgE,SAAUtE,EAAMsE,UAGpB,EAAKC,YAAc,EAAKA,YAAYrE,KAAjB,gBARJ,E,wDAYP6C,EAAOf,GACf,IAEIwC,EAFAC,EAAOzC,EAAMC,OAAOR,MACpBhB,EAAW,YAAOa,KAAKoD,QAAQjE,aAG/B+D,EADDlD,KAAKtB,MAAM2E,cACN,YAAOrD,KAAKoD,QAAQpE,SAEpB,YAAOgB,KAAKoD,QAAQnE,QAE5B,IAAK,IAAIgD,EAAI,EAAGA,EAAIiB,EAAKI,OAAQrB,IAC7B,GAAKiB,EAAKjB,KAAOkB,GAAQA,IAASI,SAASJ,EAAM,IAAK,CAClDD,EAAKM,OAAOvB,EAAG,GACf,MAGL9C,EAAYsC,KAAW8B,SAASpE,EAAYsC,GAAQ,KAAKyB,EAAKZ,KAAKnD,EAAYsC,IAClFtC,EAAYsC,GAAS0B,EACjBhE,EAAYsE,OAAM,SAAAtD,GAAK,OAAIA,IAAUoD,SAASpD,EAAO,QAClDH,KAAKtB,MAAM2E,eAAerD,KAAKoD,QAAQ7D,OAAO,CAACP,QAASkE,EAAM9D,cAAc,EAAOD,gBACtFa,KAAKoD,QAAQ7D,OAAO,CAACN,OAAQiE,EAAM9D,cAAc,EAAOD,kBAErDa,KAAKtB,MAAM2E,eAAerD,KAAKoD,QAAQ7D,OAAO,CAACP,QAASkE,EAAM9D,cAAc,EAAMD,gBACrFa,KAAKoD,QAAQ7D,OAAO,CAACN,OAAQiE,EAAM9D,cAAc,EAAMD,mB,+BAMrD,IAAD,OACL,OACI,mCAEKa,KAAKtB,MAAMgF,UAAUlC,KAAI,SAACmC,EAASlC,GAAV,OACtB,cAACmC,EAAA,EAAD,UACI,eAAC9C,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,mBACA,cAACC,EAAA,EAAD,CACIE,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QACfG,SAAU,SAACwC,GAAD,OAAO,EAAKZ,YAAYxB,EAAMoC,IAJ5C,SASI,EAAKnF,MAAM2E,cACX,EAAKD,QAAQpE,QAAQwC,KAAI,SAACsC,EAAIrC,GAAL,OACrB,cAACC,EAAA,EAAD,CAAUX,UAAU,SAAqBZ,MAAO2D,EAAhD,SAAsDA,GAApBrC,MAEtC,EAAK2B,QAAQnE,OAAOuC,KAAI,SAACuC,EAAQtC,GAAT,OACpB,cAACC,EAAA,EAAD,CAAWX,UAAU,SAAqBZ,MAAO4D,EAAjD,SAA2DA,GAAxBtC,YAjBnCA,Y,GA9CTlD,IAAM8B,WA6EjC0C,EAAaiB,YAAY1F,EACVyE,QCjFTkB,E,kDAEN,WAAYvF,EAAO0E,GAAU,IAAD,sBAIxB,IAAM7C,GAHN,cAAM7B,IAGeA,MAAM6B,QACvB2D,EAAK,YAAOd,EAAQtE,aAAayB,IACjCR,EAASmE,EAAM1C,KAAI,SAAA2C,GAEnB,MADY,KAATA,IAAaA,EAAI,kBAAcA,IAC3BA,KARa,OAUxB,EAAKtF,MAAQ,CACTqF,QAAOnE,UAXa,E,qDAsBxB,OACI,mCACCC,KAAKnB,MAAMkB,OAAOyB,KAAI,SAAC4C,EAAK3C,GAAN,OACnB,cAACmC,EAAA,EAAD,CAAW3C,MAAO,CAACC,MAAO,OAAQmD,UAAW,SAAUC,QAAS,YAAhE,SAA0FF,GAAR3C,Y,GA3B1ElD,IAAM8B,WA2C1B4D,EAAMD,YAAY1F,EACH2F,QCVAM,MA/Bf,SAAqB7F,GACjB,IAAMyE,EAAOqB,qBAAWlG,GAExB,OACI,qCACA,gDAAmBI,EAAM6B,WACzB,mDAAsB7B,EAAM+F,cAC5B,iDACA,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAO5D,UAAU,YAAYI,GAAG,cAAhC,UACI,cAACyD,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACKnG,EAAMgF,UAAUlC,KAAI,SAACmC,EAASlC,GAAV,OACjB,cAACmC,EAAA,EAAD,UAAwBD,GAARlC,UAI5B,cAACqD,EAAA,EAAD,UACI,cAACD,EAAA,EAAD,CAAW1D,GAAG,SAAd,SACKgC,EAAK9D,YAAYmC,KAAI,SAACrB,EAAOsB,GAAR,OAClB,cAACmC,EAAA,EAAD,UAAwBzD,GAARsB,mBCVtCsD,E,kDACF,WAAYrG,GAAQ,IAAD,8BACf,cAAMA,IAEDG,MAAQ,CACT6E,UAAW,CAAC,WAAY,YAAa,eAAgB,eAAgB,SAAU,YAC/EV,SAAS,GACT/D,QAAQ,EACR+F,YAAa,GACb3B,eAAe,EACf4B,cAAe,GACf3F,OAAO,GAGX,EAAK4F,WAAa,EAAKA,WAAWtG,KAAhB,gBAClB,EAAKuG,WAAa,EAAKA,WAAWvG,KAAhB,gBAClB,EAAKwG,cAAgB,EAAKA,cAAcxG,KAAnB,gBAfN,E,yDAmBf,IAAMoE,EAAWqC,IACbC,EAAQ,YAAOtC,GACnBsC,EAASC,QAAQ,SACjBvF,KAAKC,SAAS,CAACgF,cAAejC,EAAUgC,YAAaM,EAAUrG,QAAQ,GAAOe,KAAKoD,QAAQ7D,OAAO,CAACN,OAAQqG,EAAUpG,cAAeoG,O,mCAIpI,IAAME,EAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GACxCF,EAAQ,UAAOE,GACnBF,EAASC,QAAQ,SACjBvF,KAAKC,SAAS,CAACgF,cAAeO,EAAgBxC,SAAUsC,EAAWrG,QAAQ,EAAMoE,eAAe,M,sCAMhG,IAFA,IAAIxE,EAAK,YAAOmB,KAAKoD,QAAQjE,aACvB+E,EAAK,YAAQlE,KAAKoD,QAAQtE,aAAakB,KAAKtB,MAAM6B,UAChD0B,EAAE,EAAGA,EAAIpD,EAAMyE,OAAQrB,IACxBiC,EAAMjC,KAAOsB,SAASW,EAAMjC,GAAI,MAAKpD,EAAMoD,IAAMiC,EAAMjC,IAE9DjC,KAAKtB,MAAMkC,YAAY,WACvBZ,KAAKC,SAAS,CAACX,OAAO,GAAOU,KAAKoD,QAAQ7D,OAAO,CAACF,YAAaR,EAAOS,OAAO,O,+BAQ7E,IAAMmG,EACF,qCACI,wCAAWzF,KAAKtB,MAAM+F,WAAtB,qDAAoFzE,KAAKnB,MAAMoG,cAAcS,cAE7G,cAACC,EAAA,EAAD,CAAMC,IAAI,EAAV,SACA,cAAClB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAO5D,UAAU,YAAYI,GAAG,YAAhC,UACI,cAACyD,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACjB,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,4BAGR,eAACkB,EAAA,EAAD,WAEI,cAACD,EAAA,EAAD,CAAU1D,GAAG,SAAb,SACI,cAAC,EAAD,CAAeuC,UAAW1D,KAAKnB,MAAM6E,UAAW1E,QAASgB,KAAKnB,MAAMmE,SAAUA,SAAUhD,KAAKnB,MAAMmG,YAAa3B,cAAerD,KAAKnB,MAAMwE,kBAE9I,cAACwB,EAAA,EAAD,UACI,cAAC,EAAD,CAAOtE,QAAUP,KAAKtB,MAAM6B,sBAO3C,cAACsF,EAAA,EAAD,CACGC,QAAS9F,KAAKoF,cACdW,SAAU/F,KAAKoD,QAAQhE,aACvB4G,QAAQ,YACR9E,MAAM,YACND,MAAO,CAACgF,UAAW,QALtB,0CAaHC,EACF,qCACI,oEACA,cAACL,EAAA,EAAD,CACIC,QAAS9F,KAAKkF,WACdc,QAAQ,YACR9E,MAAM,YACN6E,SAAU/F,KAAKnB,MAAMI,OAJzB,mBAQA,mBAAG8B,UAAU,MAAb,gBACA,6EACA,cAAC8E,EAAA,EAAD,CACIC,QAAS9F,KAAKmF,WACda,QAAQ,YACR9E,MAAM,UACN6E,SAAU/F,KAAKnB,MAAMI,OAJzB,4BAYR,OAA+B,IAA3Be,KAAKtB,MAAMmC,YACJ,KACAb,KAAKnB,MAAMS,MAGV,cAAC,EAAD,CAAaoE,UAAa1D,KAAKnB,MAAM6E,UAAWnD,QAASP,KAAKtB,MAAM6B,QAASkE,WAAYzE,KAAKtB,MAAM+F,aAFrGzE,KAAKnB,MAAMI,OAASwG,EAAeS,M,GAvH/B3H,IAAM8B,WA+H7B0E,EAASf,YAAY1F,EACNyG,QCzIToB,E,kDACJ,WAAYzH,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXgC,YAAa,EACbuF,QAAQ,EACRC,KAAM,GACN9F,QAAS,GACTkE,WAAY,IAGd,EAAK6B,eAAiB,EAAKA,eAAe1H,KAApB,gBACtB,EAAK2H,MAAQ,EAAKA,MAAM3H,KAAX,gBACb,EAAK4H,MAAQ,EAAKA,MAAM5H,KAAX,gBACb,EAAK6H,aAAe,EAAKA,aAAa7H,KAAlB,gBACpB,EAAK8H,aAAe,EAAKA,aAAa9H,KAAlB,gBAfH,E,2DAkBL+H,EAAKxG,GACjBH,KAAKC,SAAL,eAAgB0G,EAAMxG,M,mCAEZyG,GACM,YAAdA,GAAyB5G,KAAKC,SAAS,CAACmG,QAAO,M,8BAIjD,IAAIvF,EAAcb,KAAKnB,MAAMgC,YACV,IAAhBA,GAAmBb,KAAKoD,QAAQ7D,OAAO,CAACP,QAASgB,KAAKoD,QAAQrE,cAAeE,OAAQe,KAAKoD,QAAQlE,cAAeE,cAAc,EAAMD,YAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,MAErK0B,EAAcA,GAAe,EAAG,EAAGA,EAAc,EACjDb,KAAKC,SAAS,CACZY,YAAaA,EACbuF,QAAQ,M,8BAMV,IAAIvF,EAAcb,KAAKnB,MAAMgC,YAE7BA,EAAcA,GAAe,EAAI,EAAGA,EAAc,EAClDb,KAAKC,SAAS,CACZY,YAAaA,EACbuF,QAAQ,GACRpG,KAAK0G,gB,qCAIqB,IAA3B1G,KAAKnB,MAAMgC,aAA+C,KAA1Bb,KAAKnB,MAAM4F,YAAmBzE,KAAKC,SAAS,CAACmG,QAAQ,IACrFpG,KAAKoD,QAAQ9D,OAAOU,KAAKC,SAAS,CAACmG,QAAO,M,+BAI3C,IAAIvF,EAAcb,KAAKnB,MAAMgC,YAC7BgG,QAAQC,IAAIjG,GACZ,IAAMkG,EACJ,cAAClB,EAAA,EAAD,CAAQ9E,UAAU,WAAWE,MAAO,CAACC,MAAM,OAAQ8F,YAAa,QAC9DC,KAAK,QACLjB,QAAQ,WACRD,SAAU/F,KAAKoD,QAAQ9D,MACvBwG,QAAS9F,KAAKwG,MAJhB,sBASIU,EACJ,cAACrB,EAAA,EAAD,CAAQ9E,UAAU,OAAOE,MAAO,CAACC,MAAM,OAAQ8F,YAAa,QAC5DhB,QAAQ,WACRiB,KAAK,QACLnB,QAAS9F,KAAKuG,MACdR,SAAU/F,KAAKnB,MAAMuH,OAJrB,kBAWF,OACE,mCACE,sBAAKrF,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKoG,IAAKC,EAAMrG,UAAU,WAAWsG,IAAI,SACzC,6DAEF,iCAEE,cAAC,EAAD,CAAUzG,YAAaZ,KAAKyG,aAAc5F,YAAab,KAAKnB,MAAMgC,YAAaJ,WAAcT,KAAKsG,iBAClG,cAAC,EAAD,CAAS1F,YAAaZ,KAAKyG,aAAc5F,YAAab,KAAKnB,MAAMgC,YAAaJ,WAAcT,KAAKsG,iBACjG,cAAC,EAAD,CAAU1F,YAAaZ,KAAKyG,aAAclG,QAASP,KAAKnB,MAAM0B,QAASkE,WAAYzE,KAAKnB,MAAM4F,WAAY5D,YAAab,KAAKnB,MAAMgC,cAClI,sBAAKE,UAAU,UAAf,UACmB,IAAhBF,GAAqBkG,EACrBlG,EAAc,GAAKqG,iB,GA5FV3I,IAAM8B,WAqG9B8F,EAAUnC,YAAY1F,EACP6H,QCpFAmB,E,kDAnBb,WAAY5I,GAAQ,uCACZA,G,2DAKsB,IAA3BsB,KAAKnB,MAAMgC,aAA+C,KAA1Bb,KAAKnB,MAAM4F,YAAmBzE,KAAKC,SAAS,CAACmG,QAAQ,M,+BAKtF,OACE,cAAC,EAAD,UACE,cAAC,EAAD,U,GAdU7H,IAAM8B,WCITkH,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9d7f12fd.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;\r\n\r\n","import React from 'react'\r\nimport DataContext from './DataContext'\r\n\r\nclass DataProvider extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.updateState = this.updateState.bind(this)\r\n\t\tthis.state = {\r\n            speciesBonus: {\r\n                'Human': [1, 1, 1, 1, 1, 1],\r\n                'High Elf': ['', 2,'',1,'',''],\r\n                'Forest Elf': ['',2, '', '', 1, ''],\r\n                'Drow - Dark Elf': ['',2,'','','',1],\r\n                'Mountain Dwarf': [2,'' ,2,'','',''],\r\n                'Hill Dwarf': ['','',2,'',1,''],\r\n                'Halfling - Lightfoot': ['',2,'','','',1],\r\n                'Halfling - Stout': ['', 2, 1, '', '','' ],\r\n                'Forest Gnome': ['',1,'',2, '',''],\r\n                'Rock Gnome': ['','',1,2,'',''],\r\n                'Tiefling': ['','','',1, '',2],\r\n                'Dragonborn': [2, '','','','',1],\r\n                'Half-Elf': ['',2,'','','',2],\r\n                'Half-Orc': [2, '',1, '','',''],\r\n            },\r\n           defaultStatic : ['empty',15, 14, 13, 12, 10, 8],\r\n           default : ['empty',15, 14, 13, 12, 10, 8],\r\n           rolled: [],\r\n           defaultRolled: [],\r\n           actualState: ['','','','','',''],\r\n\t\t   notConfirmed: true,\r\n           finalValues: [],\r\n           final: false,\r\n           update: this.updateState,\r\n           species_char : {\r\n               'Human': {\r\n                   gender: ['female','male'],\r\n                   alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                   speed: '9m',\r\n                   basic_languages: 'Common',\r\n                   languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n               },\r\n               'Forest elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n                    speed: '10,5m',\r\n                    basic_languages: 'Elvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Mask of the Wild', 'Martial Arts']\r\n                },\r\n                'High elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Elvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Magic Trick', 'Martial Arts'],\r\n                    languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc'],\r\n                },\r\n                'Drow - Dark Elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Elvish & Common',\r\n                    proficiency: ['Superior Darkvision - 36m','Fey Ancestry', 'Trance','Sunlight Sensitivity','Drow Magic', 'Drow Weapon Training']\r\n                },\r\n                'Mountain Dwarf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Dwarvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Tool Proficiency','Stonecunning', 'Dwarven Armor Training']\r\n                },\r\n                'Hill Dwarf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Dwarvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Tool Proficiency','Stonecunning', 'Dwarven Toughness']\r\n                },\r\n                'Halfling - Lightfoot': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Halfling & Common',\r\n                    proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Naturally Stealthy']\r\n                },\r\n                'Halfling - Stout': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Halfling & Common',\r\n                    proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Stout Resilience']\r\n                },\r\n                'Tiefling': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Infernal & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Hellish Resistance','Infernal Legacy','Stout Resilience']\r\n                },\r\n                'Dragonborn': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Draconic & Common',\r\n                    proficiency: ['Draconic Ancestry', 'Breath Weapon','Damage Resistance']\r\n                },\r\n                'Forest Gnome': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Gnomish & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Gnome Cunning','Natural Illusionist','Speak with Small Beasts']\r\n                },\r\n                'Rock Gnome': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Gnomish & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Gnome Cunning','Artificer’s Lore','Tinker']\r\n                },\r\n                'Half-Orc': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Orc & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Menacing','Relentless Endurance','Savage Attacks']\r\n                },\r\n                'Half-Elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Orc & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Fey Ancestry','Skill Versatility','Savage Attacks']\r\n                },\r\n           }\r\n         \r\n\t\t}\r\n\t}\r\n\r\n\tupdateState(values) {\r\n\t\tthis.setState(values)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DataContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</DataContext.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataProvider","export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            species : ['Human', 'High Elf', 'Forest Elf', 'Drow - Dark Elf', 'Mountain Dwarf', 'Hill Dwarf','Halfling - Lightfoot', 'Halfling - Stout','Tiefling','Dragonborn', 'Forest Gnome', 'Rock Gnome', 'Half-Orc','Half-Elf'],\r\n            picked: '',\r\n            \r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('species',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return null\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.state.species.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes : ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'],\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return null\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.state.classes.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\nclass AbilityCells extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            default: props.default,\r\n            features: props.features,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        let data = event.target.value;\r\n        let actualState = [...this.context.actualState];\r\n        let copy;\r\n        if(this.props.defaultPicked) {\r\n            copy = [...this.context.default];\r\n        } else { \r\n            copy = [...this.context.rolled];\r\n        }\r\n        for( let i = 0; i < copy.length; i++){ \r\n            if ( copy[i] === data && data === parseInt(data, 10)) { \r\n                copy.splice(i, 1); \r\n                break;\r\n            }\r\n        }\r\n        if(actualState[index] === parseInt(actualState[index], 10)) copy.push(actualState[index])\r\n        actualState[index] = data;\r\n        if (actualState.every(value => value === parseInt(value, 10))) {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: false, actualState});\r\n            this.context.update({rolled: copy, notConfirmed: false, actualState});\r\n        } else {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: true, actualState});\r\n            this.context.update({rolled: copy, notConfirmed: true, actualState});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                                \r\n                                {\r\n                                this.props.defaultPicked ?\r\n                                this.context.default.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) :\r\n                                this.context.rolled.map((feature,index) => (\r\n                                    <MenuItem  className=\"option\" key={index} value={feature}>{feature}</MenuItem>\r\n                                )) \r\n                                }\r\n                            </Select> \r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nAbilityCells.contextType=DataContext;\r\nexport default AbilityCells; ","import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...context.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n        bonus, values\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","import React, {useContext} from 'react';\r\nimport DataContext from './contexts/DataContext'; \r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nfunction FinalValues(props) {\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <>\r\n        <h3>Your species: {props.species}</h3>\r\n        <h3>Your profession: {props.profession}</h3>\r\n        <h3>Your abilities:</h3>\r\n        <TableContainer >\r\n            <Table className=\"abilities\" id=\"finalValues\"> \r\n                <TableHead>\r\n                    <TableRow> \r\n                        {props.abilities.map((ability, index) => (\r\n                            <TableCell key={index}>{ability}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow  id=\"values\">\r\n                        {data.finalValues.map((value, index) => (\r\n                            <TableCell key={index}>{value}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default FinalValues;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AbilityCells from './AbilityCells';\r\nimport Bonus from './Bonus';\r\nimport FinalValues from './FinalValues';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            abilities: ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'],\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n            defaultPicked: false,\r\n            numbersToShow: [],\r\n            final: false,\r\n        }\r\n\r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n        this.confirmMethod = this.confirmMethod.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        let pickable = [...features]\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: features, featuresUse: pickable, rolled: true}, this.context.update({rolled: pickable, defaultRolled: pickable}) );\r\n    }\r\n\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        let pickable = [...defaultNumbers];\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: defaultNumbers, features: pickable , rolled: true, defaultPicked: true});\r\n    }\r\n\r\n    confirmMethod() {\r\n        let state = [...this.context.actualState]\r\n        const bonus =  [...this.context.speciesBonus[this.props.species]];\r\n        for(let i=0; i < state.length; i++) {\r\n            if(bonus[i] === parseInt(bonus[i], 10)) state[i] += bonus[i]\r\n        }\r\n        this.props.buttonState('clicked');\r\n        this.setState({final: true}, this.context.update({finalValues: state, final: true}) );\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n   \r\n       \r\n        const rollsResults = (\r\n            <>\r\n                <h4>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.numbersToShow.toString()}</h4>\r\n               \r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\" id=\"abilities\"> \r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            \r\n                            <TableRow id=\"values\">\r\n                                <AbilityCells  abilities={this.state.abilities} default={this.state.features} features={this.state.featuresUse} defaultPicked={this.state.defaultPicked}/>  \r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <Bonus species ={this.props.species}/> \r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n                </Fade> \r\n                 <Button \r\n                    onClick={this.confirmMethod} \r\n                    disabled={this.context.notConfirmed}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"  \r\n                    style={{marginTop: \"26px\"}}\r\n                    >\r\n                        Confirm - One way ticket!\r\n                    </Button>                   \r\n                \r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        \r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        } else if(!this.state.final) {\r\n            return this.state.rolled ? rollsResults : rolling      \r\n        } else {\r\n            return (<FinalValues abilities = {this.state.abilities} species={this.props.species} profession={this.props.profession}/>)\r\n        }             \r\n       \r\n    }\r\n    \r\n}\r\nFeatures.contextType=DataContext;\r\nexport default Features;","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass MultiForm extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this._next = this._next.bind(this);\r\n    this._prev = this._prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n\r\n _prev() {\r\n    let currentStep = this.state.currentStep\r\n    if(currentStep === 3) this.context.update({default: this.context.defaultStatic, rolled: this.context.defaultRolled, notConfirmed: true, actualState: ['','','','','','']})\r\n \r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n _next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 3 ? 4: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n  if(this.context.final) this.setState({button:false})\r\n }\r\n\r\n  render () {\r\n    let currentStep = this.state.currentStep;\r\n    console.log(currentStep)\r\n    const previousButton = (\r\n      <Button className=\"previous\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        disabled={this.context.final}\r\n        onClick={this._prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button className=\"next\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this._next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1>Your Character Generator</h1>\r\n          </header>\r\n          <main>\r\n          {}\r\n            <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Features buttonState={this.handleButton} species={this.state.species} profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n            <div className=\"buttons\">\r\n              {currentStep !== 1 && previousButton}\r\n              {currentStep < 4 && nextButton } \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMultiForm.contextType=DataContext;\r\nexport default MultiForm;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport DataProvider from './contexts/DataProvider';\r\nimport MultiForm from './MultiForm';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n }\r\n\r\n  render () {\r\n\r\n    return (\r\n      <DataProvider>\r\n        <MultiForm/>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}