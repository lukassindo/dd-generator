{"version":3,"sources":["contexts/DataContext.js","contexts/DataProvider.js","img/dd.png","Species.js","Classes.js","services/roll.js","AbilityCells.js","data/data.js","Bonus.js","FinalValues.js","Features.js","LanguagesPick.js","TrickPick.js","ToolsPick.js","Dragons.js","SkillsClass.js","Skills.js","HalfElf.js","SpeciesChar.js","services/modificator.js","Equip.js","Instruments.js","ClassTricks.js","SpellsPick.js","Domain.js","ClassChar.js","MultiForm.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","React","createContext","DataProvider","props","updateState","bind","addPersonData","addValue","cleanValue","state","defaultStatic","default","rolled","defaultRolled","actualState","notConfirmed","finalValues","final","step_four","person","name","gender","alignment","languages","tricks","tools","dragons","skills","equip1","equip2","equip3","equip4","prof","mods","spells","classSkills","classTricks","classSpells","instruments","domain","weapons","deityTricks","update","updatePerson","values","this","setState","key","value","pick","personData","goodKey","length","splice","push","value1","value2","key2","value3","value4","data","data2","console","log","Provider","children","Component","Species","SPECIES","picked","handleData","event","target","buttonState","currentStep","FormControl","className","InputLabel","style","color","id","Select","onChange","labelId","placeholer","map","species","index","MenuItem","Classes","CLASSES","featuresNumbers","rolls","results","i","k6","Math","floor","random","sort","a","b","shift","sum","reduce","total","num","AbilityCells","features","changeValue","copy","context","defaultPicked","parseInt","every","abilities","ability","TableCell","e","def","feature","contextType","speciesBonus","species_char","speed","basic_languages","proficiency","class_char","hit_dice","hit_points","armor","saving_throws","skills_pick","equip","tricks_pick","spells_pick","domains","fight_styles","Bonus","item","bon","textAlign","padding","FinalValues","useContext","profession","TableContainer","Table","TableHead","TableRow","TableBody","Features","featuresUse","numbersToShow","rollMethod","useDefault","confirmMethod","serviceRoll","pickable","unshift","defaultNumbers","bonus","rollsResults","toString","Fade","in","Button","onClick","disabled","variant","marginTop","rolling","LanguagesPick","getValue","lang","TrickPick","trick","ToolsPick","tool","Dragons","dragon","SkillsClass","required","skill","withSubscription","WrappedComponent","objKey","HalfelfSkills","ClassSkills","SpeciesChar","prevProps","prevState","char","noValidate","autoComplete","TextField","label","align","forEach","Equip","component","FormLabel","RadioGroup","aria-label","el","FormControlLabel","control","Radio","Instruments","ClassTricks","numb","mainpick","SpellsPick","spell","Domain","domainEffects","ClassChar","warlock","warlock_spells","setPatron","atr","modificatorService","finals","patron","MultiForm","button","handleUserData","next","prev","handleButton","checkButtons","childData","previousButton","borderColor","size","nextButton","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0411ee1e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;\r\n\r\n","import React from 'react'\r\nimport DataContext from './DataContext'\r\n\r\nclass DataProvider extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.updateState = this.updateState.bind(this);\r\n        this.addPersonData = this.addPersonData.bind(this);\r\n        this.addValue = this.addValue.bind(this);\r\n        this.cleanValue = this.cleanValue.bind(this);\r\n\t\tthis.state = {\r\n           defaultStatic : ['empty',15, 14, 13, 12, 10, 8],\r\n           default : ['empty',15, 14, 13, 12, 10, 8],\r\n           rolled: [],\r\n           defaultRolled: [],\r\n           actualState: ['','','','','',''],\r\n\t\t   notConfirmed: true,\r\n           finalValues: [],\r\n           final: false,\r\n           step_four: false,\r\n            person: {\r\n                name: '',\r\n                gender: '',\r\n                alignment: '',\r\n                languages: [],\r\n                tricks: [],\r\n                tools:[],\r\n                dragons: [],\r\n                skills: [],\r\n                equip1: [],\r\n                equip2: [],\r\n                equip3: [],\r\n                equip4: [],\r\n                prof: [],\r\n                mods: [],\r\n                spells: [], \r\n                classSkills: [],\r\n                classTricks: [],\r\n                classSpells: [],\r\n                instruments: [],\r\n                domain: '',\r\n                weapons: [],\r\n                deityTricks: [],\r\n            },\r\n            update: this.updateState,\r\n            updatePerson: this.addPersonData,\r\n            addValue: this.addValue,\r\n            cleanValue: this.cleanValue,\r\n\t\t}\r\n\t}\r\n\r\n\tupdateState(values) {\r\n\t\tthis.setState(values)\r\n\t}\r\n\r\n    addPersonData(key, value, pick) {\r\n        let personData = {...this.state.person};\r\n        if (key === 'languages' || key === 'tricks' || key === 'tools' || key === 'dragons' || key === 'equip1' || key === 'equip2' || key === 'equip3' || key === 'equip4'  ) {\r\n            let goodKey = personData[key];\r\n            if(personData.languages.length === 0) {\r\n                goodKey.splice(0,1,value);\r\n            } else if(personData.languages.length === 1) {\r\n                goodKey.push(value);\r\n            } else {goodKey.splice(1,2,value)}\r\n            \r\n        } else if (key === 'skills' || key === 'classSkills' || key === 'instruments' || key === 'classTricks' || key === 'spells') {\r\n            let goodKey = personData[key];\r\n            if (value === 'empty') { goodKey.splice(0, goodKey.length)\r\n            } else if(goodKey.length <= pick) {\r\n                goodKey.push(value); \r\n            } else {\r\n                goodKey.splice(0,1,value);\r\n            }\r\n\r\n        } else {\r\n            personData[key] = value;\r\n        }\r\n      \r\n        this.setState({person: personData});\r\n    }\r\n\r\n    addValue(key, value1, value2, key2, value3, value4) {\r\n        let personData = {...this.state.person};\r\n        let data = personData[key];\r\n        let data2 = personData[key2];\r\n        console.log(data);\r\n        if(key==='languages' && data.length === 0) {\r\n            data.push(value1);\r\n            return;\r\n        }\r\n        if(data.length < 2) {\r\n            data.push(value1, value2);\r\n            if(typeof value4 !== 'undefined')\r\n            console.log(value4)\r\n            data2.push(value3);\r\n            if(typeof value4 !== 'undefined') data2.push(value4);\r\n        } else {\r\n            data.splice(0,2);\r\n            data.push(value1, value2);\r\n            if(typeof value4 !== 'undefined') {\r\n                data2.splice(0,2);\r\n                data2.push(value3);\r\n                if(typeof value4 !== 'undefined') data2.push(value4);\r\n            }\r\n        }\r\n        this.setState({person: personData});\r\n    }\r\n    cleanValue(key) {\r\n        let personData = {...this.state.person};\r\n        let array = personData[key];\r\n        array.length = [];\r\n        this.setState({person: personData});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DataContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</DataContext.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataProvider","export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    SPECIES = ['Human', 'High Elf', 'Forest Elf', 'Drow - Dark Elf', 'Mountain Dwarf', 'Hill Dwarf','Halfling - Lightfoot', 'Halfling - Stout','Tiefling','Dragonborn', 'Forest Gnome', 'Rock Gnome', 'Half-Orc','Half-Elf'];\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('species',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.SPECIES.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    CLASSES = ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.CLASSES.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\nclass AbilityCells extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            default: props.default,\r\n            features: props.features,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        let data = event.target.value;\r\n        let actualState = [...this.context.actualState];\r\n        let copy;\r\n        if(this.props.defaultPicked) {\r\n            copy = [...this.context.default];\r\n        } else { \r\n            copy = [...this.context.rolled];\r\n        }\r\n        for( let i = 0; i < copy.length; i++){ \r\n            if ( copy[i] === data && data === parseInt(data, 10)) { \r\n                copy.splice(i, 1); \r\n                break;\r\n            }\r\n        }\r\n        if(actualState[index] === parseInt(actualState[index], 10)) copy.push(actualState[index])\r\n            actualState[index] = data;\r\n        if (actualState.every(value => value === parseInt(value, 10))) {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: false, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: false, actualState});\r\n        } else {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: true, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: true, actualState});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                                \r\n                                {\r\n                                this.props.defaultPicked ?\r\n                                this.context.default.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) :\r\n                                this.context.rolled.map((feature,index) => (\r\n                                    <MenuItem  className=\"option\" key={index} value={feature}>{feature}</MenuItem>\r\n                                )) \r\n                                }\r\n                            </Select> \r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nAbilityCells.contextType=DataContext;\r\nexport default AbilityCells; ","export const data = {\r\n    speciesBonus: {\r\n        'Human': [1, 1, 1, 1, 1, 1],\r\n        'High Elf': ['', 2,'',1,'',''],\r\n        'Forest Elf': ['',2, '', '', 1, ''],\r\n        'Drow - Dark Elf': ['',2,'','','',1],\r\n        'Mountain Dwarf': [2,'' ,2,'','',''],\r\n        'Hill Dwarf': ['','',2,'',1,''],\r\n        'Halfling - Lightfoot': ['',2,'','','',1],\r\n        'Halfling - Stout': ['', 2, 1, '', '','' ],\r\n        'Forest Gnome': ['',1,'',2, '',''],\r\n        'Rock Gnome': ['','',1,2,'',''],\r\n        'Tiefling': ['','','',1, '',2],\r\n        'Dragonborn': [2, '','','','',1],\r\n        'Half-Elf': ['',2,'','','',2],\r\n        'Half-Orc': [2, '',1, '','',''],\r\n    },\r\n    species_char : {\r\n        'Human': {\r\n            gender: ['female','male'],\r\n            alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n            speed: '9m',\r\n            basic_languages: 'Common',\r\n            languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n            proficiency: [],\r\n        },\r\n        'Forest Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '10,5m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Mask of the Wild', 'Martial Arts'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n         },\r\n         'High Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '9m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Magic Trick', 'Martial Arts'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n             tricks: ['Dancing Lights','Light', 'Mage Hand', 'Message','Mending','Resistance','Acid Splash','Ray of Frost','Fire Bolt','Minor Illusion','Shocking Grasp','True Strike','Poison Spray','Prestidigitation','Chill Touch','Friendship']\r\n         },\r\n         'Drow - Dark Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Superior Darkvision - 36m','Fey Ancestry', 'Trance','Sunlight Sensitivity','Drow Magic', 'Drow Weapon Training'],\r\n             weapons: ['rapier', 'hand crossbow', 'short sword'],\r\n             tricks: ['Dancing Lights'],\r\n         },\r\n         'Mountain Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Dwarvish & Common',\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Armor Training', 'Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer','light armor','medium armor'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n         },\r\n         'Hill Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Dwarvish & Common',\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Toughness','Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n         },\r\n         'Halfling - Lightfoot': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Halfling & Common',\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Naturally Stealthy'],\r\n         },\r\n         'Halfling - Stout': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Halfling & Common',\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Stout Resilience'],\r\n         },\r\n         'Tiefling': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Infernal & Common',\r\n             proficiency: ['Darkvision - 18m', 'Hellish Resistance','Infernal Legacy','Stout Resilience'],\r\n             tricks: ['thaumaturgy'],\r\n         },\r\n         'Dragonborn': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Draconic & Common',\r\n             proficiency: ['Draconic Ancestry', 'Breath Weapon','Damage Resistance'],\r\n             dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n         },\r\n         'Forest Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Gnomish & Common',\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Natural Illusionist','Speak with Small Beasts'],\r\n             tricks: ['Minor Illusion']\r\n         },\r\n         'Rock Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Gnomish & Common',\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Artificer’s Lore','Tinker'],\r\n             tools: ['tinker`s tools']\r\n         },\r\n         'Half-Orc': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Orc & Common',\r\n             proficiency: ['Darkvision - 18m', 'Menacing','Relentless Endurance','Savage Attacks'],\r\n             skills: ['Persuasion']\r\n         },\r\n         'Half-Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Orc & Common',\r\n             proficiency: ['Darkvision - 18m', 'Fey Ancestry','Skill Versatility','Savage Attacks'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion']\r\n         }\r\n    },\r\n    class_char: {\r\n        'Barbarian': {\r\n            hit_dice: '1k12',\r\n            hit_points: 12,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows','longswords','rapiers','shortswords'],\r\n            saving_throws: ['Dexterity', 'Charisma'],\r\n            skills_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Intimidation', 'Nature', 'Perception', 'Survival'],\r\n            equip: ['An explorer’s pack and four javelins', ['(a) a greataxe', '(b) any martial melee weapon'], ['(a) two handaxes', '(b) any simple weapon']],\r\n            proficiency: ['Rage', 'Unarmored Defense']\r\n        },\r\n        'Bard': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 3,\r\n            tricks_pick: 2,\r\n            spells_pick: 4,\r\n            skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion'],\r\n            instruments: ['empty','Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            equip: ['Leather armor and a dagger', ['(a) a rapier', '(b) a longsword', '(c) any simple weapon'], ['(a) a diplomat’s pack', '(b) an entertainer’s pack'], ['(a) a lute', '(b) any other musical instrument']],\r\n            proficiency: ['Spellcasting','Bardic Inspiration'],\r\n            classTricks: ['empty','Dancing Lights','Friends','Light','Mage Hand','Message','Minor Illusion','Prestidigitation','Vicious Mockery','True Strike','Mending','Blade Ward'],\r\n            spells: ['empty','Animal Friendship','Bane','Charm Person','Comprehend Languages','Cure Wounds','Detect Magic','Disguise Self','Dissonant Whispers','Distort Value','Earth Tremor','Faerie Fire','Feather Fall','Healing Word','Heroism','Hideous Laughter','Identify','Illusory Script','Longstrider','Silent Image','Sleep','Speak with Animals','Tasha`s Hideous Laughter','Thunderwave','Unseen Servant'],\r\n        },\r\n        'Warlock': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            tricks_pick: 2,\r\n            spells_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Arcana', 'Deception', 'History', 'Intimidation', 'Investigation', 'Nature', 'Religion'],\r\n            equip: ['Leather armor, any simple weapon, and two daggers', ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a component pouch', '(b) an arcane focus'], ['(a) a scholar’s pack', '(b) a dungeoneer’s pack']],\r\n            proficiency: ['Otherworldly Patron','Pact Magic'],\r\n            classTricks: ['empty','Friends','Mage Hand','Minor Illusion','Prestidigitation','True Strike','Blade Ward','Chill Touch','Poison Spray','Eldritch Blast'],\r\n            spells: ['empty','Armor of Agathys','Arms of Hadar','Charm Person','Comprehend Languages','Cause Fear','Distort Value','Expeditious Retreat','Hellish Rebuke','Hex','Illusory Script','Protection from Evil and Good','With Bolt','Unseen Servant'],\r\n        },\r\n        'Druid': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['Clubs', 'daggers', 'darts', 'javelins', 'maces', 'quarterstaffs', 'scimitars', 'sickles', 'slings', 'spears'],\r\n            saving_throws: ['Wisdom', 'Intelligence'],\r\n            skills_pick: 2,\r\n            tricks_pick: 2,\r\n            spells_pick: 2,\r\n            skills: ['empty','Arcana', 'Animal Handling', 'Insight', 'Medicine', 'Nature', 'Perception', 'Religion', 'Survival'],\r\n            tools: ['Herbalism kit'],\r\n            equip: ['Leather armor, an explorer’s pack, and a druidic focus', ['(a) a wooden shield', '(b) any simple weapon'], ['(a) a scimitar', '(b) any simple melee weapon']],\r\n            proficiency: ['Druidic','Spellcasting'],\r\n            classTricks: ['empty','Mending','Thorn Whip','Resistance','Shillelagh','Guidance','Create Bonfire','Poison Spray'],\r\n            spells: ['empty','Faerie Fire','Fog Cloud','Goodberry','Thunderwave','Healing Word','Cure Wounds','Purify Food and Drink','Entangle','Animal Friendship','Speak with animals','Jump','Create or Destroy Water','Longstrider','Detect Magic','Charm Person','Detect Poison and Disease'],\r\n        },\r\n        'Cleric': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            tricks_pick: 3,\r\n            skills: ['empty','History', 'Insight', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['A shield and a holy symbol', ['(a) a mace', 'a warhammer (if proficient)'], ['(a) scale mail', '(b) leather armor', '(c) chain mail (if proficient)'], ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a priest’s pack', '(b) an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Divine Domain'],\r\n            classTricks: ['empty','Mending','Resistance','Guidance','Light','Sacred Flame','Spare the Dying','Thaumaturgy'],\r\n            domains: ['Knowledge','Life','Light','Nature','Tempest','Trickery','War'],\r\n        },\r\n        'Rogue': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows', 'longswords', 'rapiers', 'shortswords'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 4,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'Deception', 'Insight', 'Intimidation', 'Investigation', 'Perception', 'Performance', 'Persuasion', 'Sleight of Hand','Stealth'],\r\n            tools: ['Thieves’ tools'],\r\n            equip: ['Leather armor, two daggers, and thieves’ tools', ['(a) a rapier', 'a shortsword'], ['(a)a shortbow and quiver of 20 arrows', '(b) a shortsword'], ['(a) a burglar’s pack', '(b) a dungeoneer’s pack','(c) an explorer’s pack']],\r\n            proficiency: ['Expertise','Sneak Attack','Thieves’ Cant']\r\n        },\r\n        'Ranger': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 3,\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Insight', 'Investigation', 'Nature', 'Perception', 'Stealth'],\r\n            tools: [],\r\n            equip: ['A longbow and a quiver of 20 arrows', ['(a) scale mail', 'leather armor'], ['(a)two shortswords', '(b) two simple melee weapons'], ['(a) a dungeoneer’s pack', '(b) an explorer’s pack']],\r\n            proficiency: ['Favored Enemy','Natural Explorer']\r\n        },\r\n        'Wizard': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Intelligence', 'Wisdom'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Arcana', 'History', 'Insight', 'Investigation', 'Medicine', 'Religion'],\r\n            tools: [],\r\n            equip: ['A spellbook', ['a quarterstaff', 'a dagger'], ['a component pouch', 'an arcane focus'], ['a scholar’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Arcane Recovery']\r\n        },\r\n        'Monk': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: [],\r\n            weapons: ['Simple weapons, shortswords'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'History', 'Insight', 'Religion','Stealth'],\r\n            instruments: ['empty','Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            tools: ['empty','Alchemist’s supplies','Tinker’s tools','Glassblower’s tools','Jeweler’s tools','Brewer’s supplies','Smith’s tools','Cartographer’s tools','Mason’s tools','Calligrapher`s Supplies','Painter’s supplies','Potter’s tools','Carpenter’s tools','Cobbler’s tools','Leatherworker’s tools','Cook’s utensils','Weaver’s tools','Woodcarver’s tools'],\r\n            equip: ['10 darts', ['a shortsword', 'simple weapon'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Unarmored Defense','Martial Arts']\r\n        },\r\n        'Paladin': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armor', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Athletics', 'Insight', 'Intimidation', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Chain mail and a holy symbol', ['a martial weapon and a shield', 'two martial weapons'], ['five javelins', 'any simple melee weapon'], ['a priest’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Divine Sense','Lay on Hands']\r\n        },\r\n        'Fighter': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armor', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Animal Handling', 'Athletics', 'History', 'Insight', 'Intimidation', 'Perception', 'Survival'],\r\n            tools: [],\r\n            equip: [['chain mail', 'leather armor, longbow, and 20 arrows'], ['a martial weapon and a shield', 'two martial weapons'], ['a light crossbow and 20 bolts', 'two handaxes'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Fighting Style','Second Wind'],\r\n            fight_styles: ['Archery', 'Defense','Dueling','Great Weapon Fighting','Protection','Two-Weapon Fighting'],\r\n        },\r\n        'Sorcerer': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Charisma', 'Constitution'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Arcana', 'Deception', 'Insight', 'Intimidation', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Two daggers', ['a light crossbow and 20 bolts', 'any simple weapon'], ['a component pouch', 'an arcane focus'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Sorcerous Origin - Draconic Bloodline', 'Sorcerous Origin - Wild Magic'],\r\n            dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n        },\r\n    },\r\n}\r\n\r\nexport default data;","import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...data.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n       values,\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","import React, {useContext} from 'react';\r\nimport DataContext from './contexts/DataContext'; \r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nfunction FinalValues(props) {\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <>\r\n        <h3>Your species: {props.species}</h3>\r\n        <h3>Your profession: {props.profession}</h3>\r\n        <h3>Your abilities:</h3>\r\n        <TableContainer >\r\n            <Table className=\"abilities\" id=\"finalValues\"> \r\n                <TableHead>\r\n                    <TableRow> \r\n                        {props.abilities.map((ability, index) => (\r\n                            <TableCell key={index}>{ability}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow  id=\"values\">\r\n                        {data.finalValues.map((value, index) => (\r\n                            <TableCell key={index}>{value}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default FinalValues;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AbilityCells from './AbilityCells';\r\nimport Bonus from './Bonus';\r\nimport FinalValues from './FinalValues';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            abilities: ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'],\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n            defaultPicked: false,\r\n            numbersToShow: [],\r\n            final: false,\r\n        }\r\n\r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n        this.confirmMethod = this.confirmMethod.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        let pickable = [...features]\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: features, featuresUse: pickable, rolled: true}, this.context.update({rolled: pickable, defaultRolled: pickable}) );\r\n    }\r\n\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        let pickable = [...defaultNumbers];\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: defaultNumbers, features: pickable , rolled: true, defaultPicked: true});\r\n    }\r\n\r\n    confirmMethod() {\r\n        let state = [...this.context.actualState]\r\n        const bonus =  [...data.speciesBonus[this.props.species]];\r\n        for(let i=0; i < state.length; i++) {\r\n            if(bonus[i] === parseInt(bonus[i], 10)) state[i] += bonus[i]\r\n        }\r\n        this.props.buttonState('clicked');\r\n        this.setState({final: true}, this.context.update({finalValues: state, final: true}) );\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n   \r\n       \r\n        const rollsResults = (\r\n            <>\r\n                <h4>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.numbersToShow.toString()}</h4>\r\n               \r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\" id=\"abilities\"> \r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            \r\n                            <TableRow id=\"values\">\r\n                                <AbilityCells  abilities={this.state.abilities} default={this.state.features} features={this.state.featuresUse} defaultPicked={this.state.defaultPicked}/>  \r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <Bonus species ={this.props.species}/> \r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n                </Fade> \r\n                 <Button \r\n                    onClick={this.confirmMethod} \r\n                    disabled={this.context.notConfirmed}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"  \r\n                    style={{marginTop: \"26px\"}}\r\n                    >\r\n                        Confirm - One way ticket!\r\n                    </Button>                   \r\n                \r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        \r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        } else if(!this.state.final) {\r\n            return this.state.rolled ? rollsResults : rolling      \r\n        } else {\r\n            return (<FinalValues abilities = {this.state.abilities} species={this.props.species} profession={this.props.profession}/>)\r\n        }             \r\n       \r\n    }\r\n    \r\n}\r\nFeatures.contextType=DataContext;\r\nexport default Features;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass LanguagesPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('languages', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {data.species_char[species].languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nLanguagesPick.contextType=DataContext;\r\nexport default LanguagesPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass TrickPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick One magic trick</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tricks', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.tricks[0]}\r\n                >\r\n                      {data.species_char[species].tricks.map((trick,index) => (\r\n                        <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nTrickPick.contextType=DataContext;\r\nexport default TrickPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass ToolsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one artisan`s tool</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tools', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.tools[0]}\r\n                >\r\n                      \r\n                      {data.species_char[species].tools.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nToolsPick.contextType=DataContext;\r\nexport default ToolsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass Dragons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Dragon</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('dragons', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.dragons}\r\n                >\r\n                      \r\n                      {data.species_char[species].dragons.map((dragon,index) => (\r\n                        <MenuItem  key={index} value={dragon}>{dragon}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDragons.contextType=DataContext;\r\nexport default Dragons;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nconst SkillsClass = (props) => {\r\n    const profession= props.profession\r\n    return (\r\n        <>\r\n        <h4>As {profession} You can pick {data.class_char[profession].skills_pick} additional skills.</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[profession].skills_pick} skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('classSkills', e.target.value)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n                required=\"true\"\r\n            >\r\n                    \r\n                    {data.class_char[profession].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SkillsClass;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\nimport HalfElf from './HalfElf';\r\nimport SkillsClass from './SkillsClass';\r\n\r\n\r\nfunction withSubscription(WrappedComponent, objKey) {\r\n    \r\n    return class Skills extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n        }\r\n        \r\n        render() {\r\n        \r\n            return (\r\n                \r\n                <>\r\n                 <WrappedComponent species={this.props.species} getValue= {this.props.getValue} profession={this.props.profession}/>\r\n                {(this.context.person[objKey].length !== 0) && <h4>You've picked {this.context.person[objKey].toString()}</h4>}\r\n               </> \r\n            )\r\n        }\r\n        \r\n    \r\n    }\r\n    \r\n}\r\n\r\nconst HalfelfSkills = withSubscription(HalfElf, 'skills');\r\nconst ClassSkills = withSubscription(SkillsClass, 'classSkills');\r\nHalfelfSkills.contextType = DataContext;\r\nClassSkills.contextType = DataContext;\r\n\r\n\r\nexport {\r\n    HalfelfSkills,\r\n    ClassSkills,\r\n}","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst HalfElf = (props) => {\r\n    return (\r\n        <>\r\n        <h4>As Half Elf You can pick two skills</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick two skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('skills', e)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n            >\r\n                    \r\n                    {data.species_char[props.species].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HalfElf;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LanguagesPick from './LanguagesPick';\r\nimport TrickPick from './TrickPick';\r\nimport ToolsPick from './ToolsPick';\r\nimport Dragons from './Dragons';\r\nimport {HalfelfSkills} from './Skills';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpeciesChar extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            name: '',\r\n            gender: '',\r\n            alignment: '',\r\n            languages: [],\r\n            tricks: [],\r\n            tools:[],\r\n            dragons: [],\r\n            skills: [],\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let char = this.state;\r\n        // if(prevState.name !== char.name && prevState.gender !== char.gender && prevState.alignment !== char.alignment && prevProps.button === true) this.handleData();\r\n        if(prevState.name !== char.name) {\r\n            this.context.updatePerson('name',char.name);\r\n        }\r\n        if(prevState.gender !== char.gender) {\r\n            this.context.updatePerson('gender',char.gender);\r\n        }\r\n        if(prevState.alignment !== char.alignment) {\r\n            this.context.updatePerson('alignment',char.alignment);\r\n        }\r\n        if(prevState.languages !== char.languages) {\r\n            this.context.updatePerson('languages',char.languages);\r\n        }\r\n        if(prevState.tricks !== char.tricks) {\r\n            this.context.updatePerson('tricks',char.tricks);\r\n        }\r\n        if(prevState.tools !== char.tools) {\r\n            this.context.updatePerson('tools',char.tools);\r\n        }\r\n        if(prevState.dragons !== char.dragons) {\r\n            this.context.updatePerson('dragons',char.dragons);\r\n        }\r\n        if(prevState.skills !== char.skills) {\r\n            this.context.updatePerson('skills',char.skills, 1);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getValue(key, event) {\r\n        const data = event.target.value;\r\n        this.setState({[key]: data}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let char = this.state;\r\n        const species = this.props.species;\r\n        if(char.name !== '' && char.gender !== '' && char.alignment !== '') {\r\n            if(species === 'Drow - Dark Elf' || species === 'Forest Elf' || species === 'Halfling - Lightfoot' || species === 'Halfling - Stout' || species === 'Tiefling' || species === 'Forest Gnome' || species === 'Rock Gnome' || species === 'Half-Orc') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Human' && char.languages.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Half-Elf' && char.languages.length !== 0 && this.context.person.skills.length === 2) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'High Elf' && char.languages.length !== 0 && char.tricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Mountain Dwarf' && char.tools.length !== 0 || species === 'Hill Dwarf' && char.tools.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Dragonborn' && char.dragons.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        if (this.props.currentStep !== 4) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div><h2>Brave {species}. Tell us more about Yourself</h2></div>\r\n            <form className='charData' noValidate autoComplete=\"off\">\r\n                <TextField onChange={(e) =>this.getValue('name', e)} id=\"standard-basic\" label=\"Your name\" value={this.context.person.name} />\r\n                <TextField onChange={(e) =>this.getValue('gender', e)} id=\"standard-basic2\" label=\"Your gender\" value={this.context.person.gender} />\r\n                <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Alignment</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.getValue('alignment', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.alignment}\r\n                >\r\n                      \r\n                    {data.species_char[species].alignment.map((align,index) => (\r\n                        <MenuItem  key={index} value={align}>{align}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {(this.props.species === 'Human' || this.props.species === 'High Elf' || this.props.species === 'Half-Elf') && <LanguagesPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'High Elf') && <TrickPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Mountain Dwarf' || this.props.species === 'Hill Dwarf') && <ToolsPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Dragonborn') && <Dragons getValue= {this.getValue} species = {this.props.species}/>}\r\n                \r\n            </FormControl>\r\n            </form>\r\n                {(this.props.species === 'Half-Elf') && <HalfelfSkills getValue= {this.getValue} species = {this.props.species}/>}        \r\n            {(species !== 'Human') && \r\n                <h3>As {species}, You have proficiences: <br/>{data.species_char[species].proficiency.toString()}</h3>\r\n            }\r\n          \r\n            \r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nSpeciesChar.contextType=DataContext;\r\nexport default SpeciesChar;","\r\n\r\nconst modificator = (values) => {\r\n    let mods = [];\r\n   values.forEach(value => {\r\n        for(let i = -5, b=1; i < 11; i ++) {\r\n            if(value <= b) {\r\n                mods.push(i);\r\n                break;\r\n            }\r\n            b += 2;\r\n        }\r\n    });\r\n    return mods;\r\n}\r\n\r\nexport default {\r\n    modificator,\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nclass Equip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        const equipment = data.class_char[profession].equip;\r\n        const standard = (\r\n            <>\r\n                <h3>Your equipment.</h3>\r\n                {data.class_char[profession].equip.map((item, index) => {\r\n                    if(typeof item === \"string\") {\r\n                        return (\r\n                            <p>You have {item} in your equipment. Pick the rest.</p>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Pick one from these:</FormLabel>\r\n                                    <RadioGroup aria-label=\"equipment\" name={`equipment${index}`} onChange={(e)=> this.props.getValue(`equip${index}`,e.target.value)}>\r\n                                        {item.map((el,i) => (\r\n                                            <FormControlLabel key={i} value={el} control={<Radio />} label={el}/>     \r\n                                        ))}\r\n                                    </RadioGroup>   \r\n                                </FormControl>  \r\n                        )\r\n                            \r\n                            \r\n                    }\r\n                })}\r\n            </>\r\n        );\r\n        return standard;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Equip;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass Instruments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"instruments pick\">\r\n               {profession === \"Bard\" && <h4>You are musician! Pick your three best instruments</h4>}\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">{profession === 'Bard' ? 'Pick three instruments' : 'Pick one instrument'}</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('instruments', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >\r\n                        \r\n                        {data.class_char[profession].instruments.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n                {(this.context.person.instruments.length !== 0) && <h4>You've picked {this.context.person.instruments.toString()}</h4>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nInstruments.contextType=DataContext;\r\nexport default Instruments;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\nclass ClassTricks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        let key;\r\n        let numb;\r\n        if(this.context.person.domain === 'Nature' && prof === 'Druid') {\r\n            key = 'deityTricks';\r\n            numb = 1;\r\n        } else { \r\n            key = 'classTricks'\r\n            numb = data.class_char[prof].tricks_pick;\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"tricks pick\">\r\n                {(this.context.person.domain === 'Nature' && prof === 'Druid') ? \r\n                <h4>As Nature Cleric You can pick 1 Druid trick</h4> \r\n                : <h4>As {prof} You can pick {data.class_char[prof].tricks_pick} tricks</h4>\r\n                }\r\n                 \r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {numb} magic trick(s)</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue(key, e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    >  \r\n                        {data.class_char[prof].classTricks.map((trick,index) => (\r\n                            <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {(this.context.person.classTricks.length !== 0 && this.props.mainpick) && <h4>You've picked {this.context.person.classTricks.toString()}</h4>}\r\n            </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nClassTricks.contextType=DataContext;\r\nexport default ClassTricks;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpellsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        return (\r\n            \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As {prof} You can pick {data.class_char[prof].spells_pick} spells</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof].spells_pick} spells</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.props.getValue('spells', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {(prof === 'Warlock') ? \r\n                    this.props.spells.map((spell,index) => (\r\n                        <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                    ))\r\n                  : data.class_char[prof].spells.map((spell,index) => (\r\n                    <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                ))\r\n\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.spells.length !== 0) && <h4>You've picked {this.context.person.spells.toString()}</h4>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nSpellsPick.contextType=DataContext;\r\nexport default SpellsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\nimport ClassTricks from './ClassTricks';\r\n\r\nclass Domain extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.domainEffects = this.domainEffects.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n    }\r\n\r\n\r\n    domainEffects(domain) {\r\n        if(domain === 'Tempest') {\r\n            this.context.addValue('weapons','martial weapons','heavy armour','classSpells','Fog Cloud','Thunderwave');\r\n        } else if (domain === 'Nature') {\r\n            this.context.addValue('classSpells','Animal Friendship','Speak with animals','weapons','heavy armour');\r\n        }\r\n        this.props.getValue('domain', domain);\r\n    }\r\n\r\n\r\n    getValue(key, event) {\r\n        this.props.getValue(key, event)\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As Cleric You have to choose one domain related to your deity</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one domain</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.domainEffects(e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {data.class_char['Cleric'].domains.map((domain,index) => (\r\n                    <MenuItem  key={index} value={domain}>{domain}</MenuItem>\r\n                ))\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.domain === 'Nature') && <ClassTricks profession={'Druid'} mainpick={false} getValue={this.getValue}/>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDomain.contextType=DataContext;\r\nexport default Domain;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport modificatorService from './services/modificator';\r\nimport {ClassSkills} from './Skills';\r\nimport Equip from './Equip';\r\nimport Instruments from './Instruments';\r\nimport ClassTricks from './ClassTricks';\r\nimport SpellsPick from './SpellsPick';\r\nimport Button from '@material-ui/core/Button';\r\nimport Domain from './Domain';\r\n\r\nclass ClassChar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classSkills: [],\r\n            instruments: [],\r\n            classTricks: [],\r\n            spells: [],\r\n            warlock: false,\r\n            warlock_spells: [],\r\n            domain: '',\r\n            deityTricks:[],\r\n        }\r\n\r\n        this.getValue = this.getValue.bind(this);\r\n        this.handleData = this.handleData.bind(this);\r\n        this.setPatron = this.setPatron.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let atr = this.state;\r\n        const profession = this.props.profession;\r\n        if(prevProps.currentStep !== this.props.currentStep) {\r\n        const mods = modificatorService.modificator(this.props.finals);\r\n        this.context.updatePerson('mods', mods);\r\n        }\r\n        if(prevProps.profession !== profession) {\r\n           if(prevProps.profession === 'Druid') this.context.cleanValue('languages');\r\n           if(profession === 'Druid') this.context.addValue('languages', 'Druidic');\r\n        }\r\n        if(prevState.classSkills !== atr.classSkills) {\r\n            this.context.updatePerson('classSkills', atr.classSkills, data.class_char[profession].skills_pick - 1);\r\n        }\r\n        if(prevState.equip1 !== atr.equip1) {\r\n            this.context.updatePerson('equip1', atr.equip1);\r\n        }\r\n        if(prevState.equip2 !== atr.equip2) {\r\n            this.context.updatePerson('equip2', atr.equip2);\r\n        }\r\n        if(prevState.equip3 !== atr.equip3) {\r\n            this.context.updatePerson('equip3', atr.equip3);\r\n        }\r\n        if(prevState.equip4 !== atr.equip4) {\r\n            this.context.updatePerson('equip4', atr.equip4);\r\n        }\r\n        if(prevState.instruments !== atr.instruments) {\r\n            this.context.updatePerson('instruments', atr.instruments, (profession === 'Bard') ? 2 : 0); \r\n        }\r\n        if(prevState.classTricks !== atr.classTricks) {\r\n            this.context.updatePerson('classTricks', atr.classTricks, data.class_char[profession].tricks_pick - 1); \r\n        }\r\n        if(prevState.spells !== atr.spells) {\r\n            this.context.updatePerson('spells', atr.spells, data.class_char[profession].spells_pick - 1); \r\n        }\r\n        if(prevState.domain !== atr.domain) {\r\n            this.context.updatePerson('domain', atr.domain); \r\n        }\r\n        if(prevState.deityTricks !== atr.deityTricks) {\r\n            this.context.updatePerson('deityTricks', atr.deityTricks); \r\n        }\r\n\r\n    }\r\n\r\n    getValue(key, event) {\r\n        this.setState({[key]: event}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let atr = {...this.context.person};\r\n        const prof = this.props.profession;\r\n        // if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n        // }\r\n        if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n            if(prof === 'Barbarian') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(prof === 'Bard' && atr.equip3 !== 0 && atr.instruments !== 0 && atr.spells !== 0 && atr.classTricks !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Warlock') && atr.equip3 !== 0 && atr.spells !== 0 && atr.classTricks !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Druid') && atr.equip3 !== 0 && atr.classTricks !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    setPatron(patron) {\r\n        let spells = [...data.class_char['Warlock'].spells];\r\n        if(patron === 'arcyfey') {\r\n            spells.push('Faerie Fire', 'Sleep')\r\n        } else if(patron === 'fiend') {\r\n            spells.push('Burning hands', 'Command')\r\n        } else {\r\n            spells.push('Bane', 'False life')\r\n        }\r\n        console.log(spells)\r\n        this.setState({warlock_spells: spells, warlock: true})\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        console.log(this.context.person);\r\n        console.log(this.props.currentStep);\r\n        const profession = this.props.profession;\r\n       \r\n        \r\n        if (this.props.currentStep !== 5) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"classAtr\"><h2>Brave {this.context.person.name}!</h2>\r\n            <h3>As {profession}:</h3>\r\n            <p><strong>Your class proficiencies are:</strong> {data.class_char[profession].proficiency.toString()}</p>\r\n            <p><strong>You have fighting proficiency in:</strong></p>\r\n                <ul>\r\n                    <li><strong>Armour:</strong> {data.class_char[profession].armor.toString()}</li>\r\n                    <li><strong>Weapon:</strong> {data.class_char[profession].weapons.toString()}</li>\r\n                    {(profession !== 'Bard' && profession !== 'Monk') && data.class_char[profession].tools.length !== 0 ?\r\n                    <p><strong>You have tools proficiency in:</strong> {data.class_char[profession].tools.toString()}</p>\r\n                    : <></>}\r\n                    \r\n                </ul>\r\n          \r\n            <p>Your HitDice is: {data.class_char[profession].hit_dice}</p>\r\n            <p>Your current Hit Points are: {data.class_char[profession].hit_points + this.context.person.mods[2]}</p>\r\n            {/* <h4>As {this.props.profession} You can pick {data.class_char[profession].skills_pick} skills from the list</h4>   */}\r\n            <ClassSkills profession={this.props.profession} getValue={this.getValue}/>\r\n            <Equip profession={this.props.profession} getValue={this.getValue}/>\r\n            {(profession === 'Bard' || profession === 'Monk') && <Instruments profession={profession} getValue={this.getValue}/>}\r\n            {(profession === 'Bard' || profession === 'Warlock' || profession === 'Druid' || profession === 'Cleric') && <ClassTricks profession={profession} mainpick={true} getValue={this.getValue}/>}\r\n            {(profession === 'Bard') && <SpellsPick profession={profession} getValue={this.getValue}/>}\r\n\r\n            {(profession === 'Warlock') &&\r\n                <div className=\"patrons\">\r\n                    <h4>Pick Your Otherworldly Patron</h4>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('arcyfey')}>Arcyfey</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('fiend')}>The Fiend</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('undead')}>The Undead</Button>\r\n                </div>\r\n            }\r\n            {(profession === 'Warlock' && this.state.warlock) && <SpellsPick profession={profession} getValue={this.getValue} spells={this.state.warlock_spells}/>}\r\n            {(profession === 'Cleric') && <Domain profession={profession} getValue={this.getValue}/>}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nClassChar.contextType=DataContext;\r\nexport default ClassChar;","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport SpeciesChar from './SpeciesChar';\r\nimport ClassChar from './ClassChar';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass MultiForm extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this.next = this.next.bind(this);\r\n    this.prev = this.prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n\r\n prev() {\r\n    let currentStep = this.state.currentStep\r\n    if(currentStep === 3) this.context.update({default: this.context.defaultStatic, rolled: this.context.defaultRolled, notConfirmed: true, actualState: ['','','','','','']})\r\n \r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 5 ? 6: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n  if(this.state.currentStep === 3 && this.context.final) this.setState({button:false});\r\n }\r\n\r\n  render () {\r\n    let currentStep = this.state.currentStep;\r\n    const previousButton = (\r\n      <Button className=\"previous\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        disabled={this.context.final && currentStep === 3}\r\n        onClick={this.prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button className=\"next\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this.next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1>Your Character Generator</h1>\r\n          </header>\r\n          <main>\r\n          {}\r\n            <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Features buttonState={this.handleButton} species={this.state.species} profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n            <SpeciesChar buttonState={this.handleButton} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <ClassChar finals={this.context.finalValues} profession={this.state.profession} buttonState={this.handleButton} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <div className=\"buttons\">\r\n              {currentStep !== 1 && previousButton}\r\n              {currentStep < 6 && nextButton } \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMultiForm.contextType=DataContext;\r\nexport default MultiForm;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport DataProvider from './contexts/DataProvider';\r\nimport MultiForm from './MultiForm';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    return (\r\n      <DataProvider>\r\n        <MultiForm/>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}