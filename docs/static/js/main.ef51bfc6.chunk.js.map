{"version":3,"sources":["contexts/DataContext.js","contexts/DataProvider.js","img/dd.png","img/human.png","img/elf.png","img/forest-elf.png","img/dark-elf.png","img/mountain-dwarf.png","img/dwarf.png","img/halfling.png","img/halfling-stout.png","img/tiefling.png","img/dragonborn.png","img/gnome.png","img/rock-gnome.png","img/half-orc.png","img/half-elf.png","Species.js","Classes.js","services/roll.js","AbilityCells.js","data/data.js","Bonus.js","FinalValues.js","HalfElfBonus.js","Features.js","LanguagesPick.js","TrickPick.js","ToolsPick.js","Dragons.js","SkillsClass.js","Skills.js","HalfElf.js","SpeciesChar.js","services/modificator.js","Equip.js","Instruments.js","ClassTricks.js","SpellsPick.js","ProficiencyPick.js","AddLang.js","Domain.js","Ranger.js","Fighter.js","ClassChar.js","Past.js","services/skillsMods.js","Sheet.js","MultiForm.js","App.js","reportWebVitals.js","fonts/Draconis.ttf","fonts/DraconisBold.ttf","index.js"],"names":["DataContext","React","createContext","DataProvider","props","updateState","bind","addPersonData","addValue","cleanValue","state","defaultStatic","default","rolled","defaultRolled","actualState","notConfirmed","finalValues","final","step_four","half_elf_bonus","person","name","gender","alignment","languages","tricks","tools","dragons","skills","equip1","equip2","equip3","equip4","prof","mods","spells","classSkills","classTricks","classSpells","instruments","domain","armour","deityTricks","deityProf","addLang","enemy","terrain","patron","fight_style","past","past_lang","past_instruments","past_tools","traits","ideals","bonds","flaws","update","updatePerson","values","this","setState","key","value","pick","personData","goodKey","len","length","splice","push","value1","value2","key2","value3","value4","data","data2","array","Provider","children","Component","Species","SPECIES","picked","handleData","e","species","els","document","getElementsByClassName","classList","remove","el","target","parentNode","add","console","log","buttonState","currentStep","className","class","onClick","src","human","alt","highelf","forestelf","darkelf","mountaindwarf","dwarf","lightfoot","stout","tiefling","dragonborn","forestgnome","rockgnome","halforc","halfelf","Classes","CLASSES","event","FormControl","InputLabel","style","color","id","Select","onChange","labelId","map","index","MenuItem","featuresNumbers","rolls","results","i","k6","Math","floor","random","sort","a","b","shift","sum","reduce","total","num","AbilityCells","features","changeValue","copy","context","defaultPicked","parseInt","every","abilities","ability","TableCell","def","feature","contextType","speciesBonus","species_char","speed","basic_languages","proficiency","skillsStatic","weapons","tricksStatic","toolsStatic","class_char","hit_dice","hit_points","armor","saving_throws","skills_pick","equip","tricks_pick","spells_pick","lang_pick","domains","fight_styles","money","tool_prof","Bonus","item","bon","textAlign","padding","FinalValues","useContext","profession","TableContainer","Table","TableHead","TableRow","TableBody","HalfElfBonus","BONUS","bonus","twice","added","querySelectorAll","forEach","button","disabled","Button","variant","Features","featuresUse","numbersToShow","rollMethod","useDefault","confirmMethod","serviceRoll","pickable","unshift","defaultNumbers","rollsResults","marginBottom","toString","Fade","in","marginTop","rolling","LanguagesPick","getValue","lang","TrickPick","trick","ToolsPick","step","tool","Dragons","dragon","SkillsClass","required","skill","withSubscription","WrappedComponent","objKey","HalfelfSkills","ClassSkills","SpeciesChar","prevProps","prevState","char","noValidate","autoComplete","TextField","label","align","Equip","eq","component","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","Instruments","instr","ClassTricks","numb","mainpick","SpellsPick","spell","ProficiencyPick","AddLang","Domain","domainEffects","nature","knowledge","Ranger","Fighter","ClassChar","warlock","warlock_spells","monk_instr","monk_tools","setPatron","setChoice","atr","deity","modificatorService","finals","choice","Past","BACKGROUND","go","createSheet","lastStep","multiline","rows","allSkills","noDuplicates","Set","skillsMod","notPushed","charSkill","Sheet","SKILLSARR","perception","background","pastSkills","info","concat","skillsService","saving1","saving2","allLang","replace","allInstr","allTools","allEquip","allProf","allTricks","allSpells","size","wrap","flexGrow","MultiForm","handleUserData","next","prev","handleButton","checkButtons","childData","previousButton","borderColor","nextButton","logo","ref","componentRef","content","handlePrint","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ef51bfc6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;\r\n\r\n","import React from 'react'\r\nimport DataContext from './DataContext'\r\n\r\nclass DataProvider extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.updateState = this.updateState.bind(this);\r\n        this.addPersonData = this.addPersonData.bind(this);\r\n        this.addValue = this.addValue.bind(this);\r\n        this.cleanValue = this.cleanValue.bind(this);\r\n\t\tthis.state = {\r\n           defaultStatic : ['empty',15, 14, 13, 12, 10, 8],\r\n           default : ['empty',15, 14, 13, 12, 10, 8],\r\n           rolled: [],\r\n           defaultRolled: [],\r\n           actualState: ['','','','','',''],\r\n\t\t   notConfirmed: true,\r\n           finalValues: [],\r\n           final: false,\r\n           step_four: false,\r\n           half_elf_bonus: [],\r\n            person: {\r\n                name: '',\r\n                gender: '',\r\n                alignment: '',\r\n                languages: [],\r\n                tricks: [],\r\n                tools:[],\r\n                dragons: [],\r\n                skills: [],\r\n                equip1: [],\r\n                equip2: [],\r\n                equip3: [],\r\n                equip4: [],\r\n                prof: [],\r\n                mods: [],\r\n                spells: [], \r\n                classSkills: [],\r\n                classTricks: [],\r\n                classSpells: [],\r\n                instruments: [],\r\n                domain: '',\r\n                armour: [],\r\n                deityTricks: [],\r\n                deityProf: [],\r\n                addLang: [],\r\n                enemy: '',\r\n                terrain: '',\r\n                patron: '',\r\n                fight_style: '',\r\n                past: '',\r\n                past_lang: [],\r\n                past_instruments: [],\r\n                past_tools: [],\r\n                traits: '',\r\n                ideals: '',\r\n                bonds: '',\r\n                flaws: '',\r\n\r\n            },\r\n            update: this.updateState,\r\n            updatePerson: this.addPersonData,\r\n            addValue: this.addValue,\r\n            cleanValue: this.cleanValue,\r\n\t\t}\r\n\t}\r\n\r\n\tupdateState(values) {\r\n\t\tthis.setState(values)\r\n\t}\r\n\r\n    addPersonData(key, value, pick) {\r\n        let personData = {...this.state.person};\r\n        let goodKey = personData[key];\r\n        let len = goodKey.length;\r\n        if (key === 'languages' || key === 'tricks' || key === 'tools' || key === 'dragons' || key === 'equip1' || key === 'equip2' || key === 'equip3' || key === 'equip4'  ) {\r\n            if(len <= 1 && key !== 'languages' && key !== 'tools') {\r\n                goodKey.splice(0,1,value)\r\n            } else if (len <= 1) {\r\n                goodKey.push(value);\r\n            } else {\r\n                goodKey.splice(1,2, value);\r\n            } \r\n        } else if (key === 'skills' || key === 'classSkills' || key === 'instruments' || key === 'classTricks' || key === 'spells' || key === 'deityProf' || key === 'addLang' || key === 'past_lang') {\r\n           \r\n            if (value === 'empty') { goodKey.splice(0, goodKey.length)\r\n            } else if(goodKey.length <= pick) {\r\n                goodKey.push(value); \r\n            } else {\r\n                goodKey.splice(0,1,value);\r\n            }\r\n        } else {\r\n                personData[key] = value;\r\n        }\r\n      \r\n        this.setState({person: personData});\r\n    }\r\n\r\n\r\n    addValue(key, value1, value2, key2, value3, value4) {\r\n        let personData = {...this.state.person};\r\n        let data = personData[key];\r\n        let data2 = personData[key2];\r\n        if(data.length < 2) {\r\n            data.push(value1, value2);\r\n            if(typeof data2 !== 'undefined')\r\n           \r\n            data2.push(value3);\r\n            if(typeof value4 !== 'undefined') data2.push(value4);\r\n        } else {\r\n            data.splice(0,2);\r\n            data.push(value1, value2);\r\n            if(typeof value4 !== 'undefined') {\r\n                data2.splice(0,2);\r\n                data2.push(value3);\r\n                if(typeof value4 !== 'undefined') data2.push(value4);\r\n            }\r\n        }\r\n        this.setState({person: personData});\r\n    }\r\n    \r\n    cleanValue(key) {\r\n        let personData = {...this.state.person};\r\n        let array = personData[key];\r\n        if(key==='tools') {\r\n            array.splice(1,1);\r\n        } else {array.length = [];}\r\n        this.setState({person: personData});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DataContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</DataContext.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataProvider","export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","export default __webpack_public_path__ + \"static/media/human.1be52bce.png\";","export default __webpack_public_path__ + \"static/media/elf.5869b2dd.png\";","export default __webpack_public_path__ + \"static/media/forest-elf.669bb50c.png\";","export default __webpack_public_path__ + \"static/media/dark-elf.6fc04cf4.png\";","export default __webpack_public_path__ + \"static/media/mountain-dwarf.f06703b6.png\";","export default __webpack_public_path__ + \"static/media/dwarf.2007b7d3.png\";","export default __webpack_public_path__ + \"static/media/halfling.c2a0f255.png\";","export default __webpack_public_path__ + \"static/media/halfling-stout.2493a2b8.png\";","export default __webpack_public_path__ + \"static/media/tiefling.c1ff1d0d.png\";","export default __webpack_public_path__ + \"static/media/dragonborn.7bfe139f.png\";","export default __webpack_public_path__ + \"static/media/gnome.bbe12deb.png\";","export default __webpack_public_path__ + \"static/media/rock-gnome.a9d06965.png\";","export default __webpack_public_path__ + \"static/media/half-orc.ad5987b3.png\";","export default __webpack_public_path__ + \"static/media/half-elf.2319491a.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport human from './img/human.png';\r\nimport highelf from './img/elf.png';\r\nimport forestelf from './img/forest-elf.png';\r\nimport darkelf from './img/dark-elf.png';\r\nimport mountaindwarf from './img/mountain-dwarf.png';\r\nimport dwarf from './img/dwarf.png';\r\nimport lightfoot from './img/halfling.png';\r\nimport stout from './img/halfling-stout.png';\r\nimport tiefling from './img/tiefling.png';\r\nimport dragonborn from './img/dragonborn.png';\r\nimport forestgnome from './img/gnome.png';\r\nimport rockgnome from './img/rock-gnome.png';\r\nimport halforc from './img/half-orc.png';\r\nimport halfelf from './img/half-elf.png';\r\n\r\n\r\nclass Species extends React.Component {\r\n    SPECIES = ['Human', 'High Elf', 'Forest Elf', 'Drow - Dark Elf', 'Mountain Dwarf', 'Hill Dwarf','Halfling - Lightfoot', 'Halfling - Stout','Tiefling','Dragonborn', 'Forest Gnome', 'Rock Gnome', 'Half-Orc','Half-Elf'];\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(e, species) {\r\n        // let classes = 'species_box';\r\n        let els = document.getElementsByClassName('species_box active');\r\n        if(els){\r\n            while (els[0]) {\r\n                els[0].classList.remove('active')\r\n            }\r\n        }\r\n     \r\n        // // e.target.className = classes.replace('species_box','species_box active');\r\n        let el = e.target.parentNode;\r\n        el.classList.add('active');\r\n        console.log(el);\r\n        this.props.handleData('species',species)\r\n        this.setState({picked: species});\r\n        this.props.buttonState('clicked');\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             {/* <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.SPECIES.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl> */}\r\n\r\n            <h2>Pick Your Species</h2>            \r\n            <div className=\"species_boxes\">\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Human')}>\r\n                    <p>Human</p>\r\n                    <img src={human} className=\"species_img\" alt=\"human\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'High Elf')}>\r\n                    <p>High Elf</p>\r\n                    <img src={highelf} className=\"species_img\" alt=\"high elf\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Forest Elf')}>\r\n                    <p>Forest Elf</p>\r\n                    <img src={forestelf} className=\"species_img\" alt=\"forest elf\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Drow - Dark Elf')}>\r\n                    <p>Drow - Dark Elf</p>\r\n                    <img src={darkelf} className=\"species_img\" alt=\"dark elf\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Mountain Dwarf')}>\r\n                    <p>Mountain Dwarf</p>\r\n                    <img src={mountaindwarf} className=\"species_img\" alt=\"mountain dwarf\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Hill Dwarf')}>\r\n                    <p>Hill Dwarf</p>\r\n                    <img src={dwarf} className=\"species_img\" alt=\"hill dwarf\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Halfling - Lightfoot')}>\r\n                    <p>Halfling - Lightfoot</p>\r\n                    <img src={lightfoot} className=\"species_img\" alt=\"halfling lightfoot\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Halfling - Stout')}>\r\n                    <p>Halfling - Stout</p>\r\n                    <img src={stout} className=\"species_img\" alt=\"halfling stout\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Tiefling')}>\r\n                    <p>Tiefling</p>\r\n                    <img src={tiefling} className=\"species_img\" alt=\"tiefling\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Dragonborn')}>\r\n                    <p>Dragonborn</p>\r\n                    <img src={dragonborn} className=\"species_img\" alt=\"dragonborn\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Forest Gnome')}>\r\n                    <p>Forest Gnome</p>\r\n                    <img src={forestgnome} className=\"species_img\" alt=\"forest gnome\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Rock Gnome')}>\r\n                    <p>Rock Gnome</p>\r\n                    <img src={rockgnome} className=\"species_img\" alt=\"rock gnome\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Half-Orc')}>\r\n                    <p>Half Orc</p>\r\n                    <img src={halforc} className=\"species_img\" alt=\"half orc\" />\r\n                </div>\r\n                <div class=\"species_box\" onClick={(e) => this.handleData(e, 'Half-Elf')}>\r\n                    <p>Half Elf</p>\r\n                    <img src={halfelf} className=\"species_img\" alt=\"half elf\" />\r\n                </div>\r\n            </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    CLASSES = ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.CLASSES.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\nclass AbilityCells extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            default: props.default,\r\n            features: props.features,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        let data = event.target.value;\r\n        let actualState = [...this.context.actualState];\r\n        console.log(actualState);\r\n        let copy;\r\n        if(this.props.defaultPicked) {\r\n            copy = [...this.context.default];\r\n        } else { \r\n            copy = [...this.context.rolled];\r\n        }\r\n        for( let i = 0; i < copy.length; i++){ \r\n            if ( copy[i] === data && data === parseInt(data, 10)) { \r\n                copy.splice(i, 1); \r\n                break;\r\n            }\r\n        }\r\n        if(actualState[index] === parseInt(actualState[index], 10)) copy.push(actualState[index])\r\n            actualState[index] = data;\r\n        if (actualState.every(value => value === parseInt(value, 10))) {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: false, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: false, actualState});\r\n        } else {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: true, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: true, actualState});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                                \r\n                                {\r\n                                this.props.defaultPicked ?\r\n                                this.context.default.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) :\r\n                                this.context.rolled.map((feature,index) => (\r\n                                    <MenuItem  className=\"option\" key={index} value={feature}>{feature}</MenuItem>\r\n                                )) \r\n                                }\r\n                            </Select> \r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nAbilityCells.contextType=DataContext;\r\nexport default AbilityCells; ","export const data = {\r\n    speciesBonus: {\r\n        'Human': [1, 1, 1, 1, 1, 1],\r\n        'High Elf': ['', 2,'',1,'',''],\r\n        'Forest Elf': ['',2, '', '', 1, ''],\r\n        'Drow - Dark Elf': ['',2,'','','',1],\r\n        'Mountain Dwarf': [2,'' ,2,'','',''],\r\n        'Hill Dwarf': ['','',2,'',1,''],\r\n        'Halfling - Lightfoot': ['',2,'','','',1],\r\n        'Halfling - Stout': ['', 2, 1, '', '','' ],\r\n        'Forest Gnome': ['',1,'',2, '',''],\r\n        'Rock Gnome': ['','',1,2,'',''],\r\n        'Tiefling': ['','','',1, '',2],\r\n        'Dragonborn': [2, '','','','',1],\r\n        'Half-Elf': ['',2,'','','',2],\r\n        'Half-Orc': [2, '',1, '','',''],\r\n    },\r\n    species_char : {\r\n        'Human': {\r\n            gender: ['female','male'],\r\n            alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n            speed: '9m',\r\n            basic_languages: ['Common'],\r\n            languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n            proficiency: [],\r\n            skillsStatic: [],\r\n        },\r\n        'Forest Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '10,5m',\r\n             basic_languages: ['Elvish & Common'],\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Mask of the Wild', 'Martial Arts'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n             skillsStatic: ['Perception']\r\n         },\r\n         'High Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '9m',\r\n             basic_languages: ['Elvish & Common'],\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Magic Trick', 'Martial Arts'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n             tricks: ['Dancing Lights','Light', 'Mage Hand', 'Message','Mending','Resistance','Acid Splash','Ray of Frost','Fire Bolt','Minor Illusion','Shocking Grasp','True Strike','Poison Spray','Prestidigitation','Chill Touch','Friendship'],\r\n             skillsStatic: ['Perception'],\r\n         },\r\n         'Drow - Dark Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: ['Elvish & Common'],\r\n             proficiency: ['Superior Darkvision - 36m','Fey Ancestry', 'Trance','Sunlight Sensitivity','Drow Magic', 'Drow Weapon Training'],\r\n             weapons: ['rapier', 'hand crossbow', 'short sword'],\r\n             tricksStatic: ['Dancing Lights'],\r\n             skillsStatic: ['Perception'],\r\n         },\r\n         'Mountain Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: ['Dwarvish & Common'],\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Armor Training', 'Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer','light armor','medium armor'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools'],\r\n             skillsStatic: []\r\n         },\r\n         'Hill Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: ['Dwarvish & Common'],\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Toughness','Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools'],\r\n             skillsStatic: []\r\n         },\r\n         'Halfling - Lightfoot': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: ['Halfling & Common'],\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Naturally Stealthy'],\r\n             skillsStatic: []\r\n         },\r\n         'Halfling - Stout': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: ['Halfling & Common'],\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Stout Resilience'],\r\n             skillsStatic: []\r\n         },\r\n         'Tiefling': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: ['Infernal & Common'],\r\n             proficiency: ['Darkvision - 18m', 'Hellish Resistance','Infernal Legacy','Stout Resilience'],\r\n             tricksStatic: ['thaumaturgy'],\r\n             skillsStatic: []\r\n         },\r\n         'Dragonborn': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: ['Draconic & Common'],\r\n             proficiency: ['Draconic Ancestry', 'Breath Weapon','Damage Resistance'],\r\n             dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n         },\r\n         'Forest Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: ['Gnomish & Common'],\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Natural Illusionist','Speak with Small Beasts'],\r\n             tricksStatic: ['Minor Illusion'],\r\n             skillsStatic: []\r\n         },\r\n         'Rock Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: ['Gnomish & Common'],\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Artificer’s Lore','Tinker'],\r\n             toolsStatic: ['tinker`s tools'],\r\n             skillsStatic: []\r\n         },\r\n         'Half-Orc': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: ['Orc & Common'],\r\n             proficiency: ['Darkvision - 18m', 'Menacing','Relentless Endurance','Savage Attacks'],\r\n             skillsStatic: ['Persuasion']\r\n         },\r\n         'Half-Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: ['Elvish & Common'],\r\n             proficiency: ['Darkvision - 18m', 'Fey Ancestry','Skill Versatility','Savage Attacks'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion'],\r\n             skillsStatic: []\r\n         }\r\n    },\r\n    class_char: {\r\n        'Barbarian': {\r\n            hit_dice: '1k12',\r\n            hit_points: 12,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows','longswords','rapiers','shortswords'],\r\n            saving_throws: ['Dexterity', 'Charisma'],\r\n            skills_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Intimidation', 'Nature', 'Perception', 'Survival'],\r\n            equip: ['An explorer’s pack and four javelins', ['a greataxe', 'any martial melee weapon'], ['two handaxes', 'any simple weapon']],\r\n            proficiency: ['Rage', 'Unarmored Defense']\r\n        },\r\n        'Bard': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 3,\r\n            tricks_pick: 2,\r\n            spells_pick: 4,\r\n            skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion'],\r\n            instruments: ['empty','Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            equip: ['Leather armor and a dagger', ['a rapier', 'a longsword', 'any simple weapon'], ['a diplomat’s pack', 'an entertainer’s pack'], ['a lute', 'any other musical instrument']],\r\n            proficiency: ['Spellcasting','Bardic Inspiration'],\r\n            classTricks: ['empty','Dancing Lights','Friends','Light','Mage Hand','Message','Minor Illusion','Prestidigitation','Vicious Mockery','True Strike','Mending','Blade Ward'],\r\n            spells: ['empty','Animal Friendship','Bane','Charm Person','Comprehend Languages','Cure Wounds','Detect Magic','Disguise Self','Dissonant Whispers','Distort Value','Earth Tremor','Faerie Fire','Feather Fall','Healing Word','Heroism','Hideous Laughter','Identify','Illusory Script','Longstrider','Silent Image','Sleep','Speak with Animals','Tasha`s Hideous Laughter','Thunderwave','Unseen Servant'],\r\n        },\r\n        'Warlock': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            tricks_pick: 2,\r\n            spells_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Arcana', 'Deception', 'History', 'Intimidation', 'Investigation', 'Nature', 'Religion'],\r\n            equip: ['Leather armor, any simple weapon, and two daggers', ['a light crossbow and 20 bolts', 'any simple weapon'], ['a component pouch', 'an arcane focus'], ['a scholar’s pack', 'a dungeoneer’s pack']],\r\n            proficiency: ['Otherworldly Patron','Pact Magic'],\r\n            classTricks: ['empty','Friends','Mage Hand','Minor Illusion','Prestidigitation','True Strike','Blade Ward','Chill Touch','Poison Spray','Eldritch Blast'],\r\n            spells: ['empty','Armor of Agathys','Arms of Hadar','Charm Person','Comprehend Languages','Cause Fear','Distort Value','Expeditious Retreat','Hellish Rebuke','Hex','Illusory Script','Protection from Evil and Good','With Bolt','Unseen Servant'],\r\n        },\r\n        'Druid': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['Clubs', 'daggers', 'darts', 'javelins', 'maces', 'quarterstaffs', 'scimitars', 'sickles', 'slings', 'spears'],\r\n            saving_throws: ['Wisdom', 'Intelligence'],\r\n            skills_pick: 2,\r\n            tricks_pick: 2,\r\n            spells_pick: 2,\r\n            skills: ['empty','Arcana', 'Animal Handling', 'Insight', 'Medicine', 'Nature', 'Perception', 'Religion', 'Survival'],\r\n            tools: ['Herbalism kit'],\r\n            equip: ['Leather armor, an explorer’s pack, and a druidic focus', ['a wooden shield', 'any simple weapon'], ['a scimitar', 'any simple melee weapon']],\r\n            proficiency: ['Druidic','Spellcasting'],\r\n            classTricks: ['empty','Mending','Thorn Whip','Resistance','Shillelagh','Guidance','Create Bonfire','Poison Spray'],\r\n            spells: ['empty','Faerie Fire','Fog Cloud','Goodberry','Thunderwave','Healing Word','Cure Wounds','Purify Food and Drink','Entangle','Animal Friendship','Speak with animals','Jump','Create or Destroy Water','Longstrider','Detect Magic','Charm Person','Detect Poison and Disease'],\r\n        },\r\n        'Cleric': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            tricks_pick: 3,\r\n            lang_pick: 2,\r\n            skills: ['empty','History', 'Insight', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['A shield and a holy symbol', ['a mace', 'a warhammer (if proficient)'], ['scale mail', 'leather armor', 'chain mail (if proficient)'], ['a light crossbow and 20 bolts', 'any simple weapon'], ['a priest’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Divine Domain'],\r\n            classTricks: ['empty','Mending','Resistance','Guidance','Light','Sacred Flame','Spare the Dying','Thaumaturgy'],\r\n            domains: ['Knowledge','Life','Light','Nature','Tempest','Trickery','War'],\r\n            'Nature': {\r\n                pick: 1,\r\n                prof: ['Animal Handling','Nature','Survival'],\r\n            },\r\n            'Knowledge': {\r\n                pick: 2,\r\n                prof: ['Arcana','History','Nature','Religion'],\r\n            },\r\n            languages: ['empty','Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n        },\r\n        'Rogue': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows', 'longswords', 'rapiers', 'shortswords'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 4,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'Deception', 'Insight', 'Intimidation', 'Investigation', 'Perception', 'Performance', 'Persuasion', 'Sleight of Hand','Stealth'],\r\n            tools: ['Thieves’ tools'],\r\n            equip: ['Leather armor, two daggers, and thieves’ tools', ['a rapier', 'a shortsword'], ['a shortbow and quiver of 20 arrows', 'a shortsword'], ['a burglar’s pack', 'a dungeoneer’s pack','an explorer’s pack']],\r\n            proficiency: ['Expertise','Sneak Attack','Thieves’ Cant']\r\n        },\r\n        'Ranger': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 3,\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Insight', 'Investigation', 'Nature', 'Perception', 'Stealth'],\r\n            tools: [],\r\n            equip: ['A longbow and a quiver of 20 arrows', ['scale mail', 'leather armor'], ['two shortswords', 'two simple melee weapons'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Favored Enemy','Natural Explorer'],\r\n            enemy: ['aberrations','beasts','celestials','constructs','dragons','elementals','fey','fiends','giants'],\r\n            terrain: ['arctic','coast','desert','forest','grassland','mountain','swamp','underdark'],\r\n        },\r\n        'Wizard': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Intelligence', 'Wisdom'],\r\n            skills_pick: 2,\r\n            tricks_pick: 3,\r\n            spells_pick: 6,\r\n            skills: ['empty','Arcana', 'History', 'Insight', 'Investigation', 'Medicine', 'Religion'],\r\n            tools: [],\r\n            equip: ['A spellbook', ['a quarterstaff', 'a dagger'], ['a component pouch', 'an arcane focus'], ['a scholar’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Arcane Recovery'],\r\n            classTricks: ['empty','Mending','Prestidigitation','Acid Splash','Mage Hand','Create Bonfire','Blade Ward','Minor Illusion','Shocking Grasp','True Strike','Ray of Frost','Chill Touch','Friends','Light','Dancing Lights','Poison Spray','Message'],\r\n            spells: ['empty','Alarm','Chromatic Orb','Expeditious Retreat','Fog Cloud','Thunderwave','False Life','Identify','Illusory Script','Color Spray','Magic Missile','Silent Image','Unseen Servant','Protection from Evil and Good','Tasha`s Hideous Laughter','Feather Fall','Burning Hands','Ray of Sickness','Disguise Self','Comprehend Languages','Jump','Longstrider','Shield','Grease','Sleep','Tenser`s Floating Disk','Witch Bolt','Detect Magic','Charm Person','Mage Armour','Find Familiar'],\r\n        },\r\n        'Monk': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: [],\r\n            weapons: ['Simple weapons, shortswords'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'History', 'Insight', 'Religion','Stealth'],\r\n            instruments: ['Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            tools: ['Alchemist’s supplies','Tinker’s tools','Glassblower’s tools','Jeweler’s tools','Brewer’s supplies','Smith’s tools','Cartographer’s tools','Mason’s tools','Calligrapher`s Supplies','Painter’s supplies','Potter’s tools','Carpenter’s tools','Cobbler’s tools','Leatherworker’s tools','Cook’s utensils','Weaver’s tools','Woodcarver’s tools'],\r\n            equip: ['10 darts', ['a shortsword', 'simple weapon'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Unarmored Defense','Martial Arts']\r\n        },\r\n        'Paladin': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armour', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Athletics', 'Insight', 'Intimidation', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Chain mail and a holy symbol', ['a martial weapon and a shield', 'two martial weapons'], ['five javelins', 'any simple melee weapon'], ['a priest’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Divine Sense','Lay on Hands']\r\n        },\r\n        'Fighter': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armour', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Animal Handling', 'Athletics', 'History', 'Insight', 'Intimidation', 'Perception', 'Survival'],\r\n            tools: [],\r\n            equip: [['chain mail', 'leather armor, longbow, and 20 arrows'], ['a martial weapon and a shield', 'two martial weapons'], ['a light crossbow and 20 bolts', 'two handaxes'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Fighting Style','Second Wind'],\r\n            fight_styles: ['Archery', 'Defense','Dueling','Great Weapon Fighting','Protection','Two-Weapon Fighting'],\r\n        },\r\n        'Sorcerer': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Charisma', 'Constitution'],\r\n            skills_pick: 2,\r\n            tricks_pick: 4,\r\n            spells_pick: 2,\r\n            skills: ['empty','Arcana', 'Deception', 'Insight', 'Intimidation', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Two daggers', ['a light crossbow and 20 bolts', 'any simple weapon'], ['a component pouch', 'an arcane focus'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Sorcerous Origin - Draconic Bloodline', 'Sorcerous Origin - Wild Magic'],\r\n            dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n            classTricks: ['Prestidigitation','Acid Splash','Mage Hand','Mending','Fire Bolt','Blade Ward','Minor Illusion','Shocking Grasp','True Strike','Ray of Frost','Chill Touch','Friends','Light','Dancing Lights','Poison Spray','Message'],\r\n            spells: ['Chromatic Orb','Expeditious Retreat','Fog Cloud','Thunderwave','False Life','Color Spray','Magic Missile','Silent Image','Feather Fall','Burning Hands','Ray of Sickness','Disguise Self','Comprehend Languages','Jump','Shield','Sleep','Witch Bolt','Detect Magic','Charm Person','Mage Armor'],\r\n        },\r\n\r\n    },\r\n    past: {\r\n        'Acolyte' :{\r\n            proficiency: ['Insight', 'Religion'],\r\n            lang_pick: 2,\r\n            languages: ['empty','Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc'],\r\n            money: 15,\r\n            equip: ['a holy symbol','a prayer book or prayer wheel','5 sticks of incense','vestments','Common clothes'],\r\n        },\r\n        'Entertainer': {\r\n            proficiency: ['Acrobatics', 'Performance'],\r\n            tool_prof: ['Disguise Kit'],\r\n            instruments: ['Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            money: 15,\r\n            equip: ['the favor of an admirer (love letter, lock of hair, or trinket)','a costume'],\r\n        },\r\n        'Folk Hero': {\r\n            proficiency: ['Animal Handling', 'Survival'],\r\n            tools: ['smith’s tools','brewer’s supplies','mason’s tools'],\r\n            tool_prof: ['vehicles (land)'],\r\n            money: 10,\r\n            equip: ['a shovel','an iron pot','a set of common clothes'],\r\n        },\r\n        'Sailor': {\r\n            proficiency: ['Athletics', 'Perception'],\r\n            tool_prof: ['Navigator`s tools','vehicles (water)'],\r\n            equip: ['A belaying pin (club)','50 feet of silk rope','a lucky charm','a set of common clothes','a belt pouch containing 10 gp'],\r\n        },\r\n        'Sage': {\r\n            proficiency: ['Arcana', 'History'],\r\n            lang_pick: 2,\r\n            languages: ['empty','Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc'],\r\n            money: 10,\r\n            equip: ['A belaying pin (club)','50 feet of silk rope','a lucky charm','a set of common clothes'],\r\n        },\r\n        'Outlander': {\r\n            proficiency: ['Survival', 'Athletics'],\r\n            lang_pick: 1,\r\n            languages: ['empty','Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc'],\r\n            instruments: ['Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            money: 10,\r\n            equip: ['A staff','a hunting trap','a trophy from an animal you killed','a set of traveler`s clothes'],\r\n        },\r\n        'Criminal / Spy': {\r\n            proficiency: ['Deception', 'Stealth'],\r\n            tool_prof: ['One type of gaming set','thieves’ tools'],\r\n            money: 15,\r\n            equip: ['A crowbar','a set of dark common clothes including a hood'],\r\n        },\r\n        'Hermit': {\r\n            proficiency: ['Medicine', 'Religion'],\r\n            lang_pick: 1,\r\n            languages: ['empty','Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc'],\r\n            tool_prof: ['Herbalism Kit'],\r\n            money: 5,\r\n            equip: ['A Winter Blanket','a Set of common clothes','a herbalism kit','A scroll case stuffed full of notes from your studies or prayers'],\r\n        },\r\n        'Guild Artisan': {\r\n            proficiency: ['Insight', 'Persuasion'],\r\n            lang_pick: 1,\r\n            languages: ['empty','Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc'],\r\n            tools: ['smith’s tools','brewer’s supplies','mason’s tools'],\r\n            money: 15,\r\n            equip: ['A set of artisan`s tools (one of your choice)','a letter of introduction from your guild','a set of traveler`s clothes'],\r\n        },\r\n        'Charlatan': {\r\n            proficiency: ['Deception', 'Sleight of Hand'],\r\n            tool_prof: ['Disguise kit', 'forgery kit'],\r\n            money: 15,\r\n            equip: ['A set of fine clothes','a disguise kit','tools of the con of your choice (ten stoppered bottles filled with colored liquid, a set of weighted dice, a deck of marked cards, or a signet ring of an imaginary duke)'],\r\n        },\r\n        'Noble': {\r\n            proficiency: ['History', 'Persuasion'],\r\n            lang_pick: 1,\r\n            languages: ['empty','Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc'],\r\n            tool_prof: ['One type of gaming set'],\r\n            money: 25,\r\n            equip: ['A set of fine clothes','a signet ring','a scroll of pedigree'],\r\n        },\r\n        'Urchin': {\r\n            proficiency: ['Sleight of Hand', 'Stealth'],\r\n            tool_prof: ['Disguise kit','thieves` tools'],\r\n            money: 10,\r\n            equip: ['A small knife','a map of the city you grew up in','a pet mouse','a token to remember your parents by','a set of common clothes'],\r\n        },\r\n        'Soldier': {\r\n            proficiency: ['Athletics', 'Intimidation'],\r\n            tool_prof: ['one type of gaming set','vehicles (land)'],\r\n            money: 10,\r\n            equip: ['An insignia of rank','a trophy taken from a fallen enemy (a dagger, broken blade, or piece of a banner)','a set of bone dice or deck of cards','a set of common clothes'],\r\n        },\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default data;","import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...data.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n       values,\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","import React, {useContext} from 'react';\r\nimport DataContext from './contexts/DataContext'; \r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nfunction FinalValues(props) {\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <>\r\n        <h3>Your species: {props.species}</h3>\r\n        <h3>Your profession: {props.profession}</h3>\r\n        <h3>Your abilities:</h3>\r\n        <TableContainer >\r\n            <Table className=\"abilities\" id=\"finalValues\"> \r\n                <TableHead>\r\n                    <TableRow> \r\n                        {props.abilities.map((ability, index) => (\r\n                            <TableCell key={index}>{ability}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow  id=\"values\">\r\n                        {data.finalValues.map((value, index) => (\r\n                            <TableCell key={index}>{value}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default FinalValues;","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\nclass HalfElfBonus extends React.Component {\r\n    BONUS = [0, +1];\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            bonus: [0, +1],\r\n            picked: [0, 0, 0, 0, 0, 0],\r\n            twice: 0,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        \r\n        \r\n        let el = event.target.parentNode;\r\n        let added = [...this.state.picked];\r\n        const sum = added.reduce((total, num) => total + num);\r\n        \r\n        if(added[index] === 1) {\r\n            added[index] = 0;\r\n            el.classList.remove('active');\r\n            let buttons = document.querySelectorAll('.MuiButton-containedPrimary:not(.active)');\r\n            buttons.forEach((button) => {\r\n              button.disabled = false;  \r\n            });\r\n            this.setState({picked: added}, this.context.update({half_elf_bonus: added}));\r\n        } else {\r\n            added[index] = 1;\r\n            el.classList.add('active');\r\n            if(sum === 1) {\r\n                console.log('disable it!')\r\n                let buttons = document.querySelectorAll('.MuiButton-containedPrimary:not(.active)');\r\n                buttons.forEach((button) => {\r\n                    button.disabled = true;  \r\n                })\r\n            } \r\n            this.setState({picked: added}, this.context.update({half_elf_bonus: added}))\r\n           \r\n        }\r\n        \r\n        \r\n\r\n        \r\n     \r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n       \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            {/* <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Bonus</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                            {this.state.bonus.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) }\r\n                            </Select>  */}\r\n                            <Button\r\n                            onClick={(e) => this.changeValue(index,e)}\r\n                            variant=\"contained\" \r\n                            color=\"primary\"\r\n                            >Bonus +1</Button>\r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nHalfElfBonus.contextType=DataContext;\r\nexport default HalfElfBonus; ","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AbilityCells from './AbilityCells';\r\nimport Bonus from './Bonus';\r\nimport FinalValues from './FinalValues';\r\nimport HalfElfBonus from './HalfElfBonus';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            abilities: ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'],\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n            defaultPicked: false,\r\n            numbersToShow: [],\r\n            final: false,\r\n        }\r\n\r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n        this.confirmMethod = this.confirmMethod.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        let pickable = [...features]\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: features, featuresUse: pickable, rolled: true}, this.context.update({rolled: pickable, defaultRolled: pickable}) );\r\n    }\r\n\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        let pickable = [...defaultNumbers];\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: defaultNumbers, features: pickable , rolled: true, defaultPicked: true});\r\n    }\r\n\r\n    confirmMethod() {\r\n        let state = [...this.context.actualState]\r\n        let bonus;\r\n        if(this.props.species === 'Half-Elf') {\r\n             bonus = [... this.context.half_elf_bonus];\r\n        } else {\r\n             bonus =  [...data.speciesBonus[this.props.species]];\r\n        }\r\n        \r\n        for(let i=0; i < state.length; i++) {\r\n            if(bonus[i] === parseInt(bonus[i], 10)) state[i] += bonus[i]\r\n        }\r\n        this.props.buttonState('clicked');\r\n        this.setState({final: true}, this.context.update({finalValues: state, final: true}) );\r\n    }\r\n\r\n    \r\n    render() {\r\n        console.log(this.context);\r\n   \r\n       \r\n        const rollsResults = (\r\n            <>\r\n                <h4 style={{marginBottom: 0}}>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.numbersToShow.toString()}</h4>\r\n                {(this.props.species === 'Half-Elf') && <p className=\"halfbonus\">and pick two bonuses</p>}\r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\" id=\"abilities\" style={{marginTop: 25}}> \r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            \r\n                            <TableRow id=\"values\">\r\n                                <AbilityCells  abilities={this.state.abilities} default={this.state.features} features={this.state.featuresUse} defaultPicked={this.state.defaultPicked}/>  \r\n                            </TableRow>\r\n                            <TableRow>\r\n                                {(this.props.species !== 'Half-Elf') \r\n                                ? \r\n                                <Bonus species ={this.props.species}/>\r\n                                :\r\n                                <HalfElfBonus abilities={this.state.abilities}/>\r\n                                }\r\n                                 \r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n                </Fade> \r\n                 <Button \r\n                    onClick={this.confirmMethod} \r\n                    disabled={this.context.notConfirmed}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"  \r\n                    style={{marginTop: \"26px\"}}\r\n                    >\r\n                        Confirm - One way ticket!\r\n                    </Button>                   \r\n                \r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        \r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        } else if(!this.state.final) {\r\n            return this.state.rolled ? rollsResults : rolling      \r\n        } else {\r\n            return (<FinalValues abilities = {this.state.abilities} species={this.props.species} profession={this.props.profession}/>)\r\n        }             \r\n       \r\n    }\r\n    \r\n}\r\nFeatures.contextType=DataContext;\r\nexport default Features;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass LanguagesPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('languages', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {data.species_char[species].languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nLanguagesPick.contextType=DataContext;\r\nexport default LanguagesPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass TrickPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick One magic trick</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tricks', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.tricks[0]}\r\n                >\r\n                      {data.species_char[species].tricks.map((trick,index) => (\r\n                        <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nTrickPick.contextType=DataContext;\r\nexport default TrickPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass ToolsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        const species = this.props.species;\r\n        const step = this.props.step;\r\n        let pick;\r\n        if (step === 6) {\r\n            pick = data.past[this.props.past].tools;\r\n        } else if (step === 4) {  \r\n            pick = data.species_char[species].tools;\r\n        } else {\r\n            pick = data.class_char[prof].tools;\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one artisan`s tool</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tools', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n            \r\n                >\r\n                     \r\n                        {pick.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                        )) }\r\n                       \r\n                  \r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nToolsPick.contextType=DataContext;\r\nexport default ToolsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass Dragons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Dragon</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('dragons', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.dragons}\r\n                >\r\n                      \r\n                      {data.species_char[species].dragons.map((dragon,index) => (\r\n                        <MenuItem  key={index} value={dragon}>{dragon}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDragons.contextType=DataContext;\r\nexport default Dragons;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nconst SkillsClass = (props) => {\r\n    const profession= props.profession\r\n    return (\r\n        <>\r\n        <h4>As {profession} You can pick {data.class_char[profession].skills_pick} additional skills.</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[profession].skills_pick} skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('classSkills', e.target.value)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n                required=\"true\"\r\n            >\r\n                    \r\n                    {data.class_char[profession].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SkillsClass;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\nimport HalfElf from './HalfElf';\r\nimport SkillsClass from './SkillsClass';\r\n\r\n\r\nfunction withSubscription(WrappedComponent, objKey) {\r\n    \r\n    return class Skills extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n        }\r\n        \r\n        render() {\r\n        \r\n            return (\r\n                \r\n                <>\r\n                 <WrappedComponent species={this.props.species} getValue= {this.props.getValue} profession={this.props.profession}/>\r\n                {(this.context.person[objKey].length !== 0) && <h4>You've picked {this.context.person[objKey].toString()}</h4>}\r\n               </> \r\n            )\r\n        }\r\n        \r\n    \r\n    }\r\n    \r\n}\r\n\r\nconst HalfelfSkills = withSubscription(HalfElf, 'skills');\r\nconst ClassSkills = withSubscription(SkillsClass, 'classSkills');\r\nHalfelfSkills.contextType = DataContext;\r\nClassSkills.contextType = DataContext;\r\n\r\n\r\nexport {\r\n    HalfelfSkills,\r\n    ClassSkills,\r\n}","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst HalfElf = (props) => {\r\n    return (\r\n        <>\r\n        <h4>As Half Elf You can pick two skills</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick two skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('skills', e)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n            >\r\n                    \r\n                    {data.species_char[props.species].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HalfElf;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LanguagesPick from './LanguagesPick';\r\nimport TrickPick from './TrickPick';\r\nimport ToolsPick from './ToolsPick';\r\nimport Dragons from './Dragons';\r\nimport {HalfelfSkills} from './Skills';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpeciesChar extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            name: '',\r\n            gender: '',\r\n            alignment: '',\r\n            languages: [],\r\n            tricks: [],\r\n            tools:[],\r\n            dragons: [],\r\n            skills: [],\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let char = this.state;\r\n        // if(prevState.name !== char.name && prevState.gender !== char.gender && prevState.alignment !== char.alignment && prevProps.button === true) this.handleData();\r\n        if(prevState.name !== char.name) {\r\n            this.context.updatePerson('name',char.name);\r\n        }\r\n        if(prevState.gender !== char.gender) {\r\n            this.context.updatePerson('gender',char.gender);\r\n        }\r\n        if(prevState.alignment !== char.alignment) {\r\n            this.context.updatePerson('alignment',char.alignment);\r\n        }\r\n        if(prevState.languages !== char.languages) {\r\n            this.context.updatePerson('languages',char.languages);\r\n        }\r\n        if(prevState.tricks !== char.tricks) {\r\n            this.context.updatePerson('tricks',char.tricks);\r\n        }\r\n        if(prevState.tools !== char.tools) {\r\n            this.context.updatePerson('tools',char.tools);\r\n        }\r\n        if(prevState.dragons !== char.dragons) {\r\n            this.context.updatePerson('dragons',char.dragons);\r\n        }\r\n        if(prevState.skills !== char.skills) {\r\n            this.context.updatePerson('skills',char.skills, 1);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getValue(key, event) {\r\n        const data = event.target.value;\r\n        this.setState({[key]: data}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let char = this.state;\r\n        const species = this.props.species;\r\n        if(char.name !== '' && char.gender !== '' && char.alignment !== '') {\r\n            if(species === 'Drow - Dark Elf' || species === 'Forest Elf' || species === 'Halfling - Lightfoot' || species === 'Halfling - Stout' || species === 'Tiefling' || species === 'Forest Gnome' || species === 'Rock Gnome' || species === 'Half-Orc') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Human' && char.languages.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Half-Elf' && char.languages.length !== 0 && this.context.person.skills.length === 2) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'High Elf' && char.languages.length !== 0 && char.tricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Mountain Dwarf' && char.tools.length !== 0 || species === 'Hill Dwarf' && char.tools.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Dragonborn' && char.dragons.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        if (this.props.currentStep !== 4) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div><h2>Brave {species}. Tell us more about Yourself</h2></div>\r\n            <form className='charData' noValidate autoComplete=\"off\">\r\n                <TextField onChange={(e) =>this.getValue('name', e)} id=\"standard-basic\" label=\"Your name\" value={this.context.person.name} />\r\n                <TextField onChange={(e) =>this.getValue('gender', e)} id=\"standard-basic2\" label=\"Your gender\" value={this.context.person.gender} />\r\n                <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Alignment</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.getValue('alignment', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.alignment}\r\n                >\r\n                      \r\n                    {data.species_char[species].alignment.map((align,index) => (\r\n                        <MenuItem  key={index} value={align}>{align}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {(this.props.species === 'Human' || this.props.species === 'High Elf' || this.props.species === 'Half-Elf') && <LanguagesPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'High Elf') && <TrickPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Mountain Dwarf' || this.props.species === 'Hill Dwarf') && <ToolsPick getValue= {this.getValue}  profession={this.props.profession} step={this.props.currentStep} species = {this.props.species}/>}\r\n                {(this.props.species === 'Dragonborn') && <Dragons getValue= {this.getValue} species = {this.props.species}/>}\r\n                \r\n            </FormControl>\r\n            </form>\r\n                {(this.props.species === 'Half-Elf') && <HalfelfSkills getValue= {this.getValue} species = {this.props.species}/>}        \r\n            {(species !== 'Human') && \r\n                <h3>As {species}, You have proficiences: <br/>{data.species_char[species].proficiency.toString()}</h3>\r\n            }\r\n          \r\n            \r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nSpeciesChar.contextType=DataContext;\r\nexport default SpeciesChar;","\r\n\r\nconst modificator = (values) => {\r\n    let mods = [];\r\n   values.forEach(value => {\r\n        for(let i = -5, b=1; i < 11; i ++) {\r\n            if(value <= b) {\r\n                    mods.push(i);\r\n                break;\r\n            }\r\n            b += 2;\r\n        }\r\n    });\r\n    return mods;\r\n}\r\n\r\nexport default {\r\n    modificator,\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass Equip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.context);\r\n        const profession = this.props.profession;\r\n       \r\n        console.log(this.state);\r\n        const standard = (\r\n            <>\r\n                <h3>Your equipment.</h3>\r\n                {data.class_char[profession].equip.map((item, index) => {\r\n                    if(typeof item === \"string\") {\r\n                        return (\r\n                            <p>You have {item} in your equipment. Pick the rest.</p>\r\n                        )\r\n                    } else {\r\n                        let eq;\r\n                        if(profession === 'Fighter') {\r\n                            eq = `equip${index+1}`;\r\n                        } else {eq = `equip${index}`;}\r\n                        \r\n                        return (\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Pick one from these:</FormLabel>\r\n                                    <RadioGroup aria-label=\"equipment\" name={eq} onChange={(e)=> this.props.getValue(eq, e.target.value)}>\r\n                                        {item.map((el,i) => (\r\n                                            <FormControlLabel key={i}  value={el} control={<Radio />} label={el}/>     \r\n                                        ))}\r\n                                    </RadioGroup>   \r\n                                </FormControl>  \r\n                        )\r\n                            \r\n                            \r\n                    }\r\n                })}\r\n            </>\r\n        );\r\n        return standard;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nEquip.contextType=DataContext;\r\nexport default Equip;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass Instruments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        const step = this.props.step;\r\n        let instr;\r\n        let pick;\r\n        if (step === 6) {\r\n            pick = data.past[this.props.past].instruments;\r\n            instr =  this.context.person.past_instruments;\r\n        } else {  \r\n            pick = data.class_char[prof].instruments;\r\n            instr =  this.context.person.instruments;\r\n        }\r\n        return (\r\n            <div className=\"instruments pick\">\r\n               {(prof === \"Bard\" && step !== 6) && <h4>You are musician! Pick your three best instruments</h4>}\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">{(prof === 'Bard' && step !== 6) ? 'Pick three instruments' : 'Pick one instrument'}</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('instruments', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    >\r\n                        \r\n                        {pick.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n                {(instr.length !== 0) && <h4>You've picked {instr.toString()}</h4>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nInstruments.contextType=DataContext;\r\nexport default Instruments;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\nclass ClassTricks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        let key;\r\n        let numb;\r\n        if(this.context.person.domain === 'Nature' && prof === 'Druid') {\r\n            key = 'deityTricks';\r\n            numb = 1;\r\n        } else { \r\n            key = 'classTricks'\r\n            numb = data.class_char[prof].tricks_pick;\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"tricks pick\">\r\n                {(this.context.person.domain === 'Nature' && prof === 'Druid') ? \r\n                <h4>As Nature Cleric You can pick 1 Druid trick</h4> \r\n                : <h4>As {prof} You can pick {data.class_char[prof].tricks_pick} tricks</h4>\r\n                }\r\n                 \r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {numb} magic trick(s)</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue(key, e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    >  \r\n                        {data.class_char[prof].classTricks.map((trick,index) => (\r\n                            <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {(this.context.person.classTricks.length !== 0 && this.props.mainpick) && <h4>You've picked {this.context.person.classTricks.toString()}</h4>}\r\n            </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nClassTricks.contextType=DataContext;\r\nexport default ClassTricks;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpellsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        return (\r\n            \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As {prof} You can pick {data.class_char[prof].spells_pick} spells</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof].spells_pick} spells</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.props.getValue('spells', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {(prof === 'Warlock') ? \r\n                    this.props.spells.map((spell,index) => (\r\n                        <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                    ))\r\n                  : data.class_char[prof].spells.map((spell,index) => (\r\n                    <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                ))\r\n\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.spells.length !== 0) && <h4>You've picked {this.context.person.spells.toString()}</h4>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nSpellsPick.contextType=DataContext;\r\nexport default SpellsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass ProficiencyPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        const domain = this.context.person.domain;\r\n        return (\r\n            \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As {domain} Cleric You can pick {data.class_char[prof][domain].pick} additional skill(s)</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof][domain].pick} skill(s)</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.props.getValue('deityProf', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {data.class_char[prof][domain].prof.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))\r\n\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.deityProf.length !== 0) && <h4>You've picked {this.context.person.deityProf.toString()}</h4>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nProficiencyPick.contextType=DataContext;\r\nexport default ProficiencyPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass AddLang extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const step = this.props.step;\r\n        const prof = this.props.profession;\r\n        let lang;\r\n        let pick;\r\n\r\n\r\n        if (step === 6) {\r\n            pick = data.past[this.props.past];\r\n            lang =  this.context.person.past_lang;\r\n            console.log(pick);\r\n        } else {  \r\n            pick = data.class_char[prof]\r\n            lang =  this.context.person.addLang;\r\n        }\r\n        \r\n        return (\r\n            \r\n            <>\r\n            <h4>You can pick {pick.lang_pick} language(s)</h4>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('addLang', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >   \r\n                      {pick.languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            {(lang.length !== 0) && <h4>You've picked {lang.toString()}</h4>}\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n}\r\n\r\nAddLang.contextType=DataContext;\r\nexport default AddLang;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\nimport ClassTricks from './ClassTricks';\r\nimport ProficiencyPick from './ProficiencyPick';\r\nimport AddLang from './AddLang';\r\n\r\nclass Domain extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.domainEffects = this.domainEffects.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n    }\r\n\r\n\r\n    domainEffects(domain) {\r\n        if(domain === 'Tempest') {\r\n            this.context.addValue('armour','martial weapons','heavy armour','classSpells','Fog Cloud','Thunderwave');\r\n        } else if (domain === 'Nature') {\r\n            this.context.addValue('classSpells','Animal Friendship','Speak with animals','armour','heavy armour');\r\n        } else if (domain === 'Trickery') {\r\n            this.context.addValue('classSpells','Charm Person','Disguise Self');\r\n        } else if (domain === 'Light') {\r\n            this.context.addValue('classSpells','Burning Hands','Faerie Fire','classTricks','Light');\r\n        } else if (domain === 'Knowledge') {\r\n            this.context.addValue('classSpells','Identify','Command','classTricks','Light');\r\n        } else if (domain === 'War') {\r\n            this.context.addValue('classSpells','Divine Favor','Shield of Faith','armour','martial weapons','heavy armour');\r\n        } else if (domain === 'Life') {\r\n            this.context.addValue('classSpells','Cure Wounds','\tBless','armour','heavy armour');\r\n        }\r\n        this.props.getValue('domain', domain);\r\n    }\r\n\r\n\r\n    getValue(key, event) {\r\n        this.props.getValue(key, event)\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        const nature = (\r\n            <>\r\n            <ClassTricks profession={'Druid'} mainpick={false} getValue={this.getValue}/>\r\n            <ProficiencyPick profession={'Cleric'} getValue={this.getValue}/>\r\n            </>\r\n        )\r\n\r\n        const knowledge = (\r\n            <>\r\n            <ProficiencyPick profession={'Cleric'} getValue={this.getValue}/>\r\n            <AddLang profession={prof} getValue={this.getValue} step = {this.props.step}/>\r\n            </>\r\n        )\r\n\r\n        return ( \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As Cleric You have to choose one domain related to your deity</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one domain</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.domainEffects(e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {data.class_char['Cleric'].domains.map((domain,index) => (\r\n                    <MenuItem  key={index} value={domain}>{domain}</MenuItem>\r\n                ))\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.domain === 'Nature') && nature}\r\n            {(this.context.person.domain === 'Knowledge') && knowledge}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDomain.contextType=DataContext;\r\nexport default Domain;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nclass Ranger extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"enemy pick\">\r\n               <h4>Ranger! Pick your best enemy</h4>\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one enemy</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('enemy', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >  \r\n                        {data.class_char[profession].enemy.map((enemy,index) => (\r\n                        <MenuItem  key={index} value={enemy}>{enemy}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n\r\n                <h4>Pick your favorite type of terrain for rangering</h4>\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one type of land</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('terrain', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >  \r\n                        {data.class_char[profession].terrain.map((terrain,index) => (\r\n                        <MenuItem  key={index} value={terrain}>{terrain}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Ranger;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nclass Fighter extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"enemy pick\">\r\n               <h4>Fighter! Pick your fighting style!</h4>\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one fighting style</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('fight_style', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >  \r\n                        {data.class_char[profession].fight_styles.map((style,index) => (\r\n                        <MenuItem  key={index} value={style}>{style}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n              \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Fighter;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport modificatorService from './services/modificator';\r\nimport {ClassSkills} from './Skills';\r\nimport Equip from './Equip';\r\nimport Instruments from './Instruments';\r\nimport ClassTricks from './ClassTricks';\r\nimport SpellsPick from './SpellsPick';\r\nimport Button from '@material-ui/core/Button';\r\nimport Domain from './Domain';\r\nimport Ranger from './Ranger';\r\nimport ToolsPick from './ToolsPick';\r\nimport Fighter from './Fighter';\r\n\r\nclass ClassChar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classSkills: [],\r\n            instruments: [],\r\n            classTricks: [],\r\n            spells: [],\r\n            warlock: false,\r\n            warlock_spells: [],\r\n            domain: '',\r\n            deityTricks:[],\r\n            deityProf:[],\r\n            addLang: [],\r\n            equip1: [],\r\n            equip2: [],\r\n            equip3: [],\r\n            equip4: [],\r\n            enemy: '',\r\n            terrain: '',\r\n            patron: '',\r\n            monk_instr: false,\r\n            monk_tools: false,\r\n            tools: [],\r\n            fight_style: '',\r\n        }\r\n\r\n        this.getValue = this.getValue.bind(this);\r\n        this.handleData = this.handleData.bind(this);\r\n        this.setPatron = this.setPatron.bind(this);\r\n        this.setChoice = this.setChoice.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let atr = this.state;\r\n        const profession = this.props.profession;\r\n        const deity = this.context.person.domain;\r\n        if(prevProps.currentStep !== this.props.currentStep) {\r\n        const mods = modificatorService.modificator(this.props.finals);\r\n        this.context.updatePerson('mods', mods);\r\n        }\r\n        if(prevProps.profession !== profession) {\r\n           if(prevProps.profession === 'Druid') this.context.cleanValue('languages');\r\n           if(profession === 'Druid') this.context.updatePerson('languages', 'Druidic');\r\n        }\r\n        if(prevState.classSkills !== atr.classSkills) {\r\n            this.context.updatePerson('classSkills', atr.classSkills, data.class_char[profession].skills_pick - 1);\r\n        }\r\n        if(prevState.equip1 !== atr.equip1) {\r\n            this.context.updatePerson('equip1', atr.equip1);\r\n        }\r\n        if(prevState.equip2 !== atr.equip2) {\r\n            this.context.updatePerson('equip2', atr.equip2);\r\n        }\r\n        if(prevState.equip3 !== atr.equip3) {\r\n            this.context.updatePerson('equip3', atr.equip3);\r\n        }\r\n        if(prevState.equip4 !== atr.equip4) {\r\n            this.context.updatePerson('equip4', atr.equip4);\r\n        }\r\n        if(prevState.instruments !== atr.instruments) {\r\n            this.context.updatePerson('instruments', atr.instruments, (profession === 'Bard') ? 2 : 0); \r\n        }\r\n        if(prevState.classTricks !== atr.classTricks) {\r\n            \r\n            this.context.updatePerson('classTricks', atr.classTricks, (deity === 'Light') ? 3 : data.class_char[profession].tricks_pick - 1); \r\n        }\r\n        if(prevState.spells !== atr.spells) {\r\n            this.context.updatePerson('spells', atr.spells, data.class_char[profession].spells_pick - 1); \r\n        }\r\n        if(prevState.domain !== atr.domain) {\r\n            this.context.updatePerson('domain', atr.domain); \r\n        }\r\n        if(prevState.deityTricks !== atr.deityTricks) {\r\n            this.context.updatePerson('deityTricks', atr.deityTricks); \r\n        }\r\n        if(prevState.deityProf !== atr.deityProf) {\r\n            this.context.updatePerson('deityProf', atr.deityProf, data.class_char[profession][deity].pick - 1); \r\n        }\r\n        if(prevState.addLang !== atr.addLang) {\r\n            this.context.updatePerson('addLang', atr.addLang, data.class_char[profession].lang_pick - 1); \r\n        }\r\n        if(prevState.enemy !== atr.enemy) {\r\n            this.context.updatePerson('enemy', atr.enemy); \r\n        }\r\n        if(prevState.terrain !== atr.terrain) {\r\n            this.context.updatePerson('terrain', atr.terrain); \r\n        }\r\n        if(prevState.patron !== atr.patron) {\r\n            this.context.updatePerson('patron', atr.patron); \r\n        }\r\n        if(prevState.tools !== atr.tools) {\r\n            this.context.updatePerson('tools', atr.tools); \r\n        }\r\n        if(prevState.fight_style !== atr.fight_style) {\r\n            this.context.updatePerson('fight_style', atr.fight_style); \r\n        }\r\n\r\n    }\r\n\r\n    getValue(key, event) {\r\n        if(key === 'tools') {\r\n            this.setState({[key]: event.target.value}, this.handleData);\r\n        } else {\r\n            this.setState({[key]: event}, this.handleData);\r\n        }\r\n        \r\n    }\r\n\r\n    handleData() {\r\n        let atr = this.state;\r\n        const prof = this.props.profession;\r\n        if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n            if(prof === 'Barbarian') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(prof === 'Bard' && atr.equip3.length !== 0 && atr.instruments.length !== 0 && atr.spells.length !== 0 && atr.classTricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Warlock' || prof === 'Wizard' || prof === 'Sorcerer') && atr.equip3.length !== 0 && atr.spells.length !== 0 && atr.classTricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Druid') && atr.classTricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Cleric') && atr.equip3.length !== 0 && atr.equip4.length !== 0 && atr.classTricks.length !== 0 && atr.domain.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Rogue' || prof === 'Paladin') && atr.equip3.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Ranger') && atr.equip3.length !== 0 && atr.enemy.length !== 0 && atr.terrain.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Monk') && (atr.tools.length !== 0 || atr.instruments.length !== 0 )) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Fighter') && atr.equip3.length !== 0 && atr.equip4.length !== 0 && atr.fight_style.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    setPatron(patron) {\r\n        let spells = [...data.class_char['Warlock'].spells];\r\n        if(patron === 'arcyfey') {\r\n            spells.push('Faerie Fire', 'Sleep')\r\n        } else if(patron === 'fiend') {\r\n            spells.push('Burning hands', 'Command')\r\n        } else {\r\n            spells.push('Bane', 'False life')\r\n        }\r\n        \r\n        this.setState({warlock_spells: spells, warlock: true, patron}, this.handleData)\r\n    }\r\n\r\n    setChoice(choice) {\r\n        if(choice === 'tools') {\r\n            this.context.cleanValue('instruments');\r\n            this.setState({monk_instr: false, monk_tools: true})\r\n        } else {\r\n            this.context.cleanValue('tools');\r\n            this.setState({monk_instr: true, monk_tools: false})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n    \r\n        const profession = this.props.profession;\r\n  \r\n        if (this.props.currentStep !== 5) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"classAtr\"><h2>Brave {this.context.person.name}!</h2>\r\n            <h3>As {profession}:</h3>\r\n            <p><strong>Your class proficiencies are:</strong> {data.class_char[profession].proficiency.toString()}</p>\r\n            <p><strong>You have fighting proficiency in:</strong></p>\r\n                <ul>\r\n                    {(data.class_char[profession].armor.length > 0) && <li><strong>Armour:</strong> {data.class_char[profession].armor.toString()}</li>}\r\n                    <li><strong>Weapon:</strong> {data.class_char[profession].weapons.toString()}</li>\r\n                    {(profession !== 'Bard' && profession !== 'Monk') && data.class_char[profession].tools.length !== 0 ?\r\n                    <p><strong>You have tools proficiency in:</strong> {data.class_char[profession].tools.toString()}</p>\r\n                    : <></>}\r\n                    \r\n                </ul>\r\n          \r\n            <p>Your HitDice is: {data.class_char[profession].hit_dice}</p>\r\n            <p>Your current Hit Points are: {data.class_char[profession].hit_points + this.context.person.mods[2]}</p>\r\n            <ClassSkills profession={this.props.profession} getValue={this.getValue}/>\r\n            <Equip profession={this.props.profession} getValue={this.getValue}/>\r\n            {(profession === 'Bard') && <Instruments profession={profession} getValue={this.getValue} step={this.props.currentStep}/>}\r\n            {(profession === 'Bard' || profession === 'Warlock' || profession === 'Druid' || profession === 'Cleric' || profession === 'Wizard' || profession === 'Sorcerer') && <ClassTricks profession={profession} mainpick={true} getValue={this.getValue}/>}\r\n            {(profession === 'Bard' || profession === 'Wizard' || profession === 'Sorcerer') && <SpellsPick profession={profession} getValue={this.getValue}/>}\r\n\r\n            {(profession === 'Warlock') &&\r\n                <div className=\"patrons\">\r\n                    <h4>Pick Your Otherworldly Patron</h4>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('arcyfey')}>Arcyfey</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('fiend')}>The Fiend</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('undead')}>The Undead</Button>\r\n                </div>\r\n            }\r\n            {(profession === 'Warlock' && this.state.warlock) && <SpellsPick profession={profession} getValue={this.getValue} spells={this.state.warlock_spells}/>}\r\n            {(profession === 'Cleric') && <Domain profession={profession} getValue={this.getValue} step={this.props.currentStep}/>}\r\n            {(profession === 'Ranger') && <div><Ranger profession={profession} getValue={this.getValue}/></div>}\r\n            {(profession === 'Monk') &&\r\n                <div className=\"patrons\">\r\n                    <h4>Pick one tool or one intrument</h4>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setChoice('tools')}>Pick tool</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setChoice('instrument')}>Pick instrument</Button>\r\n                </div>\r\n            }\r\n             {(this.state.monk_tools) && <ToolsPick profession = {profession} getValue={this.getValue} step={this.props.currentStep}/>}\r\n             {(this.state.monk_instr) && <Instruments profession = {profession} getValue={this.getValue} step={this.props.currentStep}/>}   \r\n             {(profession === 'Fighter') && <div><Fighter profession={profession} getValue={this.getValue}/></div>}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nClassChar.contextType=DataContext;\r\nexport default ClassChar;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport AddLang from './AddLang';\r\nimport Instruments from './Instruments';\r\nimport ToolsPick from './ToolsPick.js';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Past extends React.Component {\r\n    BACKGROUND = ['Acolyte', 'Entertainer','Folk Hero','Sailor','Sage','Outlander','Criminal / Spy','Hermit','Guild Artisan','Charlatan','Noble','Urchin','Soldier'];\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            past: '',\r\n            traits: '',\r\n            ideals: '',\r\n            bonds: '',\r\n            flaws: '',\r\n            addLang: [],\r\n            instruments: [],\r\n            tools: [],\r\n            go: false,\r\n        }\r\n\r\n        this.getValue = this.getValue.bind(this);\r\n        this.createSheet = this.createSheet.bind(this);\r\n        \r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let past = this.state;\r\n        if(prevState.past !== past.past) {\r\n            this.context.updatePerson('past', past.past);\r\n        }\r\n        if(prevState.traits !== past.traits) {\r\n            this.context.updatePerson('traits', past.traits);\r\n        }\r\n        if(prevState.ideals !== past.ideals) {\r\n            this.context.updatePerson('ideals', past.ideals);\r\n        }\r\n        if(prevState.bonds !== past.bonds) {\r\n            this.context.updatePerson('bonds', past.bonds);\r\n        }\r\n        if(prevState.flaws !== past.flaws) {\r\n            this.context.updatePerson('flaws', past.flaws);\r\n        }\r\n        if(prevState.addLang !== past.addLang) {\r\n            this.context.updatePerson('past_lang', past.addLang, data.past[past.past].lang_pick -1 );\r\n        }\r\n        if(prevState.instruments !== past.instruments) {\r\n            this.context.updatePerson('past_instruments', past.instruments);\r\n        }\r\n        if(prevState.tools !== past.tools) {\r\n            this.context.updatePerson('past_tools', past.tools);\r\n        }\r\n    }\r\n    \r\n    getValue(key, event) {\r\n        if(key === 'tools') {\r\n            this.setState({[key]: event.target.value});\r\n        } else {\r\n            this.setState({[key]: event});\r\n        }\r\n        \r\n    }\r\n\r\n    createSheet() {\r\n        this.props.lastStep();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n    \r\n        const past = this.state.past;\r\n        if (this.props.currentStep !== 6) { \r\n            return (<></>)\r\n        }\r\n        \r\n\r\n\r\n        return (\r\n            <>\r\n                <h2>Tell us about Your personality and your past.</h2>\r\n                <FormControl>\r\n                <TextField\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"Your Personality Traits\"\r\n                    multiline\r\n                    rows={5}\r\n                    onChange={(e) => this.getValue('traits', e.target.value)}\r\n                />\r\n                <TextField\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"Your Ideals\"\r\n                    multiline\r\n                    rows={5}\r\n                    onChange={(e) => this.getValue('ideals', e.target.value)}\r\n                />\r\n                <TextField\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"Your life bonds\"\r\n                    multiline\r\n                    rows={5}\r\n                    onChange={(e) => this.getValue('bonds', e.target.value)}\r\n                />\r\n                <TextField\r\n                    id=\"standard-multiline-static\"\r\n                    label=\"Your Flaws\"\r\n                    multiline\r\n                    rows={5}\r\n                    onChange={(e) => this.getValue('flaws', e.target.value)}\r\n                />\r\n\r\n                </FormControl>\r\n\r\n                <h3>Pick Your background</h3>\r\n                <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your background </InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.getValue('past', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    >\r\n                        \r\n                        {this.BACKGROUND.map((past,index) => (\r\n                            <MenuItem  key={index} value={past}>{past}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {(past === 'Acolyte' || past === 'Sage' || past === 'Outlander' || past === 'Hermit' || past === 'Guild Artisan' || past === 'Noble') && <div><AddLang past = {this.state.past} getValue={this.getValue} step={this.props.currentStep} profession={this.props.profession}/></div>}            \r\n                {(past === 'Entertainer' || past === 'Outlander') && <div><Instruments past = {this.state.past} getValue={this.getValue} step={this.props.currentStep} profession={this.props.profession}/></div>}   \r\n                {(past === 'Folk Hero' || past === 'Guild Artisan') && <div><ToolsPick past = {this.state.past} getValue={this.getValue} step={this.props.currentStep} profession={this.props.profession}/></div>}             \r\n                {(this.state.past !== '' && this.state.traits !== '' &&  this.state.ideals !== '' && this.state.bonds !== '' && this.state.flaws !== '') &&\r\n                <Button \r\n                    className=\"createSheet\"\r\n                    onClick={this.createSheet}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                >\r\n                    Create Your Character Sheet!\r\n                </Button>  }         \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nPast.contextType=DataContext;\r\nexport default Past;","\r\n\r\n\r\n\r\nconst skillsMods = (allSkills, mods) => {\r\n    const noDuplicates = [...new Set(allSkills)];\r\n    console.log(noDuplicates);\r\n    let skillsMod = [];\r\n    const skills = [\r\n        ['Acrobatics', mods[1]],\r\n        ['Animal Handling',mods[4]],\r\n        ['Arcana',mods[3]],\r\n        ['Athletics',mods[0]],\r\n        ['Deception',mods[5]],\r\n        ['History',mods[3]],\r\n        ['Insight',mods[4]],\r\n        ['Intimidation',mods[5]],\r\n        ['Investigation',mods[3]],\r\n        ['Medicine',mods[4]],\r\n        ['Nature',mods[3]],\r\n        ['Perception',mods[4]],\r\n        ['Performance',mods[5]],\r\n        ['Persuasion',mods[5]],\r\n        ['Religion',mods[3]],\r\n        ['Sleight of Hand',mods[1]],\r\n        ['Stealth',mods[1]],\r\n        ['Survival',mods[4]],\r\n    ];\r\n    skills.map((skill) => {\r\n        let notPushed = true;\r\n        noDuplicates.forEach((charSkill)=> {\r\n            if(charSkill === skill[0]) {\r\n                skillsMod.push([2+skill[1],1]);\r\n                notPushed = false;\r\n            } \r\n        });\r\n        if (notPushed) skillsMod.push([skill[1],0]);\r\n\r\n    });\r\n    return skillsMod;   \r\n\r\n}\r\n\r\nexport default {skillsMods}","import React from 'react';\r\nimport info from './data/data.js';\r\nimport DataContext from './contexts/DataContext';\r\nimport { Document, Page, Text, View, StyleSheet } from '@react-pdf/renderer';\r\nimport skillsService from './services/skillsMods';\r\n\r\nclass Sheet extends React.Component {\r\n    SKILLSARR = [\r\n        'Acrobatics (Dex)',\r\n        'Animal Handling (Wis)',\r\n        'Arcana (Int)',\r\n        'Athletics (Str)',\r\n        'Deception (Cha)',\r\n        'History (Int)',\r\n        'Insight (Wis)',\r\n        'Intimidation (Cha)',\r\n        'Investigation (Int)',\r\n        'Medicine (Wis)',\r\n        'Nature (Int)',\r\n        'Perception (Wis)',\r\n        'Performance (Cha)',\r\n        'Persuasion (Cha)',\r\n        'Religion (Int)',\r\n        'Sleight of Hand (Dex)',\r\n        'Stealth (Dex)',\r\n        'Survival (Wis)'\r\n    ];\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n       \r\n\r\n        this.state = {\r\n            skillsMod: [],\r\n            perception: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const mods = this.context.person.mods;\r\n        const species = this.props.species;\r\n        const prof = this.props.profession;\r\n        const background = this.context.person.past;\r\n        const pastSkills = info.past[background].proficiency;\r\n        const allSkills = this.context.person.classSkills.concat(this.context.person.skills, pastSkills ,this.context.person.deityProf, info.species_char[species].skillsStatic);\r\n        const skills = skillsService.skillsMods(allSkills, mods);\r\n        this.setState({skillsMod: skills});\r\n        allSkills.forEach((skill)=>{\r\n            if(skill === 'Perception') this.setState({perception: true});\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n   \r\n\r\n    render() {\r\n        if (this.props.currentStep !== 7) { \r\n            return (<></>)\r\n        }  \r\n        console.log(this.context);\r\n        const species = this.props.species;\r\n        const prof = this.props.profession;\r\n        const background = this.context.person.past;\r\n        const saving1 = info.class_char[prof].saving_throws[0];\r\n        const saving2 = info.class_char[prof].saving_throws[1];\r\n        const mods = this.context.person.mods;\r\n        let allLang =  info.species_char[species].basic_languages.concat(this.context.person.languages, this.context.person.addLang, this.context.person.past_lang);\r\n        allLang = allLang.toString();\r\n        allLang = allLang.replace(/,/g, \", \");\r\n        let weapons = info.class_char[prof].weapons.toString();\r\n        weapons = weapons.replace(/,/g, \", \");\r\n        let armor = info.class_char[prof].armor.toString();\r\n        armor = armor.replace(/,/g, \", \");\r\n        let allInstr = this.context.person.instruments.concat(this.context.person.past_instruments).toString();\r\n        allInstr = allInstr.replace(/,/g, \", \");\r\n        let allTools = this.context.person.tools.concat(this.context.person.past_tools, info.past[background].tool_prof).toString();\r\n        allTools = allTools.replace(/,/g, \", \");\r\n        let allEquip = info.past[background].equip.concat(this.context.person.equip1, this.context.person.equip2, this.context.person.equip3, this.context.person.equip4);\r\n        const allProf = info.species_char[species].proficiency.concat(info.class_char[prof].proficiency);\r\n        if(prof !== 'Fighter') allEquip.push(info.class_char[prof].equip[0]);\r\n        let allTricks = this.context.person.tricks.concat(this.context.person.classTricks, this.context.person.deityTricks,info.species_char[species].tricksStatic).toString();\r\n        allTricks = allTricks.replace(/,/g, \", \");\r\n        let allSpells = this.context.person.spells.concat(this.context.person.classSpells).toString();\r\n        allSpells = allSpells.replace(/,/g, \", \");\r\n        console.log(allTricks.length);\r\n        console.log(allSpells.length);\r\n        return (\r\n            <div className=\"page-container\">\r\n            <Document>\r\n            <Page \r\n            size=\"A4\" \r\n            id=\"sheet\" wrap>\r\n                    <View className=\"background-img\">\r\n                        <View className=\"leftColumn\">\r\n                            <Text>{this.context.person.name}</Text>\r\n                        </View>\r\n                        <View className=\"rightColumn\">\r\n                            <View className=\"innerCol\">\r\n                                <Text className=\"headerText\">{this.props.profession}</Text>\r\n                                <Text className=\"headerText\">{this.context.person.past}</Text>\r\n                                <Text className=\"headerText\"></Text>\r\n                            </View>\r\n                            <View className=\"innerCol\">\r\n                                <Text className=\"headerText\">{this.props.species}</Text>\r\n                                <Text className=\"headerText\">{this.context.person.alignment}</Text>\r\n                                <Text className=\"headerText\"></Text>\r\n                            </View>\r\n                        </View>\r\n                    </View>\r\n                    <View id=\"main\">\r\n                        <View className=\"col1\">\r\n                            <View className=\"mods\">\r\n                                <View className=\"featuresCol\" style={{flexGrow:1}}>\r\n                                    <View className=\"featureBox\">\r\n                                        <Text>Strength</Text>\r\n                                        <Text>{(this.context.person.mods[0] > 0) ? `+${this.context.person.mods[0]}` : this.context.person.mods[0]}</Text>\r\n                                        <Text>{this.context.finalValues[0]}</Text>\r\n                                    </View>\r\n                                    <View className=\"featureBox\">\r\n                                        <Text>Dexterity</Text>\r\n                                        <Text>{(this.context.person.mods[1] > 0) ? `+${this.context.person.mods[1]}` : this.context.person.mods[1]}</Text>\r\n                                        <Text>{this.context.finalValues[1]}</Text>\r\n                                    </View>\r\n                                    <View className=\"featureBox\">\r\n                                        <Text>Constitution</Text>\r\n                                        <Text>{(this.context.person.mods[2] > 0) ? `+${this.context.person.mods[2]}` : this.context.person.mods[2] }</Text>\r\n                                        <Text>{this.context.finalValues[2]}</Text>\r\n                                    </View>\r\n                                    <View className=\"featureBox\">\r\n                                        <Text>Intelligence</Text>\r\n                                        <Text>{(this.context.person.mods[3] > 0) ? `+${this.context.person.mods[3]}` : this.context.person.mods[3]}</Text>\r\n                                        <Text>{this.context.finalValues[3]}</Text>\r\n                                    </View>\r\n                                    <View className=\"featureBox\">\r\n                                        <Text>Wisdom</Text>\r\n                                        <Text>{(this.context.person.mods[4] > 0) ? `+${this.context.person.mods[4]}` : this.context.person.mods[4]}</Text>\r\n                                        <Text>{this.context.finalValues[4]}</Text>\r\n                                    </View>\r\n                                    <View className=\"featureBox\">\r\n                                        <Text>Charisma</Text>\r\n                                        <Text>{(this.context.person.mods[5] > 0) ? `+${this.context.person.mods[5]}` : this.context.person.mods[5]}</Text>\r\n                                        <Text>{this.context.finalValues[5]}</Text>\r\n                                    </View>\r\n                                </View>\r\n                                <View className=\"skillsCol\" style={{flexGrow:3}}>\r\n                                    <View>\r\n                                        <Text></Text>\r\n                                        <Text>Inspiration</Text>\r\n                                    </View>\r\n                                    <View>\r\n                                        <Text>+2</Text>\r\n                                        <Text>Proficiency Bonus</Text>\r\n                                    </View>\r\n                                    <View className=\"saving\">\r\n                                        <View className={(saving1 === 'Strength' || saving2 === 'Strength') && \"profi\"}>\r\n                                            <Text>\r\n                                                {(saving1 === 'Strength' || saving2 === 'Strength') ? (2 + this.context.person.mods[0] > 0 ? `+${2 + this.context.person.mods[0]}` : 2 + this.context.person.mods[0]) : (this.context.person.mods[0] > 0 ? `+${this.context.person.mods[0]}` : this.context.person.mods[0]) }\r\n                                            </Text>\r\n                                            <Text>Strength</Text>\r\n                                        </View>\r\n                                        <View className={(saving1 === 'Dexterity' || saving2 === 'Dexterity') && \"profi\"}>\r\n                                            <Text>{(saving1 === 'Dexterity' || saving2 === 'Dexterity') ? (2 + this.context.person.mods[1] > 0 ? `+${2 + this.context.person.mods[1]}` : 2 + this.context.person.mods[1]) : (this.context.person.mods[1] > 0 ? `+${this.context.person.mods[1]}` : this.context.person.mods[1]) }</Text>\r\n                                            <Text>Dexterity</Text>\r\n                                        </View>\r\n                                        <View className={(saving1 === 'Constitution' || saving2 === 'Constitution') && \"profi\"}>\r\n                                            <Text>{(saving1 === 'Constitution' || saving2 === 'Constitution') ? (2 + this.context.person.mods[2] > 0 ? `+${2 + this.context.person.mods[2]}` : 2 + this.context.person.mods[2]) : (this.context.person.mods[2] > 0 ? `+${this.context.person.mods[2]}` : this.context.person.mods[2]) }</Text>\r\n                                            <Text>Constitution</Text>\r\n                                        </View>\r\n                                        <View className={(saving1 === 'Intelligence' || saving2 === 'Intelligence') && \"profi\"}>\r\n                                            <Text>{(saving1 === 'Intelligence' || saving2 === 'Intelligence') ? (2 + this.context.person.mods[3] > 0 ? `+${2 + this.context.person.mods[3]}` : 2 + this.context.person.mods[3]) : (this.context.person.mods[3] > 0 ? `+${this.context.person.mods[3]}` : this.context.person.mods[3]) }</Text>\r\n                                            <Text>Intelligence</Text>\r\n                                        </View>\r\n                                        <View className={(saving1 === 'Wisdom' || saving2 === 'Wisdom') && \"profi\"}>\r\n                                            <Text>{(saving1 === 'Wisdom' || saving2 === 'Wisdom') ? (2 + this.context.person.mods[4] > 0 ? `+${2 + this.context.person.mods[4]}` : 2 + this.context.person.mods[4]) : (this.context.person.mods[4] > 0 ? `+${this.context.person.mods[4]}` : this.context.person.mods[4]) }</Text>\r\n                                            <Text>Wisdom</Text>\r\n                                        </View>\r\n                                        <View className={(saving1 === 'Charisma' || saving2 === 'Charisma') && \"profi\"}>\r\n                                            <Text>{(saving1 === 'Charisma' || saving2 === 'Charisma') ? (2 + this.context.person.mods[5] > 0 ? `+${2 + this.context.person.mods[5]}` : 2 + this.context.person.mods[5]) : (this.context.person.mods[5] > 0 ? `+${this.context.person.mods[5]}` : this.context.person.mods[5]) }</Text>\r\n                                            <Text>Charisma</Text>\r\n                                        </View>\r\n                                        <View>\r\n                                            <Text>Saving Throws</Text>\r\n                                        </View>\r\n                                    </View>\r\n                                    <View className=\"saving\">\r\n                                        {(this.state.skillsMod.length > 0) &&\r\n                                        this.SKILLSARR.map((skill, i) => (\r\n                                            <View className={(this.state.skillsMod[i][1]) && \"profi\"}>\r\n                                                <Text>{(this.state.skillsMod[i][0] > 0) ? `+${this.state.skillsMod[i][0]}` : this.state.skillsMod[i][0]}</Text> \r\n                                                <Text>{skill}</Text>\r\n                                            </View>\r\n\r\n                                        ))}\r\n                                        <View>\r\n                                            <Text>Skills</Text>\r\n                                        </View>\r\n                                    </View>\r\n                                    \r\n                                </View>\r\n                            </View>\r\n                            <View className=\"wisdom\">\r\n                                <Text>{(this.state.perception) ? (12 + mods[4]) : 10 + mods[4]}</Text>\r\n                                <Text>Passive Wisdom (Perception)</Text>\r\n                            </View>\r\n                            <View className=\"block\">\r\n                                    <Text>{`Languages - ${allLang}`}</Text>   \r\n                                    <Text>{`Weapons - ${weapons}`}</Text> \r\n                                    <Text>{(armor.length !== 0) && `Armor - ${armor}`}</Text> \r\n                                    <Text>{(allInstr.length !== 0) && `Instruments - ${allInstr}`}</Text> \r\n                                    <Text>{(allTools.length !== 0) && `Tools - ${allTools}`}</Text> \r\n                                    <Text>Other Proficiencies & Languages</Text>            \r\n                            </View>\r\n                        </View>\r\n                        <View className=\"col2\">\r\n                            <View class=\"background-armor\">\r\n                                <View>\r\n                                    <Text></Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text>{(this.context.person.mods[1] > 0) ? `+${this.context.person.mods[1]}` : this.context.person.mods[1]}</Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text>{info.species_char[species].speed}</Text>\r\n                                </View>\r\n                            </View>\r\n                            <View class=\"two-blocks\">\r\n                                <Text>Hit Point Maximum<span>{info.class_char[prof].hit_points + mods[2]}</span></Text>\r\n                                <Text></Text>\r\n                                <Text>Current Hit Points</Text>\r\n                            </View>\r\n                            <View class=\"hitpoints\">\r\n                                <Text>Temporary Hit Points</Text>\r\n                            </View>\r\n                            <View class=\"hitdice\">\r\n                                <View class=\"dice\">\r\n                                    <Text>Total<span></span></Text>\r\n                                    <Text>{info.class_char[prof].hit_dice}</Text>\r\n                                    <Text>Hitdice</Text>\r\n                                </View>\r\n                                <View class=\"deaths\">\r\n                                    <Text>\r\n                                        <span class=\"text\">Successes</span>\r\n                                        <div class=\"radio\"></div>\r\n                                        <div class=\"radio\"></div>\r\n                                        <div class=\"radio\"></div>\r\n                                    </Text>\r\n                                    <Text>\r\n                                        <span class=\"text\">Failures</span>\r\n                                        <div class=\"radio\"></div>\r\n                                        <div class=\"radio\"></div>\r\n                                        <div class=\"radio\"></div>\r\n                                    </Text>\r\n                                    <Text>Death saves</Text>\r\n                                </View>\r\n                            </View>\r\n                            <View className=\"weapons saving\">\r\n                                <table>\r\n                                    <tr>\r\n                                        <th>Name</th>\r\n                                        <th>Atk Bonus</th>\r\n                                        <th>Damage/Type</th>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                        <td></td>\r\n                                    </tr>\r\n                                </table>\r\n                                <Text>Attacs & Spellcasting</Text>\r\n                            </View>\r\n                            <View className=\"equip\">\r\n                                <View>\r\n                                    <View>\r\n                                        <View class=\"currency\">\r\n                                            <Text>CP</Text>\r\n                                        </View>\r\n                                        <View className='octagonWrap'>\r\n                                            <Text></Text>\r\n                                            <span className='left'></span>\r\n                                            <span className='right'></span>\r\n                                        </View>        \r\n                                    </View>\r\n                                    <View>\r\n                                        <View class=\"currency\">\r\n                                            <Text>SP</Text>\r\n                                        </View>\r\n                                        <View className='octagonWrap'>\r\n                                            \r\n                                            <Text></Text>\r\n                                            <span className='left'></span>\r\n                                            <span className='right'></span>\r\n                                        </View>        \r\n                                    </View>\r\n                                    <View>\r\n                                        <View class=\"currency\">\r\n                                            <Text>EP</Text>\r\n                                        </View>\r\n                                        <View className='octagonWrap'>\r\n                                            \r\n                                            <Text></Text>\r\n                                            <span className='left'></span>\r\n                                            <span className='right'></span>\r\n                                        </View>        \r\n                                    </View>\r\n                                    <View>\r\n                                        <View class=\"currency\">\r\n                                            <Text>GP</Text>\r\n                                        </View>\r\n                                        <View className='octagonWrap'>\r\n                                            \r\n                                            <Text className=\"basic-money\">{info.past[background].money.toString()}</Text>\r\n                                            <span className='left'></span>\r\n                                            <span className='right'></span>\r\n                                        </View>        \r\n                                    </View>\r\n                                    \r\n                                    <View>\r\n                                        <View class=\"currency\">\r\n                                            <Text>PP</Text>\r\n                                        </View>\r\n                                        <View className='octagonWrap'>\r\n                                            \r\n                                            <Text></Text>\r\n                                            <span className='left'></span>\r\n                                            <span className='right'></span>\r\n                                        </View>        \r\n                                    </View>\r\n                                </View>\r\n                                <View>\r\n                                        {allEquip.map((equip, index) => (\r\n                                            <Text key={index}>--{equip}</Text>\r\n                                        ))}\r\n\r\n                                </View>\r\n                                <Text>Equipment</Text>\r\n                            </View>                        \r\n\r\n                        </View>\r\n                        <View className=\"col3\">\r\n                            <View class=\"personality\">\r\n                                <View>\r\n                                    <Text>{this.context.person.traits.toString()}</Text>\r\n                                    <Text>Personality Traits</Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text>{this.context.person.ideals}</Text>\r\n                                    <Text>Ideals</Text>\r\n                                </View>   \r\n                                <View>\r\n                                    <Text>{this.context.person.bonds}</Text>\r\n                                    <Text>Bonds</Text>\r\n                                </View>  \r\n                                <View>\r\n                                    <Text>{this.context.person.flaws}</Text>\r\n                                    <Text>Flaws</Text>\r\n                                </View>                \r\n                            </View>\r\n                            <View class=\"features\">\r\n                                {allProf.map((prof) => (\r\n                                    <Text class=\"prof\">{prof}</Text>\r\n                                ))}\r\n                                <Text>{(this.context.person.domain !== '') && `Your Divine Domain: ${this.context.person.domain}`}</Text>\r\n                                <Text>{(this.context.person.fight_style !== '') && `Your fight style: ${this.context.person.fight_style}`}</Text>\r\n                                <Text>{(this.context.person.patron !== '') && `Your patron: ${this.context.person.patron}`}</Text>\r\n                                <Text>{(this.context.person.dragons.length > 0) && `Your Draconic Ancestry: ${this.context.person.dragons.toString()}`}</Text>\r\n                                <Text>{(this.context.person.enemy.length > 0) && `Your favorite enemy: ${this.context.person.enemy}`}</Text>\r\n                                <Text>{(this.context.person.terrain.length > 0) && `Your favorite terrain: ${this.context.person.terrain}`}</Text>\r\n                                <Text>Features & Traits</Text>              \r\n                            </View>\r\n                        </View>            \r\n                    </View>\r\n                    {((allTricks.length > 0) || (allSpells.length > 0)) && \r\n                        <View className=\"magic\">\r\n                            <Text>{(allTricks.length > 0) && `Tricks`}</Text>\r\n                            <Text>{(allTricks.length > 0) && `Tricks You know: ${allTricks}`}</Text>\r\n                            <Text>{(allSpells.length > 0) && `Spells`}</Text>\r\n                            <Text>{(allSpells.length > 0) && `Spells You know: ${allSpells}`}</Text>\r\n                        </View>\r\n                    }\r\n                    \r\n\r\n                   \r\n                    \r\n                </Page>\r\n            </Document>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nSheet.contextType=DataContext;\r\nexport default Sheet;","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport SpeciesChar from './SpeciesChar';\r\nimport ClassChar from './ClassChar';\r\nimport Past from './Past';\r\nimport Sheet from './Sheet';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataContext from './contexts/DataContext';\r\nimport ReactToPrint , { PrintContextConsumer }  from 'react-to-print';\r\n\r\n\r\n\r\nclass MultiForm extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this.next = this.next.bind(this);\r\n    this.prev = this.prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n    this.lastStep = this.lastStep.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n lastStep() {\r\n   this.setState({currentStep:7})\r\n }\r\n\r\n prev() {\r\n    let currentStep = this.state.currentStep\r\n    if(currentStep === 3) this.context.update({default: this.context.defaultStatic, rolled: this.context.defaultRolled, notConfirmed: true, actualState: ['','','','','','']})\r\n \r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 6 ? 7: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n  if(this.state.currentStep === 3 && this.context.final) this.setState({button:false});\r\n }\r\n\r\n  render () {\r\n \r\n    let currentStep = this.state.currentStep;\r\n    const previousButton = (\r\n      <Button className=\"previous\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        disabled={this.context.final && currentStep === 3}\r\n        onClick={this.prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button className=\"next\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this.next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            {(currentStep !== 7) && <h1>Your Character Generator</h1>}\r\n          </header>\r\n          <main>\r\n          {}\r\n            <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Features buttonState={this.handleButton} species={this.state.species} profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n            <SpeciesChar buttonState={this.handleButton} button={this.state.button} profession={this.state.profession} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <ClassChar finals={this.context.finalValues} profession={this.state.profession} buttonState={this.handleButton} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <Past profession={this.state.profession} lastStep = {this.lastStep} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            \r\n             {(currentStep === 7) && \r\n              <Sheet ref={el => (this.componentRef = el)} currentStep={this.state.currentStep} profession={this.state.profession} species={this.state.species}/> }\r\n             {(currentStep === 7) && \r\n             <ReactToPrint content={() => this.componentRef}>\r\n              <PrintContextConsumer>\r\n                {({ handlePrint }) => (\r\n                  <Button \r\n                  className=\"print\"\r\n                  onClick={handlePrint}\r\n                  variant=\"contained\" \r\n                  color=\"secondary\"\r\n                  >Print this out!\r\n                  </Button>\r\n                )}\r\n              </PrintContextConsumer>\r\n            </ReactToPrint>\r\n            }\r\n            {/* {(currentStep === 7) && \r\n            <Test currentStep={this.state.currentStep} profession={this.state.profession} species={this.state.species} ref={el => (this.componentRef = el)} />\r\n            } */}\r\n            <div className=\"buttons\">\r\n              {(currentStep !== 1 && currentStep < 7) && previousButton}\r\n              {currentStep < 6 && nextButton } \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMultiForm.contextType=DataContext;\r\nexport default MultiForm;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport DataProvider from './contexts/DataProvider';\r\nimport MultiForm from './MultiForm';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    return (\r\n      <DataProvider>\r\n        <MultiForm/>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/Draconis.a680907c.ttf\";","export default __webpack_public_path__ + \"static/media/DraconisBold.f4d8b9c5.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './fonts/Draconis.ttf';\r\nimport './fonts/DraconisBold.ttf';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}