{"version":3,"sources":["img/dd.png","Species.js","Classes.js","services/roll.js","contexts/DataContext.js","AbilityCells.js","Bonus.js","Features.js","contexts/DataProvider.js","App.js","reportWebVitals.js","index.js"],"names":["Species","props","state","species","picked","handleData","bind","event","this","target","value","setState","buttonState","currentStep","FormControl","className","InputLabel","style","color","id","Select","onChange","labelId","placeholer","map","index","MenuItem","React","Component","Classes","classes","prof","featuresNumbers","rolls","results","i","k6","Math","floor","random","push","sort","a","b","shift","sum","reduce","total","num","DataContext","createContext","AbilityCells","default","features","changeValue","copy","data","actualState","context","defaultPicked","rolled","length","parseInt","splice","every","update","notConfirmed","abilities","ability","TableCell","e","def","feature","contextType","Bonus","bonus","speciesBonus","values","item","bon","textAlign","padding","Features","featuresUse","numbersToShow","rollMethod","useDefault","confirmMethod","serviceRoll","pickable","unshift","defaultNumbers","console","log","rollsResults","profession","toString","Fade","in","TableContainer","Table","TableHead","TableRow","TableBody","Button","onClick","disabled","variant","marginTop","rolling","DataProvider","updateState","Provider","children","App","button","name","handleUserData","_next","_prev","handleButton","checkButtons","key","childData","previousButton","borderColor","size","nextButton","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8341d1fc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            species : ['Human', 'High Elf', 'Forest Elf', 'Drow - Dark Elf', 'Mountain Dwarf', 'Hill Dwarf','Halfling - Lightfoot', 'Halfling - Stout','Tiefling','Dragonborn', 'Forest Gnome', 'Rock Gnome', 'Half-Orc','Half-Elf'],\r\n            picked: '',\r\n            \r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('species',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return null\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.state.species.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes : ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'],\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return null\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.state.classes.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;\r\n\r\n","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\nclass AbilityCells extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            default: props.default,\r\n            features: props.features,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        let data = event.target.value;\r\n        let actualState = [...this.context.actualState];\r\n        let copy;\r\n        if(this.props.defaultPicked) {\r\n            copy = [...this.context.default];\r\n        } else { \r\n            copy = [...this.context.rolled];\r\n        }\r\n        for( let i = 0; i < copy.length; i++){ \r\n            if ( copy[i] === data && data === parseInt(data, 10)) { \r\n                copy.splice(i, 1); \r\n                break;\r\n            }\r\n        }\r\n        if(actualState[index] === parseInt(actualState[index], 10)) copy.push(actualState[index])\r\n        actualState[index] = data;\r\n        if (actualState.every(value => value === parseInt(value, 10))) {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: false, actualState});\r\n            this.context.update({rolled: copy, notConfirmed: false, actualState});\r\n        } else {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: true, actualState});\r\n            this.context.update({rolled: copy, notConfirmed: true, actualState});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                                \r\n                                {\r\n                                this.props.defaultPicked ?\r\n                                this.context.default.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) :\r\n                                this.context.rolled.map((feature,index) => (\r\n                                    <MenuItem  className=\"option\" key={index} value={feature}>{feature}</MenuItem>\r\n                                )) \r\n                                }\r\n                            </Select> \r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nAbilityCells.contextType=DataContext;\r\nexport default AbilityCells; ","import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...context.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n        bonus, values\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AbilityCells from './AbilityCells';\r\nimport Bonus from './Bonus';\r\n\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            abilities: ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'],\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n            defaultPicked: false,\r\n            numbersToShow: [],\r\n        }\r\n\r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n        this.confirmMethod = this.confirmMethod.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        let pickable = [...features]\r\n        pickable.unshift(' ');\r\n        this.setState({numbersToShow: features, featuresUse: pickable, rolled: true}, this.context.update({rolled: pickable}) );\r\n    }\r\n\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        let pickable = [...defaultNumbers];\r\n        pickable.unshift(' ');\r\n        this.setState({numbersToShow: defaultNumbers, features: pickable , rolled: true, defaultPicked: true});\r\n    }\r\n\r\n    confirmMethod() {\r\n        console.log(this.context.actualState);\r\n    }\r\n\r\n    \r\n    render() {\r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        }\r\n       \r\n        const rollsResults = (\r\n            <>\r\n                <h4>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.numbersToShow.toString()}</h4>\r\n               \r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\" id=\"abilities\"> \r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            \r\n                            <TableRow key=\"numbers\" id=\"values\">\r\n                                <AbilityCells  abilities={this.state.abilities} default={this.state.features} features={this.state.featuresUse} defaultPicked={this.state.defaultPicked}/>  \r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <Bonus species ={this.props.species}/> \r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n                </Fade> \r\n                 <Button \r\n                    onClick={this.confirmMethod} \r\n                    disabled={this.context.notConfirmed}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"  \r\n                    style={{marginTop: \"26px\"}}\r\n                    >\r\n                        Confirm - One way ticket!\r\n                    </Button>                   \r\n                \r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {this.state.rolled ? rollsResults : rolling}\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\nFeatures.contextType=DataContext;\r\nexport default Features;","import React from 'react'\r\nimport DataContext from './DataContext'\r\n\r\nclass DataProvider extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.updateState = this.updateState.bind(this)\r\n\t\tthis.state = {\r\n            speciesBonus: {\r\n                'Human': [1, 1, 1, 1, 1, 1],\r\n                'High Elf': ['', 2,'',1,'',''],\r\n                'Forest Elf': ['',2, '', '', 1, ''],\r\n                'Drow - Dark Elf': ['',2,'','','',1],\r\n                'Mountain Dwarf': [2,'' ,2,'','',''],\r\n                'Hill Dwarf': ['','',2,'',1,''],\r\n                'Halfling - Lightfoot': ['',2,'','','',1],\r\n                'Halfling - Stout': ['', 2, 1, '', '','' ],\r\n                'Forest Gnome': ['',1,'',2, '',''],\r\n                'Rock Gnome': ['','',1,2,'',''],\r\n                'Tiefling': ['','','',1, '',2],\r\n                'Dragonborn': [2, '','','','',1],\r\n                'Half-Elf': ['',2,'','','',2],\r\n                'Half-Orc': [2, '',1, '','',''],\r\n            },\r\n           default : ['',15, 14, 13, 12, 10, 8],\r\n           rolled: this.props.rolled,\r\n           actualState: ['','','','','',''],\r\n\t\t   notConfirmed: true,\r\n           update: this.updateState,\r\n         \r\n\t\t}\r\n\t}\r\n\r\n\tupdateState(values) {\r\n\t\tthis.setState(values)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DataContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</DataContext.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataProvider","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataProvider from './contexts/DataProvider';\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this._next = this._next.bind(this);\r\n    this._prev = this._prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n\r\n _prev() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n _next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 2? 3: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n }\r\n\r\n  render () {\r\n    let currentStep = this.state.currentStep;\r\n    console.log(currentStep)\r\n    console.log(this.state.profession)\r\n    const previousButton = (\r\n      <Button className=\"previous\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        \r\n        onClick={this._prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button className=\"next\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this._next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <DataProvider>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1>Your Character Generator</h1>\r\n          </header>\r\n          <main>\r\n          {}\r\n            <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Features species={this.state.species} profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n            <div className=\"buttons\">\r\n              {currentStep !== 1 && previousButton}\r\n              {currentStep < 3 && nextButton } \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}