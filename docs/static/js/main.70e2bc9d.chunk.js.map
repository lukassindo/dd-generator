{"version":3,"sources":["contexts/DataContext.js","contexts/DataProvider.js","img/dd.png","Species.js","Classes.js","services/roll.js","AbilityCells.js","Bonus.js","FinalValues.js","Features.js","LanguagesPick.js","TrickPick.js","ToolsPick.js","Dragons.js","Skills.js","SpeciesChar.js","MultiForm.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","React","createContext","DataProvider","props","updateState","bind","addPersonData","state","speciesBonus","defaultStatic","default","rolled","defaultRolled","actualState","notConfirmed","finalValues","final","step_four","class_char","hit_dice","armor","weapons","saving_throws","skills_pick","skills","equip","proficiency","tools","species_char","gender","alignment","speed","basic_languages","languages","tricks","dragons","person","name","prof","update","updatePerson","values","this","setState","key","value","personData","filled","splice","goodKey","length","push","Provider","children","Component","Species","SPECIES","picked","handleData","event","target","buttonState","currentStep","FormControl","className","InputLabel","style","color","id","Select","onChange","labelId","placeholer","map","species","index","MenuItem","Classes","CLASSES","featuresNumbers","rolls","results","i","k6","Math","floor","random","sort","a","b","shift","sum","reduce","total","num","AbilityCells","features","changeValue","copy","data","context","defaultPicked","parseInt","every","abilities","ability","TableCell","e","def","feature","contextType","Bonus","item","bon","textAlign","padding","FinalValues","useContext","profession","TableContainer","Table","TableHead","TableRow","TableBody","Features","featuresUse","numbersToShow","rollMethod","useDefault","confirmMethod","serviceRoll","pickable","unshift","defaultNumbers","bonus","rollsResults","toString","Fade","in","Button","onClick","disabled","variant","marginTop","rolling","LanguagesPick","getValue","lang","TrickPick","trick","ToolsPick","tool","Dragons","dragon","Skills","skill","SpeciesChar","prevProps","prevState","console","log","char","noValidate","autoComplete","TextField","label","align","MultiForm","button","handleUserData","next","prev","handleButton","checkButtons","childData","previousButton","borderColor","size","nextButton","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.70e2bc9d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;\r\n\r\n","import React from 'react'\r\nimport DataContext from './DataContext'\r\n\r\nclass DataProvider extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.updateState = this.updateState.bind(this);\r\n        this.addPersonData = this.addPersonData.bind(this);\r\n\t\tthis.state = {\r\n            speciesBonus: {\r\n                'Human': [1, 1, 1, 1, 1, 1],\r\n                'High Elf': ['', 2,'',1,'',''],\r\n                'Forest Elf': ['',2, '', '', 1, ''],\r\n                'Drow - Dark Elf': ['',2,'','','',1],\r\n                'Mountain Dwarf': [2,'' ,2,'','',''],\r\n                'Hill Dwarf': ['','',2,'',1,''],\r\n                'Halfling - Lightfoot': ['',2,'','','',1],\r\n                'Halfling - Stout': ['', 2, 1, '', '','' ],\r\n                'Forest Gnome': ['',1,'',2, '',''],\r\n                'Rock Gnome': ['','',1,2,'',''],\r\n                'Tiefling': ['','','',1, '',2],\r\n                'Dragonborn': [2, '','','','',1],\r\n                'Half-Elf': ['',2,'','','',2],\r\n                'Half-Orc': [2, '',1, '','',''],\r\n            },\r\n           defaultStatic : ['empty',15, 14, 13, 12, 10, 8],\r\n           default : ['empty',15, 14, 13, 12, 10, 8],\r\n           rolled: [],\r\n           defaultRolled: [],\r\n           actualState: ['','','','','',''],\r\n\t\t   notConfirmed: true,\r\n           finalValues: [],\r\n           final: false,\r\n           step_four: false,\r\n           class_char: {\r\n            'Barbarian': {\r\n                hit_dice: '1k12',\r\n                armor: ['light armor'],\r\n                weapons: ['simple weapons','hand crossbows','longswords','rapiers','shortswords'],\r\n                saving_throws: ['Dexterity', 'Charisma'],\r\n                skills_pick: 2,\r\n                skills: ['empty','Animal Handling', 'Athletics', 'Intimidation', 'Nature', 'Perception', 'Survival'],\r\n                equip: ['An explorer’s pack and four javelins', ['(a) a greataxe', '(b) any martial melee weapon'], ['(a) two handaxes', '(b) any simple weapon']],\r\n                proficiency: ['Rage', 'Unarmored Defense']\r\n            },\r\n            'Bard': {\r\n                hit_dice: '1k8',\r\n                armor: ['light armor','medium armor','shields'],\r\n                weapons: ['simple weapons','martial weapons'],\r\n                saving_throws: ['Strength', 'Constitution'],\r\n                skills_pick: 3,\r\n                skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion'],\r\n                tools: 'Three musical instruments of your choice',\r\n                equip: ['Leather armor and a dagger', ['(a) a rapier', '(b) a longsword', '(c) any simple weapon'], ['(a) a diplomat’s pack', '(b) an entertainer’s pack'], ['(a) a lute', '(b) any other musical instrument']],\r\n                proficiency: ['Spellcasting','Bardic Inspiration']\r\n            },\r\n            'Warlock': {\r\n                hit_dice: '1k8',\r\n                armor: ['light armor'],\r\n                weapons: ['simple weapons'],\r\n                saving_throws: ['Wisdom', 'Charisma'],\r\n                skills_pick: 2,\r\n                skills: ['empty','Arcana', 'Deception', 'History', 'Intimidation', 'Investigation', 'Nature', 'Religion'],\r\n                equip: ['Leather armor, any simple weapon, and two daggers', ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a component pouch', '(b) an arcane focus'], ['(a) a scholar’s pack', '(b) a dungeoneer’s pack']],\r\n                proficiency: ['Otherworldly Patron','Pact Magic']\r\n            },\r\n            'Druid': {\r\n                hit_dice: '1k8',\r\n                armor: ['light armor','medium armor','shields'],\r\n                weapons: ['Clubs', 'daggers', 'darts', 'javelins', 'maces', 'quarterstaffs', 'scimitars', 'sickles', 'slings', 'spears'],\r\n                saving_throws: ['Wisdom', 'Intelligence'],\r\n                skills_pick: 2,\r\n                skills: ['empty','Arcana', 'Animal Handling', 'Insight', 'Medicine', 'Nature', 'Perception', 'Religion', 'Survival'],\r\n                tools: ['Herbalism kit'],\r\n                equip: ['Leather armor, an explorer’s pack, and a druidic focus', ['(a) a wooden shield', '(b) any simple weapon'], ['(a) a scimitar', '(b) any simple melee weapon']],\r\n                proficiency: ['Druidic','Spellcasting']\r\n            },\r\n            'Cleric': {\r\n                hit_dice: '1k8',\r\n                armor: ['light armor','medium armor','shields'],\r\n                weapons: ['simple weapons'],\r\n                saving_throws: ['Wisdom', 'Charisma'],\r\n                skills_pick: 2,\r\n                skills: ['empty','History', 'Insight', 'Medicine', 'Persuasion', 'Religion'],\r\n                tools: [],\r\n                equip: ['A shield and a holy symbol', ['(a) a mace', 'a warhammer (if proficient)'], ['(a) scale mail', '(b) leather armor', '(c) chain mail (if proficient)'], ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a priest’s pack', '(b) an explorer’s pack']],\r\n                proficiency: ['Spellcasting','Divine Domain']\r\n            },\r\n            'Rogue': {\r\n                hit_dice: '1k8',\r\n                armor: ['light armor'],\r\n                weapons: ['simple weapons','hand crossbows', 'longswords', 'rapiers', 'shortswords'],\r\n                saving_throws: ['Wisdom', 'Charisma'],\r\n                skills_pick: 4,\r\n                skills: ['empty','Acrobatics', 'Athletics', 'Deception', 'Insight', 'Intimidation', 'Investigation', 'Perception', 'Performance', 'Persuasion', 'Sleight of Hand','Stealth'],\r\n                tools: ['Thieves’ tools'],\r\n                equip: ['Leather armor, two daggers, and thieves’ tools', ['(a) a rapier', 'a shortsword'], ['(a)a shortbow and quiver of 20 arrows', '(b) a shortsword'], ['(a) a burglar’s pack', '(b) a dungeoneer’s pack','(c) an explorer’s pack']],\r\n                proficiency: ['Expertise','Sneak Attack','Thieves’ Cant']\r\n            },\r\n            'Ranger': {\r\n                hit_dice: '1k10',\r\n                armor: ['light armor','medium armor','shields'],\r\n                weapons: ['simple weapons','martial weapons'],\r\n                saving_throws: ['Strength', 'Dexterity'],\r\n                skills_pick: 3,\r\n                skills: ['empty','Animal Handling', 'Athletics', 'Insight', 'Investigation', 'Nature', 'Perception', 'Stealth'],\r\n                tools: [],\r\n                equip: ['A longbow and a quiver of 20 arrows', ['(a) scale mail', 'leather armor'], ['(a)two shortswords', '(b) two simple melee weapons'], ['(a) a dungeoneer’s pack', '(b) an explorer’s pack']],\r\n                proficiency: ['Favored Enemy','Natural Explorer']\r\n            },\r\n           },\r\n           species_char : {\r\n               'Human': {\r\n                   gender: ['female','male'],\r\n                   alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                   speed: '9m',\r\n                   basic_languages: 'Common',\r\n                   languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n                   proficiency: [],\r\n               },\r\n               'Forest Elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n                    speed: '10,5m',\r\n                    basic_languages: 'Elvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Mask of the Wild', 'Martial Arts'],\r\n                    weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n                },\r\n                'High Elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Elvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Magic Trick', 'Martial Arts'],\r\n                    languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n                    weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n                    tricks: ['Dancing Lights','Light', 'Mage Hand', 'Message','Mending','Resistance','Acid Splash','Ray of Frost','Fire Bolt','Minor Illusion','Shocking Grasp','True Strike','Poison Spray','Prestidigitation','Chill Touch','Friendship']\r\n                },\r\n                'Drow - Dark Elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Elvish & Common',\r\n                    proficiency: ['Superior Darkvision - 36m','Fey Ancestry', 'Trance','Sunlight Sensitivity','Drow Magic', 'Drow Weapon Training'],\r\n                    weapons: ['rapier', 'hand crossbow', 'short sword'],\r\n                    tricks: ['Dancing Lights'],\r\n                },\r\n                'Mountain Dwarf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Dwarvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Armor Training', 'Tool Proficiency'],\r\n                    weapons: ['battleaxe','handaxe','light hammer','warhammer','light armor','medium armor'],\r\n                    tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n                },\r\n                'Hill Dwarf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Dwarvish & Common',\r\n                    proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Toughness','Tool Proficiency'],\r\n                    weapons: ['battleaxe','handaxe','light hammer','warhammer'],\r\n                    tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n                },\r\n                'Halfling - Lightfoot': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Halfling & Common',\r\n                    proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Naturally Stealthy'],\r\n                },\r\n                'Halfling - Stout': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Halfling & Common',\r\n                    proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Stout Resilience'],\r\n                },\r\n                'Tiefling': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Infernal & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Hellish Resistance','Infernal Legacy','Stout Resilience'],\r\n                    tricks: ['thaumaturgy'],\r\n                },\r\n                'Dragonborn': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Draconic & Common',\r\n                    proficiency: ['Draconic Ancestry', 'Breath Weapon','Damage Resistance'],\r\n                    dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n                },\r\n                'Forest Gnome': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Gnomish & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Gnome Cunning','Natural Illusionist','Speak with Small Beasts'],\r\n                    tricks: ['Minor Illusion']\r\n                },\r\n                'Rock Gnome': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '7,5m',\r\n                    basic_languages: 'Gnomish & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Gnome Cunning','Artificer’s Lore','Tinker'],\r\n                    tools: ['tinker`s tools']\r\n                },\r\n                'Half-Orc': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Orc & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Menacing','Relentless Endurance','Savage Attacks'],\r\n                    skills: ['Persuasion']\r\n                },\r\n                'Half-Elf': {\r\n                    gender: ['female','male'],\r\n                    alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n                    speed: '9m',\r\n                    basic_languages: 'Orc & Common',\r\n                    proficiency: ['Darkvision - 18m', 'Fey Ancestry','Skill Versatility','Savage Attacks'],\r\n                    languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n                    skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion']\r\n                }\r\n            },\r\n            person: {\r\n                name: '',\r\n                gender: '',\r\n                alignment: '',\r\n                languages: [],\r\n                tricks: [],\r\n                tools:[],\r\n                dragons: [],\r\n                skills: [],\r\n                equip: [],\r\n                prof: [],\r\n                \r\n            },\r\n            update: this.updateState,\r\n            updatePerson: this.addPersonData,\r\n         \r\n\t\t}\r\n\t}\r\n\r\n\tupdateState(values) {\r\n\t\tthis.setState(values)\r\n\t}\r\n    addPersonData(key, value) {\r\n        let personData = {...this.state.person};\r\n        let filled = personData.filled;\r\n        filled += 1;\r\n        personData.filled = filled;\r\n        if (key === 'languages' || key === 'tricks' || key === 'tools' || key === 'dragons') {\r\n            let goodKey = personData[key];\r\n            goodKey.splice(0,1,value);\r\n        } else if (key === 'skills') {\r\n            let goodKey = personData[key];\r\n            if (value === 'empty') { goodKey.splice(0, goodKey.length)\r\n            } else if(goodKey.length <= 1) {\r\n                goodKey.push(value); \r\n            } else {\r\n                goodKey.splice(0,1,value);\r\n            }\r\n\r\n        } else {\r\n            personData[key] = value;\r\n        }\r\n      \r\n        this.setState({person: personData});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DataContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</DataContext.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataProvider","export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    SPECIES = ['Human', 'High Elf', 'Forest Elf', 'Drow - Dark Elf', 'Mountain Dwarf', 'Hill Dwarf','Halfling - Lightfoot', 'Halfling - Stout','Tiefling','Dragonborn', 'Forest Gnome', 'Rock Gnome', 'Half-Orc','Half-Elf'];\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('species',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.SPECIES.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    CLASSES = ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.CLASSES.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\nclass AbilityCells extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            default: props.default,\r\n            features: props.features,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        let data = event.target.value;\r\n        let actualState = [...this.context.actualState];\r\n        let copy;\r\n        if(this.props.defaultPicked) {\r\n            copy = [...this.context.default];\r\n        } else { \r\n            copy = [...this.context.rolled];\r\n        }\r\n        for( let i = 0; i < copy.length; i++){ \r\n            if ( copy[i] === data && data === parseInt(data, 10)) { \r\n                copy.splice(i, 1); \r\n                break;\r\n            }\r\n        }\r\n        if(actualState[index] === parseInt(actualState[index], 10)) copy.push(actualState[index])\r\n            actualState[index] = data;\r\n        if (actualState.every(value => value === parseInt(value, 10))) {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: false, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: false, actualState});\r\n        } else {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: true, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: true, actualState});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                                \r\n                                {\r\n                                this.props.defaultPicked ?\r\n                                this.context.default.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) :\r\n                                this.context.rolled.map((feature,index) => (\r\n                                    <MenuItem  className=\"option\" key={index} value={feature}>{feature}</MenuItem>\r\n                                )) \r\n                                }\r\n                            </Select> \r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nAbilityCells.contextType=DataContext;\r\nexport default AbilityCells; ","import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...context.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n       values,\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","import React, {useContext} from 'react';\r\nimport DataContext from './contexts/DataContext'; \r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nfunction FinalValues(props) {\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <>\r\n        <h3>Your species: {props.species}</h3>\r\n        <h3>Your profession: {props.profession}</h3>\r\n        <h3>Your abilities:</h3>\r\n        <TableContainer >\r\n            <Table className=\"abilities\" id=\"finalValues\"> \r\n                <TableHead>\r\n                    <TableRow> \r\n                        {props.abilities.map((ability, index) => (\r\n                            <TableCell key={index}>{ability}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow  id=\"values\">\r\n                        {data.finalValues.map((value, index) => (\r\n                            <TableCell key={index}>{value}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default FinalValues;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AbilityCells from './AbilityCells';\r\nimport Bonus from './Bonus';\r\nimport FinalValues from './FinalValues';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            abilities: ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'],\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n            defaultPicked: false,\r\n            numbersToShow: [],\r\n            final: false,\r\n        }\r\n\r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n        this.confirmMethod = this.confirmMethod.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        let pickable = [...features]\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: features, featuresUse: pickable, rolled: true}, this.context.update({rolled: pickable, defaultRolled: pickable}) );\r\n    }\r\n\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        let pickable = [...defaultNumbers];\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: defaultNumbers, features: pickable , rolled: true, defaultPicked: true});\r\n    }\r\n\r\n    confirmMethod() {\r\n        let state = [...this.context.actualState]\r\n        const bonus =  [...this.context.speciesBonus[this.props.species]];\r\n        for(let i=0; i < state.length; i++) {\r\n            if(bonus[i] === parseInt(bonus[i], 10)) state[i] += bonus[i]\r\n        }\r\n        this.props.buttonState('clicked');\r\n        this.setState({final: true}, this.context.update({finalValues: state, final: true}) );\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n   \r\n       \r\n        const rollsResults = (\r\n            <>\r\n                <h4>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.numbersToShow.toString()}</h4>\r\n               \r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\" id=\"abilities\"> \r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            \r\n                            <TableRow id=\"values\">\r\n                                <AbilityCells  abilities={this.state.abilities} default={this.state.features} features={this.state.featuresUse} defaultPicked={this.state.defaultPicked}/>  \r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <Bonus species ={this.props.species}/> \r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n                </Fade> \r\n                 <Button \r\n                    onClick={this.confirmMethod} \r\n                    disabled={this.context.notConfirmed}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"  \r\n                    style={{marginTop: \"26px\"}}\r\n                    >\r\n                        Confirm - One way ticket!\r\n                    </Button>                   \r\n                \r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        \r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        } else if(!this.state.final) {\r\n            return this.state.rolled ? rollsResults : rolling      \r\n        } else {\r\n            return (<FinalValues abilities = {this.state.abilities} species={this.props.species} profession={this.props.profession}/>)\r\n        }             \r\n       \r\n    }\r\n    \r\n}\r\nFeatures.contextType=DataContext;\r\nexport default Features;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nclass LanguagesPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('languages', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {this.context.species_char[species].languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nLanguagesPick.contextType=DataContext;\r\nexport default LanguagesPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nclass TrickPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick One magic trick</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tricks', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {this.context.species_char[species].tricks.map((trick,index) => (\r\n                        <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nTrickPick.contextType=DataContext;\r\nexport default TrickPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nclass ToolsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one artisan`s tool</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tools', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {this.context.species_char[species].tools.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nToolsPick.contextType=DataContext;\r\nexport default ToolsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nclass Dragons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Dragon</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('dragons', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {this.context.species_char[species].dragons.map((dragon,index) => (\r\n                        <MenuItem  key={index} value={dragon}>{dragon}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDragons.contextType=DataContext;\r\nexport default Dragons;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nclass Skills extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n         \r\n             <h4>As Half Elf You can pick two skills in which You`ll have proficiences</h4>  \r\n             <div>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick two skills</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('skills', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {this.context.species_char[species].skills.map((skill,index) => (\r\n                        <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </div> \r\n            {(this.context.person.skills.length !== 0) && <h4>You've picked {this.context.person.skills.toString()}</h4>}\r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nSkills.contextType=DataContext;\r\nexport default Skills;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LanguagesPick from './LanguagesPick';\r\nimport TrickPick from './TrickPick';\r\nimport ToolsPick from './ToolsPick';\r\nimport Dragons from './Dragons';\r\nimport Skills from './Skills';\r\n\r\nclass SpeciesChar extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            name: '',\r\n            gender: '',\r\n            alignment: '',\r\n            languages: [],\r\n            tricks: [],\r\n            tools:[],\r\n            dragons: [],\r\n            skills: [],\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(prevState);\r\n        let char = this.state;\r\n        // if(prevState.name !== char.name && prevState.gender !== char.gender && prevState.alignment !== char.alignment && prevProps.button === true) this.handleData();\r\n        if(prevState.name !== char.name) {\r\n            this.context.updatePerson('name',char.name);\r\n        }\r\n        if(prevState.gender !== char.gender) {\r\n            this.context.updatePerson('gender',char.gender);\r\n        }\r\n        if(prevState.alignment !== char.alignment) {\r\n            this.context.updatePerson('alignment',char.alignment);\r\n        }\r\n        if(prevState.languages !== char.languages) {\r\n            this.context.updatePerson('languages',char.languages);\r\n        }\r\n        if(prevState.tricks !== char.tricks) {\r\n            this.context.updatePerson('tricks',char.tricks);\r\n        }\r\n        if(prevState.tools !== char.tools) {\r\n            this.context.updatePerson('tools',char.tools);\r\n        }\r\n        if(prevState.dragons !== char.dragons) {\r\n            this.context.updatePerson('dragons',char.dragons);\r\n        }\r\n        if(prevState.skills !== char.skills) {\r\n            this.context.updatePerson('skills',char.skills);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getValue(key, event) {\r\n        const data = event.target.value;\r\n        this.setState({[key]: data}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let char = this.state;\r\n        const species = this.props.species;\r\n        if(char.name !== '' && char.gender !== '' && char.alignment !== '') {\r\n            if(species === 'Drow - Dark Elf' || species === 'Forest Elf' || species === 'Halfling - Lightfoot' || species === 'Halfling - Stout' || species === 'Tiefling' || species === 'Forest Gnome' || species === 'Rock Gnome' || species === 'Half-Orc') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Human' && char.languages.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Half-Elf' && char.languages.length !== 0 && this.context.person.skills.length === 2) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'High Elf' && char.languages.length !== 0 && char.tricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Mountain Dwarf' && char.tools.length !== 0 || species === 'Hill Dwarf' && char.tools.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Dragonborn' && char.dragons.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        console.log(this.context.person)\r\n        const species = this.props.species;\r\n        if (this.props.currentStep !== 4) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div><h2>Brave {this.props.species}. Tell us more about Yourself</h2></div>\r\n            <form className='charData' noValidate autoComplete=\"off\">\r\n                <TextField onChange={(e) =>this.getValue('name', e)} id=\"standard-basic\" label=\"Your name\" />\r\n                <TextField onChange={(e) =>this.getValue('gender', e)} id=\"standard-basic2\" label=\"Your gender\" />\r\n                <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Alignment</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.getValue('alignment', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.context.species_char[species].alignment.map((align,index) => (\r\n                        <MenuItem  key={index} value={align}>{align}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {(this.props.species === 'Human' || this.props.species === 'High Elf' || this.props.species === 'Half-Elf') && <LanguagesPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'High Elf') && <TrickPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Mountain Dwarf' || this.props.species === 'Hill Dwarf') && <ToolsPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Dragonborn') && <Dragons getValue= {this.getValue} species = {this.props.species}/>}\r\n                \r\n            </FormControl>\r\n            </form>\r\n                {(this.props.species === 'Half-Elf') && <Skills getValue= {this.getValue} species = {this.props.species}/>}        \r\n            {(species !== 'Human') && \r\n                <h3>As {species}, You have proficiences: <br/>{this.context.species_char[species].proficiency.toString()}</h3>\r\n            }\r\n          \r\n            \r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nSpeciesChar.contextType=DataContext;\r\nexport default SpeciesChar;","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport SpeciesChar from './SpeciesChar';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass MultiForm extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this.next = this.next.bind(this);\r\n    this.prev = this.prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n\r\n prev() {\r\n    let currentStep = this.state.currentStep\r\n    if(currentStep === 3) this.context.update({default: this.context.defaultStatic, rolled: this.context.defaultRolled, notConfirmed: true, actualState: ['','','','','','']})\r\n \r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 3 ? 4: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n  if(this.state.currentStep === 3 && this.context.final) this.setState({button:false});\r\n }\r\n\r\n  render () {\r\n    let currentStep = this.state.currentStep;\r\n    console.log(currentStep);\r\n    console.log(this.state.button)\r\n    const previousButton = (\r\n      <Button className=\"previous\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        disabled={this.context.final && currentStep === 3}\r\n        onClick={this.prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button className=\"next\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this.next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1>Your Character Generator</h1>\r\n          </header>\r\n          <main>\r\n          {}\r\n            <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Features buttonState={this.handleButton} species={this.state.species} profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n            <SpeciesChar buttonState={this.handleButton} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <div className=\"buttons\">\r\n              {currentStep !== 1 && previousButton}\r\n              {currentStep < 5 && nextButton } \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMultiForm.contextType=DataContext;\r\nexport default MultiForm;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport DataProvider from './contexts/DataProvider';\r\nimport MultiForm from './MultiForm';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    return (\r\n      <DataProvider>\r\n        <MultiForm/>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}