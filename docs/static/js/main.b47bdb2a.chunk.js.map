{"version":3,"sources":["contexts/DataContext.js","contexts/DataProvider.js","img/dd.png","Species.js","Classes.js","services/roll.js","AbilityCells.js","data/data.js","Bonus.js","FinalValues.js","Features.js","LanguagesPick.js","TrickPick.js","ToolsPick.js","Dragons.js","SkillsClass.js","Skills.js","HalfElf.js","SpeciesChar.js","services/modificator.js","Equip.js","Instruments.js","ClassTricks.js","SpellsPick.js","ClassChar.js","MultiForm.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","React","createContext","DataProvider","props","updateState","bind","addPersonData","state","defaultStatic","default","rolled","defaultRolled","actualState","notConfirmed","finalValues","final","step_four","person","name","gender","alignment","languages","tricks","tools","dragons","skills","equip1","equip2","equip3","equip4","prof","mods","spells","classSkills","classTricks","classSpells","instruments","update","updatePerson","values","this","setState","key","value","pick","personData","splice","goodKey","length","push","Provider","children","Component","Species","SPECIES","picked","handleData","event","target","buttonState","currentStep","FormControl","className","InputLabel","style","color","id","Select","onChange","labelId","placeholer","map","species","index","MenuItem","Classes","CLASSES","featuresNumbers","rolls","results","i","k6","Math","floor","random","sort","a","b","shift","sum","reduce","total","num","AbilityCells","features","changeValue","copy","data","context","defaultPicked","parseInt","every","abilities","ability","TableCell","e","def","feature","contextType","speciesBonus","species_char","speed","basic_languages","proficiency","weapons","class_char","hit_dice","hit_points","armor","saving_throws","skills_pick","equip","tricks_pick","spells_pick","fight_styles","Bonus","item","bon","textAlign","padding","FinalValues","useContext","profession","TableContainer","Table","TableHead","TableRow","TableBody","Features","featuresUse","numbersToShow","rollMethod","useDefault","confirmMethod","serviceRoll","pickable","unshift","defaultNumbers","bonus","rollsResults","toString","Fade","in","Button","onClick","disabled","variant","marginTop","rolling","LanguagesPick","getValue","lang","TrickPick","trick","ToolsPick","tool","Dragons","dragon","SkillsClass","required","skill","withSubscription","WrappedComponent","objKey","HalfelfSkills","ClassSkills","SpeciesChar","prevProps","prevState","char","noValidate","autoComplete","TextField","label","align","forEach","Equip","component","FormLabel","RadioGroup","aria-label","el","FormControlLabel","control","Radio","Instruments","ClassTricks","SpellsPick","spell","ClassChar","atr","modificatorService","finals","console","log","MultiForm","button","handleUserData","next","prev","handleButton","checkButtons","childData","previousButton","borderColor","size","nextButton","src","logo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAIeA,EAFKC,IAAMC,gBCgFXC,E,kDA7Ed,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,YAAc,EAAKA,YAAYC,KAAjB,gBACb,EAAKC,cAAgB,EAAKA,cAAcD,KAAnB,gBAC3B,EAAKE,MAAQ,CACJC,cAAgB,CAAC,QAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,GAC7CC,QAAU,CAAC,QAAQ,GAAI,GAAI,GAAI,GAAI,GAAI,GACvCC,OAAQ,GACRC,cAAe,GACfC,YAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,IACnCC,cAAc,EACRC,YAAa,GACbC,OAAO,EACPC,WAAW,EACVC,OAAQ,CACJC,KAAM,GACNC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRC,MAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,OAAQ,GACRC,KAAM,GACNC,KAAM,GACNC,OAAQ,GACRC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,IAEjBC,OAAQ,EAAKjC,YACbkC,aAAc,EAAKhC,eApCX,E,wDAwCPiC,GACXC,KAAKC,SAASF,K,oCAGEG,EAAKC,EAAOC,GACtB,IAAIC,EAAU,eAAOL,KAAKjC,MAAMU,QAIhC,GAAY,cAARyB,GAA+B,WAARA,GAA4B,UAARA,GAA2B,YAARA,GAA6B,WAARA,GAA4B,WAARA,GAA4B,WAARA,GAA4B,WAARA,EACjIG,EAAWH,GACjBI,OAAO,EAAE,EAAEH,QAChB,GAAY,WAARD,GAA4B,gBAARA,GAAiC,gBAARA,GAAiC,gBAARA,GAAiC,WAARA,EAAkB,CACxH,IAAIK,EAAUF,EAAWH,GACX,UAAVC,EAAqBI,EAAQD,OAAO,EAAGC,EAAQC,QACzCD,EAAQC,QAAUJ,EACxBG,EAAQE,KAAKN,GAEbI,EAAQD,OAAO,EAAE,EAAEH,QAIvBE,EAAWH,GAAOC,EAGtBH,KAAKC,SAAS,CAACxB,OAAQ4B,M,+BAI7B,OACC,cAAC,EAAYK,SAAb,CAAsBP,MAAOH,KAAKjC,MAAlC,SACEiC,KAAKrC,MAAMgD,e,GAzEWnD,IAAMoD,W,QCHlB,MAA0B,+B,oCC8D1BC,E,kDAnDX,WAAYlD,GAAQ,IAAD,8BACf,cAAMA,IAFVmD,QAAU,CAAC,QAAS,WAAY,aAAc,kBAAmB,iBAAkB,aAAa,uBAAwB,mBAAmB,WAAW,aAAc,eAAgB,aAAc,WAAW,YAIzM,EAAK/C,MAAQ,CACTgD,OAAQ,IAGZ,EAAKC,WAAa,EAAKA,WAAWnD,KAAhB,gBAPH,E,uDAWRoD,GACPjB,KAAKrC,MAAMqD,WAAW,UAAUC,EAAMC,OAAOf,OAC7CH,KAAKC,SAAS,CAACc,OAAQE,EAAMC,OAAOf,QACpCH,KAAKrC,MAAMwD,YAAY,a,+BAMvB,OAA+B,IAA3BnB,KAAKrC,MAAMyD,YACH,6BAKR,mCACC,eAACC,EAAA,EAAD,CAAaC,UAAU,UAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,+BACD,cAACC,EAAA,EAAD,CACIC,SAAU5B,KAAKgB,WACfa,QAAQ,2BACRH,GAAG,qBACHvB,MAAQH,KAAKjC,MAAMgD,OACnBe,WAAW,QACXN,MAAO,CAACC,MAAO,QANnB,SASKzB,KAAKc,QAAQiB,KAAI,SAACC,EAAQC,GAAT,OACd,cAACC,EAAA,EAAD,CAAuB/B,MAAO6B,EAA9B,SAAwCA,GAAxBC,iB,GAzClBzE,IAAMoD,WCoDbuB,E,kDAhDX,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IAFVyE,QAAU,CAAC,YAAY,OAAO,SAAS,QAAQ,UAAU,OAAO,UAAU,SAAS,QAAQ,WAAW,UAAU,UAG5G,EAAKrE,MAAQ,CACTgD,OAAQ,IAGZ,EAAKC,WAAa,EAAKA,WAAWnD,KAAhB,gBANH,E,uDAURoD,GACPjB,KAAKrC,MAAMqD,WAAW,aAAaC,EAAMC,OAAOf,OAChDH,KAAKC,SAAS,CAACc,OAAQE,EAAMC,OAAOf,QACpCH,KAAKrC,MAAMwD,YAAY,a,+BAKvB,OAA+B,IAA3BnB,KAAKrC,MAAMyD,YACH,6BAKR,mCACC,eAACC,EAAA,EAAD,CAAaC,UAAU,UAAvB,UACI,cAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,8BACD,cAACC,EAAA,EAAD,CACIC,SAAU5B,KAAKgB,WACfa,QAAQ,2BACRH,GAAG,qBACHvB,MAAQH,KAAKjC,MAAMgD,OACnBS,MAAO,CAACC,MAAO,QALnB,SAQKzB,KAAKoC,QAAQL,KAAI,SAACzC,EAAK2C,GAAN,OACd,cAACC,EAAA,EAAD,CAAuB/B,MAAOb,EAA9B,SAAqCA,GAArB2C,iB,GAtClBzE,IAAMoD,W,iBCkBb,EA7BF,WAGT,IAFA,IAAIyB,EAAkB,GAClBC,EAAQ,EACNA,EAAQ,GAAI,CAId,IAFA,IAAIC,EAAU,GACVC,EAAI,EACFA,EAAI,GAAG,CACT,IAAIC,EAAKC,KAAKC,MAAqB,EAAfD,KAAKE,UAAe,EACxCL,EAAQ9B,KAAKgC,GACbD,IAGJD,EACKM,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACnBC,QAEL,IAAMC,EAAMV,EAAQW,QAAO,SAACC,EAAOC,GAC/B,OAAOD,EAAQC,KAGnBf,EAAgB5B,KAAKwC,GACrBX,IAIJ,OAAOD,G,+DCjBLgB,E,kDACF,WAAY1F,GAAQ,IAAD,8BACf,cAAMA,IAEDI,MAAQ,CACTE,QAASN,EAAMM,QACfqF,SAAU3F,EAAM2F,UAGpB,EAAKC,YAAc,EAAKA,YAAY1F,KAAjB,gBARJ,E,wDAYPoE,EAAOhB,GACf,IAEIuC,EAFAC,EAAOxC,EAAMC,OAAOf,MACpB/B,EAAW,YAAO4B,KAAK0D,QAAQtF,aAG/BoF,EADDxD,KAAKrC,MAAMgG,cACN,YAAO3D,KAAK0D,QAAQzF,SAEpB,YAAO+B,KAAK0D,QAAQxF,QAE5B,IAAK,IAAIsE,EAAI,EAAGA,EAAIgB,EAAKhD,OAAQgC,IAC7B,GAAKgB,EAAKhB,KAAOiB,GAAQA,IAASG,SAASH,EAAM,IAAK,CAClDD,EAAKlD,OAAOkC,EAAG,GACf,MAGLpE,EAAY6D,KAAW2B,SAASxF,EAAY6D,GAAQ,KAAKuB,EAAK/C,KAAKrC,EAAY6D,IAC9E7D,EAAY6D,GAASwB,EACrBrF,EAAYyF,OAAM,SAAA1D,GAAK,OAAIA,IAAUyD,SAASzD,EAAO,QAClDH,KAAKrC,MAAMgG,eAAe3D,KAAK0D,QAAQ7D,OAAO,CAAC5B,QAASuF,EAAMnF,cAAc,EAAOD,gBAClF4B,KAAK0D,QAAQ7D,OAAO,CAAC3B,OAAQsF,EAAMnF,cAAc,EAAOD,kBAEzD4B,KAAKrC,MAAMgG,eAAe3D,KAAK0D,QAAQ7D,OAAO,CAAC5B,QAASuF,EAAMnF,cAAc,EAAMD,gBACjF4B,KAAK0D,QAAQ7D,OAAO,CAAC3B,OAAQsF,EAAMnF,cAAc,EAAMD,mB,+BAMzD,IAAD,OACL,OACI,mCAEK4B,KAAKrC,MAAMmG,UAAU/B,KAAI,SAACgC,EAAS9B,GAAV,OACtB,cAAC+B,EAAA,EAAD,UACI,eAAC3C,EAAA,EAAD,WACI,cAACE,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,mBACA,cAACC,EAAA,EAAD,CACIE,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QACfG,SAAU,SAACqC,GAAD,OAAO,EAAKV,YAAYtB,EAAMgC,IAJ5C,SASI,EAAKtG,MAAMgG,cACX,EAAKD,QAAQzF,QAAQ8D,KAAI,SAACmC,EAAIjC,GAAL,OACrB,cAACC,EAAA,EAAD,CAAUZ,UAAU,SAAqBnB,MAAO+D,EAAhD,SAAsDA,GAApBjC,MAEtC,EAAKyB,QAAQxF,OAAO6D,KAAI,SAACoC,EAAQlC,GAAT,OACpB,cAACC,EAAA,EAAD,CAAWZ,UAAU,SAAqBnB,MAAOgE,EAAjD,SAA2DA,GAAxBlC,YAjBnCA,Y,GA9CTzE,IAAMoD,WA6EjCyC,EAAae,YAAY7G,EACV8F,QCvFFI,EAAO,CAChBY,aAAc,CACV,MAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACzB,WAAY,CAAC,GAAI,EAAE,GAAG,EAAE,GAAG,IAC3B,aAAc,CAAC,GAAG,EAAG,GAAI,GAAI,EAAG,IAChC,kBAAmB,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAClC,iBAAkB,CAAC,EAAE,GAAI,EAAE,GAAG,GAAG,IACjC,aAAc,CAAC,GAAG,GAAG,EAAE,GAAG,EAAE,IAC5B,uBAAwB,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GACvC,mBAAoB,CAAC,GAAI,EAAG,EAAG,GAAI,GAAG,IACtC,eAAgB,CAAC,GAAG,EAAE,GAAG,EAAG,GAAG,IAC/B,aAAc,CAAC,GAAG,GAAG,EAAE,EAAE,GAAG,IAC5B,SAAY,CAAC,GAAG,GAAG,GAAG,EAAG,GAAG,GAC5B,WAAc,CAAC,EAAG,GAAG,GAAG,GAAG,GAAG,GAC9B,WAAY,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,GAC3B,WAAY,CAAC,EAAG,GAAG,EAAG,GAAG,GAAG,KAEhCC,aAAe,CACX,MAAS,CACL3F,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,KACPC,gBAAiB,SACjB3F,UAAW,CAAC,SAAS,WAAW,QAAQ,UAAU,SAAS,WAAW,MAAM,WAAY,YACxF4F,YAAa,IAEjB,aAAc,CACT9F,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,mBAC1F2F,MAAO,QACPC,gBAAiB,kBACjBC,YAAa,CAAC,mBAAmB,eAAgB,SAAS,mBAAoB,gBAC9EC,QAAS,CAAC,WAAY,UAAW,aAAc,gBAEnD,WAAY,CACR/F,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,mBAC1F2F,MAAO,KACPC,gBAAiB,kBACjBC,YAAa,CAAC,mBAAmB,eAAgB,SAAS,cAAe,gBACzE5F,UAAW,CAAC,WAAW,QAAQ,UAAU,SAAS,WAAW,MAAM,WAAY,YAC/E6F,QAAS,CAAC,WAAY,UAAW,aAAc,eAC/C5F,OAAQ,CAAC,iBAAiB,QAAS,YAAa,UAAU,UAAU,aAAa,cAAc,eAAe,YAAY,iBAAiB,iBAAiB,cAAc,eAAe,mBAAmB,cAAc,eAE9N,kBAAmB,CACfH,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,gBACzC2F,MAAO,KACPC,gBAAiB,kBACjBC,YAAa,CAAC,4BAA4B,eAAgB,SAAS,uBAAuB,aAAc,wBACxGC,QAAS,CAAC,SAAU,gBAAiB,eACrC5F,OAAQ,CAAC,mBAEb,iBAAkB,CACdH,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,OACPC,gBAAiB,oBACjBC,YAAa,CAAC,mBAAmB,qBAAsB,0BAA0B,eAAgB,yBAA0B,oBAC3HC,QAAS,CAAC,YAAY,UAAU,eAAe,YAAY,cAAc,gBACzE3F,MAAO,CAAC,qBAAgB,yBAAoB,uBAEhD,aAAc,CACVJ,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,OACPC,gBAAiB,oBACjBC,YAAa,CAAC,mBAAmB,qBAAsB,0BAA0B,eAAgB,oBAAoB,oBACrHC,QAAS,CAAC,YAAY,UAAU,eAAe,aAC/C3F,MAAO,CAAC,qBAAgB,yBAAoB,uBAEhD,uBAAwB,CACpBJ,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,OACPC,gBAAiB,oBACjBC,YAAa,CAAC,QAAS,QAAQ,sBAAsB,uBAEzD,mBAAoB,CAChB9F,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,OACPC,gBAAiB,oBACjBC,YAAa,CAAC,QAAS,QAAQ,sBAAsB,qBAEzD,SAAY,CACR9F,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,KACPC,gBAAiB,oBACjBC,YAAa,CAAC,mBAAoB,qBAAqB,kBAAkB,oBACzE3F,OAAQ,CAAC,gBAEb,WAAc,CACVH,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,KACPC,gBAAiB,oBACjBC,YAAa,CAAC,oBAAqB,gBAAgB,qBACnDzF,QAAS,CAAC,QAAQ,OAAO,QAAQ,SAAS,SAAS,OAAO,QAAQ,MAAM,SAAS,UAErF,eAAgB,CACZL,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,OACPC,gBAAiB,mBACjBC,YAAa,CAAC,mBAAoB,gBAAgB,sBAAsB,2BACxE3F,OAAQ,CAAC,mBAEb,aAAc,CACVH,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,OACPC,gBAAiB,mBACjBC,YAAa,CAAC,mBAAoB,gBAAgB,wBAAmB,UACrE1F,MAAO,CAAC,mBAEZ,WAAY,CACRJ,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,KACPC,gBAAiB,eACjBC,YAAa,CAAC,mBAAoB,WAAW,uBAAuB,kBACpExF,OAAQ,CAAC,eAEb,WAAY,CACRN,OAAQ,CAAC,SAAS,QAClBC,UAAW,CAAC,cAAc,eAAe,eAAe,iBAAiB,iBAAiB,kBAAkB,cAAc,eAAe,gBACzI2F,MAAO,KACPC,gBAAiB,eACjBC,YAAa,CAAC,mBAAoB,eAAe,oBAAoB,kBACrE5F,UAAW,CAAC,WAAW,QAAQ,UAAU,SAAS,WAAW,MAAM,WAAY,YAC/EI,OAAQ,CAAC,QAAQ,YAAY,aAAa,kBAAkB,UAAU,SAAS,UAAU,gBAAgB,SAAS,WAAW,kBAAkB,UAAU,WAAW,aAAa,WAAW,YAAY,eAAe,cAAc,gBAG9O0F,WAAY,CACR,UAAa,CACTC,SAAU,OACVC,WAAY,GACZC,MAAO,CAAC,eACRJ,QAAS,CAAC,iBAAiB,iBAAiB,aAAa,UAAU,eACnEK,cAAe,CAAC,YAAa,YAC7BC,YAAa,EACbjG,MAAO,GACPE,OAAQ,CAAC,QAAQ,kBAAmB,YAAa,eAAgB,SAAU,aAAc,YACzFgG,MAAO,CAAC,4CAAwC,CAAC,iBAAkB,gCAAiC,CAAC,mBAAoB,0BACzHR,YAAa,CAAC,OAAQ,sBAE1B,KAAQ,CACJG,SAAU,MACVC,WAAY,EACZC,MAAO,CAAC,cAAc,eAAe,WACrCJ,QAAS,CAAC,iBAAiB,mBAC3BK,cAAe,CAAC,WAAY,gBAC5BC,YAAa,EACbE,YAAa,EACbC,YAAa,EACblG,OAAQ,CAAC,QAAQ,YAAY,aAAa,kBAAkB,UAAU,SAAS,UAAU,gBAAgB,SAAS,WAAW,kBAAkB,UAAU,WAAW,aAAa,WAAW,YAAY,eAAe,cAAc,cACrOW,YAAa,CAAC,QAAQ,WAAW,OAAO,WAAW,QAAQ,OAAO,OAAO,OAAO,YAAY,QAAQ,QACpGqF,MAAO,CAAC,6BAA8B,CAAC,eAAgB,kBAAmB,yBAA0B,CAAC,6BAAyB,kCAA8B,CAAC,aAAc,qCAC3KR,YAAa,CAAC,eAAe,sBAC7B/E,YAAa,CAAC,QAAQ,iBAAiB,UAAU,QAAQ,YAAY,UAAU,iBAAiB,mBAAmB,kBAAkB,cAAc,UAAU,cAC7JF,OAAQ,CAAC,QAAQ,oBAAoB,OAAO,eAAe,uBAAuB,cAAc,eAAe,gBAAgB,qBAAqB,gBAAgB,eAAe,cAAc,eAAe,eAAe,UAAU,mBAAmB,WAAW,kBAAkB,cAAc,eAAe,QAAQ,qBAAqB,2BAA2B,cAAc,mBAEhY,QAAW,CACPoF,SAAU,MACVC,WAAY,EACZC,MAAO,CAAC,eACRJ,QAAS,CAAC,kBACVK,cAAe,CAAC,SAAU,YAC1BC,YAAa,EACbjG,MAAO,GACPE,OAAQ,CAAC,QAAQ,SAAU,YAAa,UAAW,eAAgB,gBAAiB,SAAU,YAC9FgG,MAAO,CAAC,oDAAqD,CAAC,oCAAqC,yBAA0B,CAAC,wBAAyB,uBAAwB,CAAC,4BAAwB,iCACxMR,YAAa,CAAC,sBAAsB,eAExC,MAAS,CACLG,SAAU,MACVC,WAAY,EACZC,MAAO,CAAC,cAAc,eAAe,WACrCJ,QAAS,CAAC,QAAS,UAAW,QAAS,WAAY,QAAS,gBAAiB,YAAa,UAAW,SAAU,UAC/GK,cAAe,CAAC,SAAU,gBAC1BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,SAAU,kBAAmB,UAAW,WAAY,SAAU,aAAc,WAAY,YACzGF,MAAO,CAAC,iBACRkG,MAAO,CAAC,8DAA0D,CAAC,sBAAuB,yBAA0B,CAAC,iBAAkB,gCACvIR,YAAa,CAAC,UAAU,iBAE5B,OAAU,CACNG,SAAU,MACVC,WAAY,EACZC,MAAO,CAAC,cAAc,eAAe,WACrCJ,QAAS,CAAC,kBACVK,cAAe,CAAC,SAAU,YAC1BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,UAAW,UAAW,WAAY,aAAc,YACjEF,MAAO,GACPkG,MAAO,CAAC,6BAA8B,CAAC,aAAc,+BAAgC,CAAC,iBAAkB,oBAAqB,kCAAmC,CAAC,oCAAqC,yBAA0B,CAAC,2BAAuB,gCACxPR,YAAa,CAAC,eAAe,kBAEjC,MAAS,CACLG,SAAU,MACVC,WAAY,EACZC,MAAO,CAAC,eACRJ,QAAS,CAAC,iBAAiB,iBAAkB,aAAc,UAAW,eACtEK,cAAe,CAAC,SAAU,YAC1BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,aAAc,YAAa,YAAa,UAAW,eAAgB,gBAAiB,aAAc,cAAe,aAAc,kBAAkB,WAClKF,MAAO,CAAC,uBACRkG,MAAO,CAAC,sDAAkD,CAAC,eAAgB,gBAAiB,CAAC,wCAAyC,oBAAqB,CAAC,4BAAwB,+BAA0B,gCAC9MR,YAAa,CAAC,YAAY,eAAe,uBAE7C,OAAU,CACNG,SAAU,OACVC,WAAY,GACZC,MAAO,CAAC,cAAc,eAAe,WACrCJ,QAAS,CAAC,iBAAiB,mBAC3BK,cAAe,CAAC,WAAY,aAC5BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,kBAAmB,YAAa,UAAW,gBAAiB,SAAU,aAAc,WACrGF,MAAO,GACPkG,MAAO,CAAC,sCAAuC,CAAC,iBAAkB,iBAAkB,CAAC,qBAAsB,gCAAiC,CAAC,+BAA2B,gCACxKR,YAAa,CAAC,gBAAgB,qBAElC,OAAU,CACNG,SAAU,MACVC,WAAY,EACZC,MAAO,GACPJ,QAAS,CAAC,UAAW,QAAS,SAAU,gBAAiB,mBACzDK,cAAe,CAAC,eAAgB,UAChCC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,SAAU,UAAW,UAAW,gBAAiB,WAAY,YAC9EF,MAAO,GACPkG,MAAO,CAAC,cAAe,CAAC,iBAAkB,YAAa,CAAC,oBAAqB,mBAAoB,CAAC,wBAAoB,4BACtHR,YAAa,CAAC,eAAe,oBAEjC,KAAQ,CACJG,SAAU,MACVC,WAAY,EACZC,MAAO,GACPJ,QAAS,CAAC,+BACVK,cAAe,CAAC,WAAY,aAC5BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,aAAc,YAAa,UAAW,UAAW,WAAW,WAC7EW,YAAa,CAAC,QAAQ,WAAW,OAAO,WAAW,QAAQ,OAAO,OAAO,OAAO,YAAY,QAAQ,QACpGb,MAAO,CAAC,QAAQ,4BAAuB,sBAAiB,2BAAsB,uBAAkB,yBAAoB,qBAAgB,4BAAuB,qBAAgB,0BAA0B,0BAAqB,sBAAiB,yBAAoB,uBAAkB,6BAAwB,uBAAkB,sBAAiB,2BAC5UkG,MAAO,CAAC,WAAY,CAAC,eAAgB,iBAAkB,CAAC,2BAAuB,4BAC/ER,YAAa,CAAC,oBAAoB,iBAEtC,QAAW,CACPG,SAAU,OACVC,WAAY,GACZC,MAAO,CAAC,YAAa,eACrBJ,QAAS,CAAC,mCACVK,cAAe,CAAC,SAAU,YAC1BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,YAAa,UAAW,eAAgB,WAAY,aAAc,YACnFF,MAAO,GACPkG,MAAO,CAAC,+BAAgC,CAAC,gCAAiC,uBAAwB,CAAC,gBAAiB,2BAA4B,CAAC,uBAAmB,4BACpKR,YAAa,CAAC,eAAe,iBAEjC,QAAW,CACPG,SAAU,OACVC,WAAY,GACZC,MAAO,CAAC,YAAa,eACrBJ,QAAS,CAAC,mCACVK,cAAe,CAAC,WAAY,gBAC5BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,aAAc,kBAAmB,YAAa,UAAW,UAAW,eAAgB,aAAc,YACnHF,MAAO,GACPkG,MAAO,CAAC,CAAC,aAAc,yCAA0C,CAAC,gCAAiC,uBAAwB,CAAC,gCAAiC,gBAAiB,CAAC,2BAAuB,4BACtMR,YAAa,CAAC,iBAAiB,eAC/BW,aAAc,CAAC,UAAW,UAAU,UAAU,wBAAwB,aAAa,wBAEvF,SAAY,CACRR,SAAU,MACVC,WAAY,EACZC,MAAO,GACPJ,QAAS,CAAC,UAAW,QAAS,SAAU,gBAAiB,mBACzDK,cAAe,CAAC,WAAY,gBAC5BC,YAAa,EACb/F,OAAQ,CAAC,QAAQ,SAAU,YAAa,UAAW,eAAgB,aAAc,YACjFF,MAAO,GACPkG,MAAO,CAAC,cAAe,CAAC,gCAAiC,qBAAsB,CAAC,oBAAqB,mBAAoB,CAAC,2BAAuB,4BACjJR,YAAa,CAAC,eAAe,wCAAyC,iCACtEzF,QAAS,CAAC,QAAQ,OAAO,QAAQ,SAAS,SAAS,OAAO,QAAQ,MAAM,SAAS,YCtRvFqG,E,kDAEN,WAAY1H,EAAO+F,GAAU,IAAD,sBAIxB,IAAM1B,GAHN,cAAMrE,IAGeA,MAAMqE,QAEvBjC,EADK,YAAO0D,EAAKY,aAAarC,IACfD,KAAI,SAAAuD,GAEnB,MADY,KAATA,IAAaA,EAAI,kBAAcA,IAC3BA,KARa,OAUxB,EAAKvH,MAAQ,CACVgC,UAXqB,E,qDAsBxB,OACI,mCACCC,KAAKjC,MAAMgC,OAAOgC,KAAI,SAACwD,EAAKtD,GAAN,OACnB,cAAC+B,EAAA,EAAD,CAAWxC,MAAO,CAACC,MAAO,OAAQ+D,UAAW,SAAUC,QAAS,YAAhE,SAA0FF,GAARtD,Y,GA3B1EzE,IAAMoD,WA2C1ByE,EAAMjB,YAAY7G,EACH8H,QCXAK,MA/Bf,SAAqB/H,GACjB,IAAM8F,EAAOkC,qBAAWpI,GAExB,OACI,qCACA,gDAAmBI,EAAMqE,WACzB,mDAAsBrE,EAAMiI,cAC5B,iDACA,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOxE,UAAU,YAAYI,GAAG,cAAhC,UACI,cAACqE,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,UACKrI,EAAMmG,UAAU/B,KAAI,SAACgC,EAAS9B,GAAV,OACjB,cAAC+B,EAAA,EAAD,UAAwBD,GAAR9B,UAI5B,cAACgE,EAAA,EAAD,UACI,cAACD,EAAA,EAAD,CAAWtE,GAAG,SAAd,SACK+B,EAAKnF,YAAYyD,KAAI,SAAC5B,EAAO8B,GAAR,OAClB,cAAC+B,EAAA,EAAD,UAAwB7D,GAAR8B,mBCVtCiE,E,kDACF,WAAYvI,GAAQ,IAAD,8BACf,cAAMA,IAEDI,MAAQ,CACT+F,UAAW,CAAC,WAAY,YAAa,eAAgB,eAAgB,SAAU,YAC/ER,SAAS,GACTpF,QAAQ,EACRiI,YAAa,GACbxC,eAAe,EACfyC,cAAe,GACf7H,OAAO,GAGX,EAAK8H,WAAa,EAAKA,WAAWxI,KAAhB,gBAClB,EAAKyI,WAAa,EAAKA,WAAWzI,KAAhB,gBAClB,EAAK0I,cAAgB,EAAKA,cAAc1I,KAAnB,gBAfN,E,yDAmBf,IAAMyF,EAAWkD,IACbC,EAAQ,YAAOnD,GACnBmD,EAASC,QAAQ,SACjB1G,KAAKC,SAAS,CAACmG,cAAe9C,EAAU6C,YAAaM,EAAUvI,QAAQ,GAAO8B,KAAK0D,QAAQ7D,OAAO,CAAC3B,OAAQuI,EAAUtI,cAAesI,O,mCAIpI,IAAME,EAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GACxCF,EAAQ,UAAOE,GACnBF,EAASC,QAAQ,SACjB1G,KAAKC,SAAS,CAACmG,cAAeO,EAAgBrD,SAAUmD,EAAWvI,QAAQ,EAAMyF,eAAe,M,sCAMhG,IAFA,IAAI5F,EAAK,YAAOiC,KAAK0D,QAAQtF,aACvBwI,EAAK,YAAQnD,EAAKY,aAAarE,KAAKrC,MAAMqE,UACxCQ,EAAE,EAAGA,EAAIzE,EAAMyC,OAAQgC,IACxBoE,EAAMpE,KAAOoB,SAASgD,EAAMpE,GAAI,MAAKzE,EAAMyE,IAAMoE,EAAMpE,IAE9DxC,KAAKrC,MAAMwD,YAAY,WACvBnB,KAAKC,SAAS,CAAC1B,OAAO,GAAOyB,KAAK0D,QAAQ7D,OAAO,CAACvB,YAAaP,EAAOQ,OAAO,O,+BAQ7E,IAAMsI,EACF,qCACI,wCAAW7G,KAAKrC,MAAMiI,WAAtB,qDAAoF5F,KAAKjC,MAAMqI,cAAcU,cAE7G,cAACC,EAAA,EAAD,CAAMC,IAAI,EAAV,SACA,cAACnB,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAOxE,UAAU,YAAYI,GAAG,YAAhC,UACI,cAACqE,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAAChC,EAAA,EAAD,uBACA,cAACA,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,4BAGR,eAACiC,EAAA,EAAD,WAEI,cAACD,EAAA,EAAD,CAAUtE,GAAG,SAAb,SACI,cAAC,EAAD,CAAeoC,UAAW9D,KAAKjC,MAAM+F,UAAW7F,QAAS+B,KAAKjC,MAAMuF,SAAUA,SAAUtD,KAAKjC,MAAMoI,YAAaxC,cAAe3D,KAAKjC,MAAM4F,kBAE9I,cAACqC,EAAA,EAAD,UACI,cAAC,EAAD,CAAOhE,QAAUhC,KAAKrC,MAAMqE,sBAO3C,cAACiF,EAAA,EAAD,CACGC,QAASlH,KAAKuG,cACdY,SAAUnH,KAAK0D,QAAQrF,aACvB+I,QAAQ,YACR3F,MAAM,YACND,MAAO,CAAC6F,UAAW,QALtB,0CAaHC,EACF,qCACI,oEACA,cAACL,EAAA,EAAD,CACIC,QAASlH,KAAKqG,WACde,QAAQ,YACR3F,MAAM,YACN0F,SAAUnH,KAAKjC,MAAMG,OAJzB,mBAQA,mBAAGoD,UAAU,MAAb,gBACA,6EACA,cAAC2F,EAAA,EAAD,CACIC,QAASlH,KAAKsG,WACdc,QAAQ,YACR3F,MAAM,UACN0F,SAAUnH,KAAKjC,MAAMG,OAJzB,4BAYR,OAA+B,IAA3B8B,KAAKrC,MAAMyD,YACJ,KACApB,KAAKjC,MAAMQ,MAGV,cAAC,EAAD,CAAauF,UAAa9D,KAAKjC,MAAM+F,UAAW9B,QAAShC,KAAKrC,MAAMqE,QAAS4D,WAAY5F,KAAKrC,MAAMiI,aAFrG5F,KAAKjC,MAAMG,OAAS2I,EAAeS,M,GAvH/B9J,IAAMoD,WA+H7BsF,EAAS9B,YAAY7G,EACN2I,Q,SCzITqB,E,kDACF,WAAY5J,GAAQ,uCACVA,G,qDAIA,IAAD,OACCqE,EAAUhC,KAAKrC,MAAMqE,QAC3B,OAEI,mCACA,cAAC+E,EAAA,EAAD,CAAMC,IAAI,EAAV,SACC,eAAC3F,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACI,cAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,iCACD,cAACC,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKtG,MAAM6J,SAAS,YAAavD,IAClDpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QAJnB,SAQOgC,EAAKa,aAAatC,GAASnD,UAAUkD,KAAI,SAAC0F,EAAKxF,GAAN,OACxC,cAACC,EAAA,EAAD,CAAuB/B,MAAOsH,EAA9B,SAAqCA,GAArBxF,mB,GAvBZzE,IAAMoD,WAoClC2G,EAAcnD,YAAY7G,EACXgK,QCrCTG,E,kDACF,WAAY/J,GAAQ,uCACVA,G,qDAIA,IAAD,OACCqE,EAAUhC,KAAKrC,MAAMqE,QAC3B,OAEI,mCACA,cAAC+E,EAAA,EAAD,CAAMC,IAAI,EAAV,SACC,eAAC3F,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACG,cAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,kCACA,cAACC,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKtG,MAAM6J,SAAS,SAAUvD,IAC/CpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QAJnB,SAMOgC,EAAKa,aAAatC,GAASlD,OAAOiD,KAAI,SAAC4F,EAAM1F,GAAP,OACrC,cAACC,EAAA,EAAD,CAAuB/B,MAAOwH,EAA9B,SAAsCA,GAAtB1F,mB,GArBhBzE,IAAMoD,WAkC9B8G,EAAUtD,YAAY7G,EACPmK,QCnCTE,E,kDACF,WAAYjK,GAAQ,uCACVA,G,qDAIA,IAAD,OACCqE,EAAUhC,KAAKrC,MAAMqE,QAC3B,OAEI,mCACA,cAAC+E,EAAA,EAAD,CAAMC,IAAI,EAAV,SAEC,eAAC3F,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACI,cAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,qCACD,cAACC,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKtG,MAAM6J,SAAS,QAASvD,IAC9CpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QACftB,MAAOH,KAAK0D,QAAQjF,OAAOM,MAL/B,SAQO0E,EAAKa,aAAatC,GAASjD,MAAMgD,KAAI,SAAC8F,EAAK5F,GAAN,OACpC,cAACC,EAAA,EAAD,CAAuB/B,MAAO0H,EAA9B,SAAqCA,GAArB5F,mB,GAxBhBzE,IAAMoD,WAqC9BgH,EAAUxD,YAAY7G,EACPqK,QCtCTE,E,kDACF,WAAYnK,GAAQ,uCACVA,G,qDAIA,IAAD,OACCqE,EAAUhC,KAAKrC,MAAMqE,QAC3B,OAEI,mCACA,cAAC+E,EAAA,EAAD,CAAMC,IAAI,EAAV,SAEC,eAAC3F,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACI,cAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,8BACD,cAACC,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKtG,MAAM6J,SAAS,UAAWvD,IAChDpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QACftB,MAAOH,KAAK0D,QAAQjF,OAAOO,QAL/B,SAQOyE,EAAKa,aAAatC,GAAShD,QAAQ+C,KAAI,SAACgG,EAAO9F,GAAR,OACtC,cAACC,EAAA,EAAD,CAAuB/B,MAAO4H,EAA9B,SAAuCA,GAAvB9F,mB,GAxBlBzE,IAAMoD,WAqC5BkH,EAAQ1D,YAAY7G,EACLuK,QCdAE,EA1BK,SAACrK,GACjB,IAAMiI,EAAYjI,EAAMiI,WACxB,OACI,qCACA,qCAAQA,EAAR,iBAAkCnC,EAAKkB,WAAWiB,GAAYZ,YAA9D,yBACI,8BACA,eAAC3D,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACI,eAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,kBAAwE+B,EAAKkB,WAAWiB,GAAYZ,YAApG,aACA,cAACrD,EAAA,EAAD,CACAC,SAAU,SAACqC,GAAD,OAAOtG,EAAM6J,SAAS,cAAevD,IAC/CpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QACfwG,SAAS,OALT,SAQKxE,EAAKkB,WAAWiB,GAAY3G,OAAO8C,KAAI,SAACmG,EAAMjG,GAAP,OACxC,cAACC,EAAA,EAAD,CAAuB/B,MAAO+H,EAA9B,SAAsCA,GAAtBjG,iBCbpC,SAASkG,EAAiBC,EAAkBC,GAExC,yDACI,WAAY1K,GAAQ,uCACVA,GAFd,qDAQQ,OAEI,qCACC,cAACyK,EAAD,CAAkBpG,QAAShC,KAAKrC,MAAMqE,QAASwF,SAAWxH,KAAKrC,MAAM6J,SAAU5B,WAAY5F,KAAKrC,MAAMiI,aAC9D,IAAvC5F,KAAK0D,QAAQjF,OAAO4J,GAAQ7H,QAAiB,gDAAmBR,KAAK0D,QAAQjF,OAAO4J,GAAQvB,qBAZ1G,GAA4BtJ,IAAMoD,WAsBtC,IAAM0H,EAAgBH,GC7BN,SAACxK,GACb,OACI,qCACA,qEACI,8BACA,eAAC0D,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACI,cAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,6BACA,cAACC,EAAA,EAAD,CACAC,SAAU,SAACqC,GAAD,OAAOtG,EAAM6J,SAAS,SAAUvD,IAC1CpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QAJf,SAOKgC,EAAKa,aAAa3G,EAAMqE,SAAS/C,OAAO8C,KAAI,SAACmG,EAAMjG,GAAP,OAC7C,cAACC,EAAA,EAAD,CAAuB/B,MAAO+H,EAA9B,SAAsCA,GAAtBjG,kBDcY,UAC1CsG,GAAcJ,EAAiBH,EAAa,eAClDM,EAAclE,YAAc7G,EAC5BgL,GAAYnE,YAAc7G,E,IExBpBiL,G,kDAEF,WAAY7K,EAAO+F,GAAU,IAAD,8BACxB,cAAM/F,IAEDI,MAAQ,CACTW,KAAM,GACNC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,OAAQ,GACRC,MAAM,GACNC,QAAS,GACTC,OAAQ,IAGZ,EAAK+B,WAAa,EAAKA,WAAWnD,KAAhB,gBAClB,EAAK2J,SAAW,EAAKA,SAAS3J,KAAd,gBAfQ,E,+DAqBT4K,EAAWC,GAC1B,IAAIC,EAAO3I,KAAKjC,MAEb2K,EAAUhK,OAASiK,EAAKjK,MACvBsB,KAAK0D,QAAQ5D,aAAa,OAAO6I,EAAKjK,MAEvCgK,EAAU/J,SAAWgK,EAAKhK,QACzBqB,KAAK0D,QAAQ5D,aAAa,SAAS6I,EAAKhK,QAEzC+J,EAAU9J,YAAc+J,EAAK/J,WAC5BoB,KAAK0D,QAAQ5D,aAAa,YAAY6I,EAAK/J,WAE5C8J,EAAU7J,YAAc8J,EAAK9J,WAC5BmB,KAAK0D,QAAQ5D,aAAa,YAAY6I,EAAK9J,WAE5C6J,EAAU5J,SAAW6J,EAAK7J,QACzBkB,KAAK0D,QAAQ5D,aAAa,SAAS6I,EAAK7J,QAEzC4J,EAAU3J,QAAU4J,EAAK5J,OACxBiB,KAAK0D,QAAQ5D,aAAa,QAAQ6I,EAAK5J,OAExC2J,EAAU1J,UAAY2J,EAAK3J,SAC1BgB,KAAK0D,QAAQ5D,aAAa,UAAU6I,EAAK3J,SAE1C0J,EAAUzJ,SAAW0J,EAAK1J,QACzBe,KAAK0D,QAAQ5D,aAAa,SAAS6I,EAAK1J,OAAQ,K,+BAM/CiB,EAAKe,GACV,IAAMwC,EAAOxC,EAAMC,OAAOf,MAC1BH,KAAKC,SAAL,eAAgBC,EAAMuD,GAAOzD,KAAKgB,c,mCAIlC,IAAI2H,EAAO3I,KAAKjC,MACViE,EAAUhC,KAAKrC,MAAMqE,QACV,KAAd2G,EAAKjK,MAA+B,KAAhBiK,EAAKhK,QAAoC,KAAnBgK,EAAK/J,YAC/B,oBAAZoD,GAA6C,eAAZA,GAAwC,yBAAZA,GAAkD,qBAAZA,GAA8C,aAAZA,GAAsC,iBAAZA,GAA0C,eAAZA,GAAwC,aAAZA,GACxNhC,KAAKrC,MAAMwD,YAAY,WAEZ,UAAZa,GAAiD,IAA1B2G,EAAK9J,UAAU2B,QACrCR,KAAKrC,MAAMwD,YAAY,WAEZ,aAAZa,GAAoD,IAA1B2G,EAAK9J,UAAU2B,QAAsD,IAAtCR,KAAK0D,QAAQjF,OAAOQ,OAAOuB,QACnFR,KAAKrC,MAAMwD,YAAY,WAEZ,aAAZa,GAAoD,IAA1B2G,EAAK9J,UAAU2B,QAAuC,IAAvBmI,EAAK7J,OAAO0B,QACpER,KAAKrC,MAAMwD,YAAY,YAEZ,mBAAZa,GAAsD,IAAtB2G,EAAK5J,MAAMyB,QAA4B,eAAZwB,GAAkD,IAAtB2G,EAAK5J,MAAMyB,SACjGR,KAAKrC,MAAMwD,YAAY,WAEZ,eAAZa,GAAoD,IAAxB2G,EAAK3J,QAAQwB,QACxCR,KAAKrC,MAAMwD,YAAY,c,+BAYzB,IAAD,OACCa,EAAUhC,KAAKrC,MAAMqE,QAC3B,OAA+B,IAA3BhC,KAAKrC,MAAMyD,YACH,6BAGR,qCACA,8BAAK,wCAAWY,EAAX,qCACL,uBAAMV,UAAU,WAAWsH,YAAU,EAACC,aAAa,MAAnD,UACI,cAACC,EAAA,EAAD,CAAWlH,SAAU,SAACqC,GAAD,OAAM,EAAKuD,SAAS,OAAQvD,IAAIvC,GAAG,iBAAiBqH,MAAM,YAAY5I,MAAOH,KAAK0D,QAAQjF,OAAOC,OACtH,cAACoK,EAAA,EAAD,CAAWlH,SAAU,SAACqC,GAAD,OAAM,EAAKuD,SAAS,SAAUvD,IAAIvC,GAAG,kBAAkBqH,MAAM,cAAc5I,MAAOH,KAAK0D,QAAQjF,OAAOE,SAC3H,eAAC0C,EAAA,EAAD,CAAaC,UAAU,UAAvB,UACC,cAACC,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,iCACD,cAACC,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKuD,SAAS,YAAavD,IAC5CpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QAJnB,SAQKgC,EAAKa,aAAatC,GAASpD,UAAUmD,KAAI,SAACiH,EAAM/G,GAAP,OACtC,cAACC,EAAA,EAAD,CAAuB/B,MAAO6I,EAA9B,SAAsCA,GAAtB/G,SAGC,UAAvBjC,KAAKrC,MAAMqE,SAA8C,aAAvBhC,KAAKrC,MAAMqE,SAAiD,aAAvBhC,KAAKrC,MAAMqE,UAA2B,cAAC,EAAD,CAAewF,SAAWxH,KAAKwH,SAAUxF,QAAWhC,KAAKrC,MAAMqE,UACrJ,aAAvBhC,KAAKrC,MAAMqE,SAA2B,cAAC,EAAD,CAAWwF,SAAWxH,KAAKwH,SAAUxF,QAAWhC,KAAKrC,MAAMqE,WAC1E,mBAAvBhC,KAAKrC,MAAMqE,SAAuD,eAAvBhC,KAAKrC,MAAMqE,UAA6B,cAAC,EAAD,CAAWwF,SAAWxH,KAAKwH,SAAUxF,QAAWhC,KAAKrC,MAAMqE,UACvH,eAAvBhC,KAAKrC,MAAMqE,SAA6B,cAAC,EAAD,CAASwF,SAAWxH,KAAKwH,SAAUxF,QAAWhC,KAAKrC,MAAMqE,gBAI1E,aAAvBhC,KAAKrC,MAAMqE,SAA2B,cAACsG,EAAD,CAAed,SAAWxH,KAAKwH,SAAUxF,QAAWhC,KAAKrC,MAAMqE,UAC7F,UAAZA,GACE,qCAAQA,EAAR,4BAAyC,uBAAMyB,EAAKa,aAAatC,GAASyC,YAAYqC,qB,GA7H5EtJ,IAAMoD,WAwIhC4H,GAAYpE,YAAY7G,EACTiL,UCxIA,GAdK,SAACzI,GACjB,IAAIR,EAAO,GAUX,OATDQ,EAAOkJ,SAAQ,SAAA9I,GACV,IAAI,IAAIqC,GAAK,EAAGO,EAAE,EAAGP,EAAI,GAAIA,IAAM,CAC/B,GAAGrC,GAAS4C,EAAG,CACXxD,EAAKkB,KAAK+B,GACV,MAEJO,GAAK,MAGNxD,G,uCC6CI2J,G,kDA9CX,WAAYvL,GAAQ,uCACVA,G,qDAOA,IAAD,OACCiI,EAAa5F,KAAKrC,MAAMiI,WACZnC,EAAKkB,WAAWiB,GAAYX,MA0B9C,OAxBI,qCACI,iDACCxB,EAAKkB,WAAWiB,GAAYX,MAAMlD,KAAI,SAACuD,EAAMrD,GAC1C,MAAmB,kBAATqD,EAEF,0CAAaA,EAAb,wCAII,eAACjE,EAAA,EAAD,CAAa8H,UAAU,WAAvB,UACI,cAACC,GAAA,EAAD,CAAWD,UAAU,SAArB,kCACA,cAACE,GAAA,EAAD,CAAYC,aAAW,YAAY5K,KAAI,mBAAcuD,GAASL,SAAU,SAACqC,GAAD,OAAM,EAAKtG,MAAM6J,SAAX,eAA4BvF,GAAQgC,IAAlH,SACKqB,EAAKvD,KAAI,SAACwH,EAAG/G,GAAJ,OACN,cAACgH,GAAA,EAAD,CAA0BrJ,MAAOoJ,EAAIE,QAAS,cAACC,GAAA,EAAD,IAAWX,MAAOQ,GAAzC/G,qB,GA1B/ChF,IAAMoD,WCHpB+I,G,kDACF,WAAYhM,GAAQ,uCACVA,G,qDAGA,IAAD,OACCiI,EAAa5F,KAAKrC,MAAMiI,WAC9B,OACI,sBAAKtE,UAAU,mBAAf,UACmB,SAAfsE,GAAyB,oFACzB,eAACvE,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACI,cAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,SAAkF,SAAfkE,EAAwB,yBAA2B,wBACtH,cAACjE,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKtG,MAAM6J,SAAS,cAAevD,IACpDpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QAJnB,SAQKgC,EAAKkB,WAAWiB,GAAYhG,YAAYmC,KAAI,SAAC8F,EAAK5F,GAAN,OAC7C,cAACC,EAAA,EAAD,CAAuB/B,MAAO0H,EAA9B,SAAqCA,GAArB5F,WAIqB,IAA3CjC,KAAK0D,QAAQjF,OAAOmB,YAAYY,QAAiB,gDAAmBR,KAAK0D,QAAQjF,OAAOmB,YAAYkH,qB,GAzB5FtJ,IAAMoD,WAgChC+I,GAAYvF,YAAY7G,EACToM,UChCTC,G,kDACF,WAAYjM,GAAQ,uCACVA,G,qDAIA,IAAD,OACC2B,EAAOU,KAAKrC,MAAMiI,WACxB,OACI,mCACA,sBAAKtE,UAAU,cAAf,UACI,qCAAQhC,EAAR,iBAA4BmE,EAAKkB,WAAWrF,GAAM4F,YAAlD,aACA,eAAC7D,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACI,eAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,kBAAwE+B,EAAKkB,WAAWrF,GAAM4F,YAA9F,qBACA,cAACvD,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKtG,MAAM6J,SAAS,cAAevD,IACpDpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QAJnB,SAMKgC,EAAKkB,WAAWrF,GAAMI,YAAYqC,KAAI,SAAC4F,EAAM1F,GAAP,OACnC,cAACC,EAAA,EAAD,CAAuB/B,MAAOwH,EAA9B,SAAsCA,GAAtB1F,WAIiB,IAA3CjC,KAAK0D,QAAQjF,OAAOiB,YAAYc,QAAiB,gDAAmBR,KAAK0D,QAAQjF,OAAOiB,YAAYoH,uB,GAzB5FtJ,IAAMoD,WAmChCgJ,GAAYxF,YAAY7G,EACTqM,UCnCTC,G,kDACF,WAAYlM,GAAQ,uCACVA,G,qDAIA,IAAD,OACC2B,EAAOU,KAAKrC,MAAMiI,WACxB,OAEI,mCACA,sBAAKtE,UAAU,cAAf,UACI,qCAAQhC,EAAR,iBAA4BmE,EAAKkB,WAAWrF,GAAM6F,YAAlD,aACH,eAAC9D,EAAA,EAAD,CAAaC,UAAU,UAAUE,MAAO,CAAC6F,UAAW,QAApD,UACG,eAAC9F,EAAA,EAAD,CAAYC,MAAO,CAACC,MAAO,QAASC,GAAG,2BAAvC,kBAAwE+B,EAAKkB,WAAWrF,GAAM6F,YAA9F,aACA,cAACxD,EAAA,EAAD,CACIC,SAAU,SAACqC,GAAD,OAAO,EAAKtG,MAAM6J,SAAS,SAAUvD,IAC/CpC,QAAQ,2BACRH,GAAG,qBACHF,MAAO,CAACC,MAAO,QAJnB,SAMOgC,EAAKkB,WAAWrF,GAAME,OAAOuC,KAAI,SAAC+H,EAAM7H,GAAP,OAChC,cAACC,EAAA,EAAD,CAAuB/B,MAAO2J,EAA9B,SAAsCA,GAAtB7H,WAIY,IAAtCjC,KAAK0D,QAAQjF,OAAOe,OAAOgB,QAAiB,gDAAmBR,KAAK0D,QAAQjF,OAAOe,OAAOsH,uB,GA1B/EtJ,IAAMoD,WAoC/BiJ,GAAWzF,YAAY7G,EACRsM,UC/BTE,G,kDAEF,WAAYpM,GAAQ,IAAD,8BACf,cAAMA,IACDI,MAAQ,CACT0B,YAAa,GACbG,YAAa,GACbF,YAAa,GACbF,OAAQ,IAGZ,EAAKgI,SAAW,EAAKA,SAAS3J,KAAd,gBAChB,EAAKmD,WAAa,EAAKA,WAAWnD,KAAhB,gBAVH,E,+DAaA4K,EAAWC,GAC1B,IAAIsB,EAAMhK,KAAKjC,MACT6H,EAAa5F,KAAKrC,MAAMiI,WAC9B,GAAG6C,EAAUrH,cAAgBpB,KAAKrC,MAAMyD,YAAa,CACrD,IAAM7B,EAAO0K,GAA+BjK,KAAKrC,MAAMuM,QACvDlK,KAAK0D,QAAQ5D,aAAa,OAAQP,GAE/BmJ,EAAUjJ,cAAgBuK,EAAIvK,aAC7BO,KAAK0D,QAAQ5D,aAAa,cAAekK,EAAIvK,YAAagE,EAAKkB,WAAWiB,GAAYZ,YAAc,GAErG0D,EAAUxJ,SAAW8K,EAAI9K,QACxBc,KAAK0D,QAAQ5D,aAAa,SAAUkK,EAAI9K,QAEzCwJ,EAAUvJ,SAAW6K,EAAI7K,QACxBa,KAAK0D,QAAQ5D,aAAa,SAAUkK,EAAI7K,QAEzCuJ,EAAUtJ,SAAW4K,EAAI5K,QACxBY,KAAK0D,QAAQ5D,aAAa,SAAUkK,EAAI5K,QAEzCsJ,EAAUrJ,SAAW2K,EAAI3K,QACxBW,KAAK0D,QAAQ5D,aAAa,SAAUkK,EAAI3K,QAEzCqJ,EAAU9I,cAAgBoK,EAAIpK,aAC7BI,KAAK0D,QAAQ5D,aAAa,cAAekK,EAAIpK,YAA6B,SAAfgG,EAAyB,EAAI,GAEzF8C,EAAUhJ,cAAgBsK,EAAItK,aAC7BM,KAAK0D,QAAQ5D,aAAa,cAAekK,EAAItK,YAAa+D,EAAKkB,WAAWiB,GAAYV,YAAc,GAErGwD,EAAUlJ,SAAWwK,EAAIxK,QACxBQ,KAAK0D,QAAQ5D,aAAa,SAAUkK,EAAIxK,OAAQiE,EAAKkB,WAAWiB,GAAYT,YAAc,K,+BAKzFjF,EAAKe,GACV,IAAMwC,EAAOxC,EAAMC,OAAOf,MAC1BgK,QAAQC,IAAI3G,GACZzD,KAAKC,SAAL,eAAgBC,EAAMuD,M,mCAItB,IAAIuG,EAAG,eAAOhK,KAAK0D,QAAQjF,QACrBa,EAAOU,KAAKrC,MAAMiI,WAGM,IAA3BoE,EAAIvK,YAAYe,QAAsC,IAAtBwJ,EAAI9K,OAAOsB,QAAsC,IAAtBwJ,EAAI7K,OAAOqB,SACzD,cAATlB,GACCU,KAAKrC,MAAMwD,YAAY,WAEf,SAAT7B,GAAkC,IAAf0K,EAAI5K,QAAoC,IAApB4K,EAAIpK,aAAoC,IAAfoK,EAAIxK,QAAoC,IAApBwK,EAAItK,aACvFM,KAAKrC,MAAMwD,YAAY,c,+BAS/BgJ,QAAQC,IAAIpK,KAAKjC,OACjBoM,QAAQC,IAAIpK,KAAK0D,QAAQjF,QACzB0L,QAAQC,IAAIpK,KAAKrC,MAAMyD,aACvB,IAAMwE,EAAa5F,KAAKrC,MAAMiI,WAG9B,OAA+B,IAA3B5F,KAAKrC,MAAMyD,YACH,6BAGR,mCACA,sBAAKE,UAAU,WAAf,UAA0B,wCAAWtB,KAAK0D,QAAQjF,OAAOC,KAA/B,OAC1B,qCAAQkH,EAAR,OACA,8BAAG,mEAAH,IAAmDnC,EAAKkB,WAAWiB,GAAYnB,YAAYqC,cAC3F,kEACI,+BACI,+BAAI,6CAAJ,IAA8BrD,EAAKkB,WAAWiB,GAAYd,MAAMgC,cAChE,+BAAI,6CAAJ,IAA8BrD,EAAKkB,WAAWiB,GAAYlB,QAAQoC,cACjD,SAAflB,GAAwC,SAAfA,GAAuE,IAA7CnC,EAAKkB,WAAWiB,GAAY7G,MAAMyB,OACvF,8BAAG,oEAAH,IAAoDiD,EAAKkB,WAAWiB,GAAY7G,MAAM+H,cACpF,gCAIV,kDAAqBrD,EAAKkB,WAAWiB,GAAYhB,YACjD,8DAAiCnB,EAAKkB,WAAWiB,GAAYf,WAAa7E,KAAK0D,QAAQjF,OAAOc,KAAK,MAEnG,cAACgJ,GAAD,CAAa3C,WAAY5F,KAAKrC,MAAMiI,WAAY4B,SAAUxH,KAAKwH,WAC/D,cAAC,GAAD,CAAO5B,WAAY5F,KAAKrC,MAAMiI,WAAY4B,SAAUxH,KAAKwH,YACxC,SAAf5B,GAAwC,SAAfA,IAA0B,cAAC,GAAD,CAAaA,WAAYA,EAAY4B,SAAUxH,KAAKwH,WACxF,SAAf5B,GAA0B,cAAC,GAAD,CAAaA,WAAYA,EAAY4B,SAAUxH,KAAKwH,WAC/D,SAAf5B,GAA0B,cAAC,GAAD,CAAYA,WAAYA,EAAY4B,SAAUxH,KAAKwH,oB,GAzGnEhK,IAAMoD,WAkH9BmJ,GAAU3F,YAAY7G,EACPwM,UCvHTM,G,kDACJ,WAAY1M,GAAQ,IAAD,8BACjB,cAAMA,IAEDI,MAAQ,CACXqD,YAAa,EACbkJ,QAAQ,EACR5L,KAAM,GACNsD,QAAS,GACT4D,WAAY,IAGd,EAAK2E,eAAiB,EAAKA,eAAe1M,KAApB,gBACtB,EAAK2M,KAAO,EAAKA,KAAK3M,KAAV,gBACZ,EAAK4M,KAAO,EAAKA,KAAK5M,KAAV,gBACZ,EAAK6M,aAAe,EAAKA,aAAa7M,KAAlB,gBACpB,EAAK8M,aAAe,EAAKA,aAAa9M,KAAlB,gBAfH,E,2DAkBLqC,EAAKC,GACjBH,KAAKC,SAAL,eAAgBC,EAAMC,M,mCAEZyK,GACM,YAAdA,GAAyB5K,KAAKC,SAAS,CAACqK,QAAO,M,6BAIjD,IAAIlJ,EAAcpB,KAAKjC,MAAMqD,YACV,IAAhBA,GAAmBpB,KAAK0D,QAAQ7D,OAAO,CAAC5B,QAAS+B,KAAK0D,QAAQ1F,cAAeE,OAAQ8B,KAAK0D,QAAQvF,cAAeE,cAAc,EAAMD,YAAa,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,MAErKgD,EAAcA,GAAe,EAAG,EAAGA,EAAc,EACjDpB,KAAKC,SAAS,CACZmB,YAAaA,EACbkJ,QAAQ,M,6BAMV,IAAIlJ,EAAcpB,KAAKjC,MAAMqD,YAE7BA,EAAcA,GAAe,EAAI,EAAGA,EAAc,EAClDpB,KAAKC,SAAS,CACZmB,YAAaA,EACbkJ,QAAQ,GACRtK,KAAK2K,gB,qCAIqB,IAA3B3K,KAAKjC,MAAMqD,aAA+C,KAA1BpB,KAAKjC,MAAM6H,YAAmB5F,KAAKC,SAAS,CAACqK,QAAQ,IAC1D,IAA3BtK,KAAKjC,MAAMqD,aAAqBpB,KAAK0D,QAAQnF,OAAOyB,KAAKC,SAAS,CAACqK,QAAO,M,+BAI3E,IAAIlJ,EAAcpB,KAAKjC,MAAMqD,YACvByJ,EACJ,cAAC5D,EAAA,EAAD,CAAQ3F,UAAU,WAAWE,MAAO,CAACC,MAAM,OAAQqJ,YAAa,QAC9DC,KAAK,QACL3D,QAAQ,WACRD,SAAUnH,KAAK0D,QAAQnF,OAAyB,IAAhB6C,EAChC8F,QAASlH,KAAKyK,KAJhB,sBASIO,EACJ,cAAC/D,EAAA,EAAD,CAAQ3F,UAAU,OAAOE,MAAO,CAACC,MAAM,OAAQqJ,YAAa,QAC5D1D,QAAQ,WACR2D,KAAK,QACL7D,QAASlH,KAAKwK,KACdrD,SAAUnH,KAAKjC,MAAMuM,OAJrB,kBAWF,OACE,mCACE,sBAAKhJ,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAK2J,IAAKC,EAAM5J,UAAU,WAAW6J,IAAI,SACzC,6DAEF,iCAEE,cAAC,EAAD,CAAUhK,YAAanB,KAAK0K,aAActJ,YAAapB,KAAKjC,MAAMqD,YAAaJ,WAAchB,KAAKuK,iBAClG,cAAC,EAAD,CAASpJ,YAAanB,KAAK0K,aAActJ,YAAapB,KAAKjC,MAAMqD,YAAaJ,WAAchB,KAAKuK,iBACjG,cAAC,EAAD,CAAUpJ,YAAanB,KAAK0K,aAAc1I,QAAShC,KAAKjC,MAAMiE,QAAS4D,WAAY5F,KAAKjC,MAAM6H,WAAYxE,YAAapB,KAAKjC,MAAMqD,cAClI,cAAC,GAAD,CAAaD,YAAanB,KAAK0K,aAAcJ,OAAQtK,KAAKjC,MAAMuM,OAAQtI,QAAShC,KAAKjC,MAAMiE,QAASZ,YAAapB,KAAKjC,MAAMqD,cAC7H,cAAC,GAAD,CAAW8I,OAAQlK,KAAK0D,QAAQpF,YAAasH,WAAY5F,KAAKjC,MAAM6H,WAAYzE,YAAanB,KAAK0K,aAAcJ,OAAQtK,KAAKjC,MAAMuM,OAAQtI,QAAShC,KAAKjC,MAAMiE,QAASZ,YAAapB,KAAKjC,MAAMqD,cAChM,sBAAKE,UAAU,UAAf,UACmB,IAAhBF,GAAqByJ,EACrBzJ,EAAc,GAAK4J,iB,GA7FVxN,IAAMoD,WAsG9ByJ,GAAUjG,YAAY7G,EACP8M,UC1FAe,G,kDAhBb,WAAYzN,GAAQ,uCACZA,G,qDAON,OACE,cAAC,EAAD,UACE,cAAC,GAAD,U,GAXUH,IAAMoD,WCITyK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.b47bdb2a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst DataContext = React.createContext();\r\n\r\nexport default DataContext;\r\n\r\n","import React from 'react'\r\nimport DataContext from './DataContext'\r\n\r\nclass DataProvider extends React.Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.updateState = this.updateState.bind(this);\r\n        this.addPersonData = this.addPersonData.bind(this);\r\n\t\tthis.state = {\r\n           defaultStatic : ['empty',15, 14, 13, 12, 10, 8],\r\n           default : ['empty',15, 14, 13, 12, 10, 8],\r\n           rolled: [],\r\n           defaultRolled: [],\r\n           actualState: ['','','','','',''],\r\n\t\t   notConfirmed: true,\r\n           finalValues: [],\r\n           final: false,\r\n           step_four: false,\r\n            person: {\r\n                name: '',\r\n                gender: '',\r\n                alignment: '',\r\n                languages: [],\r\n                tricks: [],\r\n                tools:[],\r\n                dragons: [],\r\n                skills: [],\r\n                equip1: [],\r\n                equip2: [],\r\n                equip3: [],\r\n                equip4: [],\r\n                prof: [],\r\n                mods: [],\r\n                spells: [], \r\n                classSkills: [],\r\n                classTricks: [],\r\n                classSpells: [],\r\n                instruments: [],\r\n            },\r\n            update: this.updateState,\r\n            updatePerson: this.addPersonData,\r\n\t\t}\r\n\t}\r\n\r\n\tupdateState(values) {\r\n\t\tthis.setState(values)\r\n\t}\r\n\r\n    addPersonData(key, value, pick) {\r\n        let personData = {...this.state.person};\r\n        // let filled = personData.filled;\r\n        // filled += 1;\r\n        // personData.filled = filled;\r\n        if (key === 'languages' || key === 'tricks' || key === 'tools' || key === 'dragons' || key === 'equip1' || key === 'equip2' || key === 'equip3' || key === 'equip4'  ) {\r\n            let goodKey = personData[key];\r\n            goodKey.splice(0,1,value);\r\n        } else if (key === 'skills' || key === 'classSkills' || key === 'instruments' || key === 'classTricks' || key === 'spells') {\r\n            let goodKey = personData[key];\r\n            if (value === 'empty') { goodKey.splice(0, goodKey.length)\r\n            } else if(goodKey.length <= pick) {\r\n                goodKey.push(value); \r\n            } else {\r\n                goodKey.splice(0,1,value);\r\n            }\r\n\r\n        } else {\r\n            personData[key] = value;\r\n        }\r\n      \r\n        this.setState({person: personData});\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DataContext.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</DataContext.Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default DataProvider","export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    SPECIES = ['Human', 'High Elf', 'Forest Elf', 'Drow - Dark Elf', 'Mountain Dwarf', 'Hill Dwarf','Halfling - Lightfoot', 'Halfling - Stout','Tiefling','Dragonborn', 'Forest Gnome', 'Rock Gnome', 'Half-Orc','Half-Elf'];\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('species',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.SPECIES.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    CLASSES = ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.CLASSES.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport DataContext from './contexts/DataContext';\r\n\r\n\r\nclass AbilityCells extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            default: props.default,\r\n            features: props.features,\r\n        }\r\n\r\n        this.changeValue = this.changeValue.bind(this);\r\n    }\r\n\r\n\r\n    changeValue(index, event) {\r\n        let data = event.target.value;\r\n        let actualState = [...this.context.actualState];\r\n        let copy;\r\n        if(this.props.defaultPicked) {\r\n            copy = [...this.context.default];\r\n        } else { \r\n            copy = [...this.context.rolled];\r\n        }\r\n        for( let i = 0; i < copy.length; i++){ \r\n            if ( copy[i] === data && data === parseInt(data, 10)) { \r\n                copy.splice(i, 1); \r\n                break;\r\n            }\r\n        }\r\n        if(actualState[index] === parseInt(actualState[index], 10)) copy.push(actualState[index])\r\n            actualState[index] = data;\r\n        if (actualState.every(value => value === parseInt(value, 10))) {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: false, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: false, actualState});\r\n        } else {\r\n            if(this.props.defaultPicked) this.context.update({default: copy, notConfirmed: true, actualState});\r\n                this.context.update({rolled: copy, notConfirmed: true, actualState});\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {     \r\n        return (\r\n            <>\r\n\r\n                {this.props.abilities.map((ability, index) => (\r\n                    <TableCell key={index}>\r\n                        <FormControl >\r\n                            <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                            <Select \r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                style={{color: \"#fff\"}}\r\n                                onChange={(e) => this.changeValue(index,e)}\r\n                                \r\n                            >\r\n                                \r\n                                {\r\n                                this.props.defaultPicked ?\r\n                                this.context.default.map((def,index) => (\r\n                                    <MenuItem className=\"option\" key={index} value={def}>{def}</MenuItem>\r\n                                )) :\r\n                                this.context.rolled.map((feature,index) => (\r\n                                    <MenuItem  className=\"option\" key={index} value={feature}>{feature}</MenuItem>\r\n                                )) \r\n                                }\r\n                            </Select> \r\n                        </FormControl>        \r\n                    </TableCell>\r\n                ))}\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nAbilityCells.contextType=DataContext;\r\nexport default AbilityCells; ","export const data = {\r\n    speciesBonus: {\r\n        'Human': [1, 1, 1, 1, 1, 1],\r\n        'High Elf': ['', 2,'',1,'',''],\r\n        'Forest Elf': ['',2, '', '', 1, ''],\r\n        'Drow - Dark Elf': ['',2,'','','',1],\r\n        'Mountain Dwarf': [2,'' ,2,'','',''],\r\n        'Hill Dwarf': ['','',2,'',1,''],\r\n        'Halfling - Lightfoot': ['',2,'','','',1],\r\n        'Halfling - Stout': ['', 2, 1, '', '','' ],\r\n        'Forest Gnome': ['',1,'',2, '',''],\r\n        'Rock Gnome': ['','',1,2,'',''],\r\n        'Tiefling': ['','','',1, '',2],\r\n        'Dragonborn': [2, '','','','',1],\r\n        'Half-Elf': ['',2,'','','',2],\r\n        'Half-Orc': [2, '',1, '','',''],\r\n    },\r\n    species_char : {\r\n        'Human': {\r\n            gender: ['female','male'],\r\n            alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n            speed: '9m',\r\n            basic_languages: 'Common',\r\n            languages: ['Elvish','Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n            proficiency: [],\r\n        },\r\n        'Forest Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '10,5m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Mask of the Wild', 'Martial Arts'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n         },\r\n         'High Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral'],\r\n             speed: '9m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Darkvision - 18m','Fey Ancestry', 'Trance','Magic Trick', 'Martial Arts'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             weapons: ['shortbow', 'longbow', 'long sword', 'short sword'],\r\n             tricks: ['Dancing Lights','Light', 'Mage Hand', 'Message','Mending','Resistance','Acid Splash','Ray of Frost','Fire Bolt','Minor Illusion','Shocking Grasp','True Strike','Poison Spray','Prestidigitation','Chill Touch','Friendship']\r\n         },\r\n         'Drow - Dark Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Elvish & Common',\r\n             proficiency: ['Superior Darkvision - 36m','Fey Ancestry', 'Trance','Sunlight Sensitivity','Drow Magic', 'Drow Weapon Training'],\r\n             weapons: ['rapier', 'hand crossbow', 'short sword'],\r\n             tricks: ['Dancing Lights'],\r\n         },\r\n         'Mountain Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Dwarvish & Common',\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Armor Training', 'Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer','light armor','medium armor'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n         },\r\n         'Hill Dwarf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Dwarvish & Common',\r\n             proficiency: ['Darkvision - 18m','Dwarven Resilience', 'Dwarven Combat Training','Stonecunning', 'Dwarven Toughness','Tool Proficiency'],\r\n             weapons: ['battleaxe','handaxe','light hammer','warhammer'],\r\n             tools: ['smith’s tools','brewer’s supplies','mason’s tools']\r\n         },\r\n         'Halfling - Lightfoot': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Halfling & Common',\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Naturally Stealthy'],\r\n         },\r\n         'Halfling - Stout': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Halfling & Common',\r\n             proficiency: ['Lucky', 'Brave','Halfling Nimbleness','Stout Resilience'],\r\n         },\r\n         'Tiefling': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Infernal & Common',\r\n             proficiency: ['Darkvision - 18m', 'Hellish Resistance','Infernal Legacy','Stout Resilience'],\r\n             tricks: ['thaumaturgy'],\r\n         },\r\n         'Dragonborn': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Draconic & Common',\r\n             proficiency: ['Draconic Ancestry', 'Breath Weapon','Damage Resistance'],\r\n             dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n         },\r\n         'Forest Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Gnomish & Common',\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Natural Illusionist','Speak with Small Beasts'],\r\n             tricks: ['Minor Illusion']\r\n         },\r\n         'Rock Gnome': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '7,5m',\r\n             basic_languages: 'Gnomish & Common',\r\n             proficiency: ['Darkvision - 18m', 'Gnome Cunning','Artificer’s Lore','Tinker'],\r\n             tools: ['tinker`s tools']\r\n         },\r\n         'Half-Orc': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Orc & Common',\r\n             proficiency: ['Darkvision - 18m', 'Menacing','Relentless Endurance','Savage Attacks'],\r\n             skills: ['Persuasion']\r\n         },\r\n         'Half-Elf': {\r\n             gender: ['female','male'],\r\n             alignment: ['Lawful good','Neutral good','Chaotic good','Lawful neutral','(True) neutral','Chaotic neutral','Lawful evil','Neutral evil','Chaotic evil'],\r\n             speed: '9m',\r\n             basic_languages: 'Orc & Common',\r\n             proficiency: ['Darkvision - 18m', 'Fey Ancestry','Skill Versatility','Savage Attacks'],\r\n             languages: ['Dwarvish','Giant','Gnomish','Goblin','Halfling','Orc','Draconic', 'Infernal'],\r\n             skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion']\r\n         }\r\n    },\r\n    class_char: {\r\n        'Barbarian': {\r\n            hit_dice: '1k12',\r\n            hit_points: 12,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows','longswords','rapiers','shortswords'],\r\n            saving_throws: ['Dexterity', 'Charisma'],\r\n            skills_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Intimidation', 'Nature', 'Perception', 'Survival'],\r\n            equip: ['An explorer’s pack and four javelins', ['(a) a greataxe', '(b) any martial melee weapon'], ['(a) two handaxes', '(b) any simple weapon']],\r\n            proficiency: ['Rage', 'Unarmored Defense']\r\n        },\r\n        'Bard': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 3,\r\n            tricks_pick: 2,\r\n            spells_pick: 4,\r\n            skills: ['empty','Athletics','Acrobatics','Sleight of Hand','Stealth','Arcana','History','Investigation','Nature','Religion','Animal Handling','Insight','Medicine','Perception','Survival','Deception','Intimidation','Performance','Persuasion'],\r\n            instruments: ['empty','Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            equip: ['Leather armor and a dagger', ['(a) a rapier', '(b) a longsword', '(c) any simple weapon'], ['(a) a diplomat’s pack', '(b) an entertainer’s pack'], ['(a) a lute', '(b) any other musical instrument']],\r\n            proficiency: ['Spellcasting','Bardic Inspiration'],\r\n            classTricks: ['empty','Dancing Lights','Friends','Light','Mage Hand','Message','Minor Illusion','Prestidigitation','Vicious Mockery','True Strike','Mending','Blade Ward'],\r\n            spells: ['empty','Animal Friendship','Bane','Charm Person','Comprehend Languages','Cure Wounds','Detect Magic','Disguise Self','Dissonant Whispers','Distort Value','Earth Tremor','Faerie Fire','Feather Fall','Healing Word','Heroism','Hideous Laughter','Identify','Illusory Script','Longstrider','Silent Image','Sleep','Speak with Animals','Tasha`s Hideous Laughter','Thunderwave','Unseen Servant'],\r\n        },\r\n        'Warlock': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            tools: [],\r\n            skills: ['empty','Arcana', 'Deception', 'History', 'Intimidation', 'Investigation', 'Nature', 'Religion'],\r\n            equip: ['Leather armor, any simple weapon, and two daggers', ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a component pouch', '(b) an arcane focus'], ['(a) a scholar’s pack', '(b) a dungeoneer’s pack']],\r\n            proficiency: ['Otherworldly Patron','Pact Magic']\r\n        },\r\n        'Druid': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['Clubs', 'daggers', 'darts', 'javelins', 'maces', 'quarterstaffs', 'scimitars', 'sickles', 'slings', 'spears'],\r\n            saving_throws: ['Wisdom', 'Intelligence'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Arcana', 'Animal Handling', 'Insight', 'Medicine', 'Nature', 'Perception', 'Religion', 'Survival'],\r\n            tools: ['Herbalism kit'],\r\n            equip: ['Leather armor, an explorer’s pack, and a druidic focus', ['(a) a wooden shield', '(b) any simple weapon'], ['(a) a scimitar', '(b) any simple melee weapon']],\r\n            proficiency: ['Druidic','Spellcasting']\r\n        },\r\n        'Cleric': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            skills: ['empty','History', 'Insight', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['A shield and a holy symbol', ['(a) a mace', 'a warhammer (if proficient)'], ['(a) scale mail', '(b) leather armor', '(c) chain mail (if proficient)'], ['(a) a light crossbow and 20 bolts', '(b) any simple weapon'], ['(a) a priest’s pack', '(b) an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Divine Domain']\r\n        },\r\n        'Rogue': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: ['light armor'],\r\n            weapons: ['simple weapons','hand crossbows', 'longswords', 'rapiers', 'shortswords'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 4,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'Deception', 'Insight', 'Intimidation', 'Investigation', 'Perception', 'Performance', 'Persuasion', 'Sleight of Hand','Stealth'],\r\n            tools: ['Thieves’ tools'],\r\n            equip: ['Leather armor, two daggers, and thieves’ tools', ['(a) a rapier', 'a shortsword'], ['(a)a shortbow and quiver of 20 arrows', '(b) a shortsword'], ['(a) a burglar’s pack', '(b) a dungeoneer’s pack','(c) an explorer’s pack']],\r\n            proficiency: ['Expertise','Sneak Attack','Thieves’ Cant']\r\n        },\r\n        'Ranger': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['light armor','medium armor','shields'],\r\n            weapons: ['simple weapons','martial weapons'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 3,\r\n            skills: ['empty','Animal Handling', 'Athletics', 'Insight', 'Investigation', 'Nature', 'Perception', 'Stealth'],\r\n            tools: [],\r\n            equip: ['A longbow and a quiver of 20 arrows', ['(a) scale mail', 'leather armor'], ['(a)two shortswords', '(b) two simple melee weapons'], ['(a) a dungeoneer’s pack', '(b) an explorer’s pack']],\r\n            proficiency: ['Favored Enemy','Natural Explorer']\r\n        },\r\n        'Wizard': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Intelligence', 'Wisdom'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Arcana', 'History', 'Insight', 'Investigation', 'Medicine', 'Religion'],\r\n            tools: [],\r\n            equip: ['A spellbook', ['a quarterstaff', 'a dagger'], ['a component pouch', 'an arcane focus'], ['a scholar’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Arcane Recovery']\r\n        },\r\n        'Monk': {\r\n            hit_dice: '1k8',\r\n            hit_points: 8,\r\n            armor: [],\r\n            weapons: ['Simple weapons, shortswords'],\r\n            saving_throws: ['Strength', 'Dexterity'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Athletics', 'History', 'Insight', 'Religion','Stealth'],\r\n            instruments: ['empty','Bagpipes','Drum','Dulcimer','Flute','Lute','Lyre','Horn','Pan flute','Shawm','Viol'],\r\n            tools: ['empty','Alchemist’s supplies','Tinker’s tools','Glassblower’s tools','Jeweler’s tools','Brewer’s supplies','Smith’s tools','Cartographer’s tools','Mason’s tools','Calligrapher`s Supplies','Painter’s supplies','Potter’s tools','Carpenter’s tools','Cobbler’s tools','Leatherworker’s tools','Cook’s utensils','Weaver’s tools','Woodcarver’s tools'],\r\n            equip: ['10 darts', ['a shortsword', 'simple weapon'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Unarmored Defense','Martial Arts']\r\n        },\r\n        'Paladin': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armor', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Wisdom', 'Charisma'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Athletics', 'Insight', 'Intimidation', 'Medicine', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Chain mail and a holy symbol', ['a martial weapon and a shield', 'two martial weapons'], ['five javelins', 'any simple melee weapon'], ['a priest’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Divine Sense','Lay on Hands']\r\n        },\r\n        'Fighter': {\r\n            hit_dice: '1k10',\r\n            hit_points: 10,\r\n            armor: ['All armor', 'All shields'],\r\n            weapons: ['Simple weapons, martial weapons'],\r\n            saving_throws: ['Strength', 'Constitution'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Acrobatics', 'Animal Handling', 'Athletics', 'History', 'Insight', 'Intimidation', 'Perception', 'Survival'],\r\n            tools: [],\r\n            equip: [['chain mail', 'leather armor, longbow, and 20 arrows'], ['a martial weapon and a shield', 'two martial weapons'], ['a light crossbow and 20 bolts', 'two handaxes'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Fighting Style','Second Wind'],\r\n            fight_styles: ['Archery', 'Defense','Dueling','Great Weapon Fighting','Protection','Two-Weapon Fighting'],\r\n        },\r\n        'Sorcerer': {\r\n            hit_dice: '1k6',\r\n            hit_points: 6,\r\n            armor: [],\r\n            weapons: ['Daggers', 'darts', 'slings', 'quarterstaffs', 'light crossbows'],\r\n            saving_throws: ['Charisma', 'Constitution'],\r\n            skills_pick: 2,\r\n            skills: ['empty','Arcana', 'Deception', 'Insight', 'Intimidation', 'Persuasion', 'Religion'],\r\n            tools: [],\r\n            equip: ['Two daggers', ['a light crossbow and 20 bolts', 'any simple weapon'], ['a component pouch', 'an arcane focus'], ['a dungeoneer’s pack', 'an explorer’s pack']],\r\n            proficiency: ['Spellcasting','Sorcerous Origin - Draconic Bloodline', 'Sorcerous Origin - Wild Magic'],\r\n            dragons: ['Black','Blue','Brass','Bronze','Copper','Gold','Green','Red','Silver','White'],\r\n        },\r\n    },\r\n}\r\n\r\nexport default data;","import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...data.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n       values,\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","import React, {useContext} from 'react';\r\nimport DataContext from './contexts/DataContext'; \r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\n\r\nfunction FinalValues(props) {\r\n    const data = useContext(DataContext);\r\n\r\n    return (\r\n        <>\r\n        <h3>Your species: {props.species}</h3>\r\n        <h3>Your profession: {props.profession}</h3>\r\n        <h3>Your abilities:</h3>\r\n        <TableContainer >\r\n            <Table className=\"abilities\" id=\"finalValues\"> \r\n                <TableHead>\r\n                    <TableRow> \r\n                        {props.abilities.map((ability, index) => (\r\n                            <TableCell key={index}>{ability}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow  id=\"values\">\r\n                        {data.finalValues.map((value, index) => (\r\n                            <TableCell key={index}>{value}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default FinalValues;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AbilityCells from './AbilityCells';\r\nimport Bonus from './Bonus';\r\nimport FinalValues from './FinalValues';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            abilities: ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'],\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n            defaultPicked: false,\r\n            numbersToShow: [],\r\n            final: false,\r\n        }\r\n\r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n        this.confirmMethod = this.confirmMethod.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        let pickable = [...features]\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: features, featuresUse: pickable, rolled: true}, this.context.update({rolled: pickable, defaultRolled: pickable}) );\r\n    }\r\n\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        let pickable = [...defaultNumbers];\r\n        pickable.unshift('empty');\r\n        this.setState({numbersToShow: defaultNumbers, features: pickable , rolled: true, defaultPicked: true});\r\n    }\r\n\r\n    confirmMethod() {\r\n        let state = [...this.context.actualState]\r\n        const bonus =  [...data.speciesBonus[this.props.species]];\r\n        for(let i=0; i < state.length; i++) {\r\n            if(bonus[i] === parseInt(bonus[i], 10)) state[i] += bonus[i]\r\n        }\r\n        this.props.buttonState('clicked');\r\n        this.setState({final: true}, this.context.update({finalValues: state, final: true}) );\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n   \r\n       \r\n        const rollsResults = (\r\n            <>\r\n                <h4>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.numbersToShow.toString()}</h4>\r\n               \r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\" id=\"abilities\"> \r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            \r\n                            <TableRow id=\"values\">\r\n                                <AbilityCells  abilities={this.state.abilities} default={this.state.features} features={this.state.featuresUse} defaultPicked={this.state.defaultPicked}/>  \r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <Bonus species ={this.props.species}/> \r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                \r\n                </Fade> \r\n                 <Button \r\n                    onClick={this.confirmMethod} \r\n                    disabled={this.context.notConfirmed}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"  \r\n                    style={{marginTop: \"26px\"}}\r\n                    >\r\n                        Confirm - One way ticket!\r\n                    </Button>                   \r\n                \r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        \r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        } else if(!this.state.final) {\r\n            return this.state.rolled ? rollsResults : rolling      \r\n        } else {\r\n            return (<FinalValues abilities = {this.state.abilities} species={this.props.species} profession={this.props.profession}/>)\r\n        }             \r\n       \r\n    }\r\n    \r\n}\r\nFeatures.contextType=DataContext;\r\nexport default Features;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass LanguagesPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('languages', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                   \r\n                >\r\n                      \r\n                      {data.species_char[species].languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nLanguagesPick.contextType=DataContext;\r\nexport default LanguagesPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass TrickPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick One magic trick</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tricks', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      {data.species_char[species].tricks.map((trick,index) => (\r\n                        <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nTrickPick.contextType=DataContext;\r\nexport default TrickPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass ToolsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one artisan`s tool</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tools', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.tools}\r\n                >\r\n                      \r\n                      {data.species_char[species].tools.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nToolsPick.contextType=DataContext;\r\nexport default ToolsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass Dragons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Dragon</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('dragons', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.dragons}\r\n                >\r\n                      \r\n                      {data.species_char[species].dragons.map((dragon,index) => (\r\n                        <MenuItem  key={index} value={dragon}>{dragon}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDragons.contextType=DataContext;\r\nexport default Dragons;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nconst SkillsClass = (props) => {\r\n    const profession= props.profession\r\n    return (\r\n        <>\r\n        <h4>As {profession} You can pick {data.class_char[profession].skills_pick} additional skills.</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[profession].skills_pick} skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('classSkills', e)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n                required=\"true\"\r\n            >\r\n                    \r\n                    {data.class_char[profession].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SkillsClass;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\nimport HalfElf from './HalfElf';\r\nimport SkillsClass from './SkillsClass';\r\n\r\n\r\nfunction withSubscription(WrappedComponent, objKey) {\r\n    \r\n    return class Skills extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n        }\r\n        \r\n        render() {\r\n        \r\n            return (\r\n                \r\n                <>\r\n                 <WrappedComponent species={this.props.species} getValue= {this.props.getValue} profession={this.props.profession}/>\r\n                {(this.context.person[objKey].length !== 0) && <h4>You've picked {this.context.person[objKey].toString()}</h4>}\r\n               </> \r\n            )\r\n        }\r\n        \r\n    \r\n    }\r\n    \r\n}\r\n\r\nconst HalfelfSkills = withSubscription(HalfElf, 'skills');\r\nconst ClassSkills = withSubscription(SkillsClass, 'classSkills');\r\nHalfelfSkills.contextType = DataContext;\r\nClassSkills.contextType = DataContext;\r\n\r\n\r\nexport {\r\n    HalfelfSkills,\r\n    ClassSkills,\r\n}","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst HalfElf = (props) => {\r\n    return (\r\n        <>\r\n        <h4>As Half Elf You can pick two skills</h4>  \r\n            <div>\r\n            <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick two skills</InputLabel>\r\n                <Select \r\n                onChange={(e) => props.getValue('skills', e)}\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                style={{color: \"#fff\"}}\r\n            >\r\n                    \r\n                    {data.species_char[props.species].skills.map((skill,index) => (\r\n                    <MenuItem  key={index} value={skill}>{skill}</MenuItem>\r\n                ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HalfElf;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LanguagesPick from './LanguagesPick';\r\nimport TrickPick from './TrickPick';\r\nimport ToolsPick from './ToolsPick';\r\nimport Dragons from './Dragons';\r\nimport {HalfelfSkills} from './Skills';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpeciesChar extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            name: '',\r\n            gender: '',\r\n            alignment: '',\r\n            languages: [],\r\n            tricks: [],\r\n            tools:[],\r\n            dragons: [],\r\n            skills: [],\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let char = this.state;\r\n        // if(prevState.name !== char.name && prevState.gender !== char.gender && prevState.alignment !== char.alignment && prevProps.button === true) this.handleData();\r\n        if(prevState.name !== char.name) {\r\n            this.context.updatePerson('name',char.name);\r\n        }\r\n        if(prevState.gender !== char.gender) {\r\n            this.context.updatePerson('gender',char.gender);\r\n        }\r\n        if(prevState.alignment !== char.alignment) {\r\n            this.context.updatePerson('alignment',char.alignment);\r\n        }\r\n        if(prevState.languages !== char.languages) {\r\n            this.context.updatePerson('languages',char.languages);\r\n        }\r\n        if(prevState.tricks !== char.tricks) {\r\n            this.context.updatePerson('tricks',char.tricks);\r\n        }\r\n        if(prevState.tools !== char.tools) {\r\n            this.context.updatePerson('tools',char.tools);\r\n        }\r\n        if(prevState.dragons !== char.dragons) {\r\n            this.context.updatePerson('dragons',char.dragons);\r\n        }\r\n        if(prevState.skills !== char.skills) {\r\n            this.context.updatePerson('skills',char.skills, 1);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getValue(key, event) {\r\n        const data = event.target.value;\r\n        this.setState({[key]: data}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let char = this.state;\r\n        const species = this.props.species;\r\n        if(char.name !== '' && char.gender !== '' && char.alignment !== '') {\r\n            if(species === 'Drow - Dark Elf' || species === 'Forest Elf' || species === 'Halfling - Lightfoot' || species === 'Halfling - Stout' || species === 'Tiefling' || species === 'Forest Gnome' || species === 'Rock Gnome' || species === 'Half-Orc') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Human' && char.languages.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Half-Elf' && char.languages.length !== 0 && this.context.person.skills.length === 2) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'High Elf' && char.languages.length !== 0 && char.tricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Mountain Dwarf' && char.tools.length !== 0 || species === 'Hill Dwarf' && char.tools.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Dragonborn' && char.dragons.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        if (this.props.currentStep !== 4) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div><h2>Brave {species}. Tell us more about Yourself</h2></div>\r\n            <form className='charData' noValidate autoComplete=\"off\">\r\n                <TextField onChange={(e) =>this.getValue('name', e)} id=\"standard-basic\" label=\"Your name\" value={this.context.person.name} />\r\n                <TextField onChange={(e) =>this.getValue('gender', e)} id=\"standard-basic2\" label=\"Your gender\" value={this.context.person.gender} />\r\n                <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Alignment</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.getValue('alignment', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n              \r\n                >\r\n                      \r\n                    {data.species_char[species].alignment.map((align,index) => (\r\n                        <MenuItem  key={index} value={align}>{align}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {(this.props.species === 'Human' || this.props.species === 'High Elf' || this.props.species === 'Half-Elf') && <LanguagesPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'High Elf') && <TrickPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Mountain Dwarf' || this.props.species === 'Hill Dwarf') && <ToolsPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Dragonborn') && <Dragons getValue= {this.getValue} species = {this.props.species}/>}\r\n                \r\n            </FormControl>\r\n            </form>\r\n                {(this.props.species === 'Half-Elf') && <HalfelfSkills getValue= {this.getValue} species = {this.props.species}/>}        \r\n            {(species !== 'Human') && \r\n                <h3>As {species}, You have proficiences: <br/>{data.species_char[species].proficiency.toString()}</h3>\r\n            }\r\n          \r\n            \r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nSpeciesChar.contextType=DataContext;\r\nexport default SpeciesChar;","\r\n\r\nconst modificator = (values) => {\r\n    let mods = [];\r\n   values.forEach(value => {\r\n        for(let i = -5, b=1; i < 11; i ++) {\r\n            if(value <= b) {\r\n                mods.push(i);\r\n                break;\r\n            }\r\n            b += 2;\r\n        }\r\n    });\r\n    return mods;\r\n}\r\n\r\nexport default {\r\n    modificator,\r\n}","import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nclass Equip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        const equipment = data.class_char[profession].equip;\r\n        const standard = (\r\n            <>\r\n                <h3>Your equipment.</h3>\r\n                {data.class_char[profession].equip.map((item, index) => {\r\n                    if(typeof item === \"string\") {\r\n                        return (\r\n                            <p>You have {item} in your equipment. Pick the rest.</p>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Pick one from these:</FormLabel>\r\n                                    <RadioGroup aria-label=\"equipment\" name={`equipment${index}`} onChange={(e)=> this.props.getValue(`equip${index}`,e)}>\r\n                                        {item.map((el,i) => (\r\n                                            <FormControlLabel key={i} value={el} control={<Radio />} label={el}/>     \r\n                                        ))}\r\n                                    </RadioGroup>   \r\n                                </FormControl>  \r\n                        )\r\n                            \r\n                            \r\n                    }\r\n                })}\r\n            </>\r\n        );\r\n        return standard;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Equip;","import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass Instruments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"instruments pick\">\r\n               {profession === \"Bard\" && <h4>You are musician! Pick your three best instruments</h4>}\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">{profession === 'Bard' ? 'Pick three instruments' : 'Pick one instrument'}</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('instruments', e)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >\r\n                        \r\n                        {data.class_char[profession].instruments.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n                {(this.context.person.instruments.length !== 0) && <h4>You've picked {this.context.person.instruments.toString()}</h4>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nInstruments.contextType=DataContext;\r\nexport default Instruments;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\nclass ClassTricks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        return (\r\n            <>\r\n            <div className=\"tricks pick\">\r\n                <h4>As {prof} You can pick {data.class_char[prof].tricks_pick} tricks</h4> \r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof].tricks_pick} magic trick(s)</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('classTricks', e)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    >  \r\n                        {data.class_char[prof].classTricks.map((trick,index) => (\r\n                            <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {(this.context.person.classTricks.length !== 0) && <h4>You've picked {this.context.person.classTricks.toString()}</h4>}\r\n            </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nClassTricks.contextType=DataContext;\r\nexport default ClassTricks;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpellsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        return (\r\n            \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As {prof} You can pick {data.class_char[prof].spells_pick} spells</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof].spells_pick} spells</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('spells', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                      {data.class_char[prof].spells.map((spell,index) => (\r\n                        <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.spells.length !== 0) && <h4>You've picked {this.context.person.spells.toString()}</h4>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nSpellsPick.contextType=DataContext;\r\nexport default SpellsPick;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport modificatorService from './services/modificator';\r\nimport {ClassSkills} from './Skills';\r\nimport Equip from './Equip';\r\nimport Instruments from './Instruments';\r\nimport ClassTricks from './ClassTricks';\r\nimport SpellsPick from './SpellsPick';\r\n\r\nclass ClassChar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classSkills: [],\r\n            instruments: [],\r\n            classTricks: [],\r\n            spells: [],\r\n        }\r\n\r\n        this.getValue = this.getValue.bind(this);\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        let atr = this.state;\r\n        const profession = this.props.profession;\r\n        if(prevProps.currentStep !== this.props.currentStep) {\r\n        const mods = modificatorService.modificator(this.props.finals);\r\n        this.context.updatePerson('mods', mods);\r\n        }\r\n        if(prevState.classSkills !== atr.classSkills) {\r\n            this.context.updatePerson('classSkills', atr.classSkills, data.class_char[profession].skills_pick - 1);\r\n        }\r\n        if(prevState.equip1 !== atr.equip1) {\r\n            this.context.updatePerson('equip1', atr.equip1);\r\n        }\r\n        if(prevState.equip2 !== atr.equip2) {\r\n            this.context.updatePerson('equip2', atr.equip2);\r\n        }\r\n        if(prevState.equip3 !== atr.equip3) {\r\n            this.context.updatePerson('equip3', atr.equip3);\r\n        }\r\n        if(prevState.equip4 !== atr.equip4) {\r\n            this.context.updatePerson('equip4', atr.equip4);\r\n        }\r\n        if(prevState.instruments !== atr.instruments) {\r\n            this.context.updatePerson('instruments', atr.instruments, (profession === 'Bard') ? 2 : 0); \r\n        }\r\n        if(prevState.classTricks !== atr.classTricks) {\r\n            this.context.updatePerson('classTricks', atr.classTricks, data.class_char[profession].tricks_pick - 1); \r\n        }\r\n        if(prevState.spells !== atr.spells) {\r\n            this.context.updatePerson('spells', atr.spells, data.class_char[profession].spells_pick - 1); \r\n        }\r\n\r\n    }\r\n\r\n    getValue(key, event) {\r\n        const data = event.target.value;\r\n        console.log(data)\r\n        this.setState({[key]: data});\r\n    }\r\n\r\n    handleData() {\r\n        let atr = {...this.context.person};\r\n        const prof = this.props.profession;\r\n        // if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n        // }\r\n        if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n            if(prof === 'Barbarian') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(prof === 'Bard' && atr.equip3 !== 0 && atr.instruments !== 0 && atr.spells !== 0 && atr.classTricks !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        console.log(this.context.person);\r\n        console.log(this.props.currentStep);\r\n        const profession = this.props.profession;\r\n       \r\n        \r\n        if (this.props.currentStep !== 5) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"classAtr\"><h2>Brave {this.context.person.name}!</h2>\r\n            <h3>As {profession}:</h3>\r\n            <p><strong>Your class proficiencies are:</strong> {data.class_char[profession].proficiency.toString()}</p>\r\n            <p>You have fighting proficiency in:</p>\r\n                <ul>\r\n                    <li><strong>Armour:</strong> {data.class_char[profession].armor.toString()}</li>\r\n                    <li><strong>Weapon:</strong> {data.class_char[profession].weapons.toString()}</li>\r\n                    {(profession !== 'Bard' && profession !== 'Monk') && data.class_char[profession].tools.length !== 0 ?\r\n                    <p><strong>You have tools proficiency in:</strong> {data.class_char[profession].tools.toString()}</p>\r\n                    : <></>}\r\n                    \r\n                </ul>\r\n          \r\n            <p>Your HitDice is: {data.class_char[profession].hit_dice}</p>\r\n            <p>Your current Hit Points are: {data.class_char[profession].hit_points + this.context.person.mods[2]}</p>\r\n            {/* <h4>As {this.props.profession} You can pick {data.class_char[profession].skills_pick} skills from the list</h4>   */}\r\n            <ClassSkills profession={this.props.profession} getValue={this.getValue}/>\r\n            <Equip profession={this.props.profession} getValue={this.getValue}/>\r\n            {(profession === 'Bard' || profession === 'Monk') && <Instruments profession={profession} getValue={this.getValue}/>}\r\n            {(profession === 'Bard') && <ClassTricks profession={profession} getValue={this.getValue}/>}\r\n            {(profession === 'Bard') && <SpellsPick profession={profession} getValue={this.getValue}/>}\r\n            \r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nClassChar.contextType=DataContext;\r\nexport default ClassChar;","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport SpeciesChar from './SpeciesChar';\r\nimport ClassChar from './ClassChar';\r\nimport Button from '@material-ui/core/Button';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass MultiForm extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this.next = this.next.bind(this);\r\n    this.prev = this.prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n\r\n prev() {\r\n    let currentStep = this.state.currentStep\r\n    if(currentStep === 3) this.context.update({default: this.context.defaultStatic, rolled: this.context.defaultRolled, notConfirmed: true, actualState: ['','','','','','']})\r\n \r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 5 ? 6: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n  if(this.state.currentStep === 3 && this.context.final) this.setState({button:false});\r\n }\r\n\r\n  render () {\r\n    let currentStep = this.state.currentStep;\r\n    const previousButton = (\r\n      <Button className=\"previous\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        disabled={this.context.final && currentStep === 3}\r\n        onClick={this.prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button className=\"next\" style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this.next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            <h1>Your Character Generator</h1>\r\n          </header>\r\n          <main>\r\n          {}\r\n            <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n            <Features buttonState={this.handleButton} species={this.state.species} profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n            <SpeciesChar buttonState={this.handleButton} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <ClassChar finals={this.context.finalValues} profession={this.state.profession} buttonState={this.handleButton} button={this.state.button} species={this.state.species} currentStep={this.state.currentStep}/>\r\n            <div className=\"buttons\">\r\n              {currentStep !== 1 && previousButton}\r\n              {currentStep < 6 && nextButton } \r\n            </div>\r\n          </main>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMultiForm.contextType=DataContext;\r\nexport default MultiForm;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport DataProvider from './contexts/DataProvider';\r\nimport MultiForm from './MultiForm';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    return (\r\n      <DataProvider>\r\n        <MultiForm/>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}