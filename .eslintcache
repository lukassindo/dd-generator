[{"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\index.js":"1","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\App.js":"2","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\reportWebVitals.js":"3","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Species.js":"4","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Classes.js":"5","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Features.js":"6","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\services\\roll.js":"7","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\AbilityCells.js":"8","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Bonus.js":"9","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\contexts\\DataContext.js":"10","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\contexts\\DataProvider.js":"11","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\MultiForm.js":"12","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\FinalValues.js":"13","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\SpeciesChar.js":"14","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\LanguagesPick.js":"15","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\TrickPick.js":"16","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\ToolsPick.js":"17","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Dragons.js":"18","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Skills.js":"19","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\data\\data.js":"20","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\ClassChar.js":"21","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\services\\modificator.js":"22","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\HalfElf.js":"23","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\SkillsClass.js":"24","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Equip.js":"25","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Instruments.js":"26","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\ClassTricks.js":"27","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\SpellsPick.js":"28","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Domain.js":"29"},{"size":517,"mtime":1612444065611,"results":"30","hashOfConfig":"31"},{"size":404,"mtime":1615204498152,"results":"32","hashOfConfig":"31"},{"size":375,"mtime":1612444065613,"results":"33","hashOfConfig":"31"},{"size":1915,"mtime":1615363596097,"results":"34","hashOfConfig":"31"},{"size":1911,"mtime":1615363573822,"results":"35","hashOfConfig":"31"},{"size":5629,"mtime":1616059009965,"results":"36","hashOfConfig":"31"},{"size":609,"mtime":1612898380990,"results":"37","hashOfConfig":"31"},{"size":3358,"mtime":1615204415175,"results":"38","hashOfConfig":"31"},{"size":953,"mtime":1616058057339,"results":"39","hashOfConfig":"31"},{"size":107,"mtime":1613508308013,"results":"40","hashOfConfig":"31"},{"size":4080,"mtime":1617731920214,"results":"41","hashOfConfig":"31"},{"size":3903,"mtime":1617269899950,"results":"42","hashOfConfig":"31"},{"size":1451,"mtime":1614517545584,"results":"43","hashOfConfig":"31"},{"size":6390,"mtime":1617353139545,"results":"44","hashOfConfig":"31"},{"size":1528,"mtime":1617710824036,"results":"45","hashOfConfig":"31"},{"size":1548,"mtime":1617353215729,"results":"46","hashOfConfig":"31"},{"size":1588,"mtime":1617728239270,"results":"47","hashOfConfig":"31"},{"size":1584,"mtime":1617178063140,"results":"48","hashOfConfig":"31"},{"size":1328,"mtime":1617201069754,"results":"49","hashOfConfig":"31"},{"size":19719,"mtime":1617713665211,"results":"50","hashOfConfig":"31"},{"size":7916,"mtime":1617733511315,"results":"51","hashOfConfig":"31"},{"size":336,"mtime":1616684797236,"results":"52","hashOfConfig":"31"},{"size":1163,"mtime":1617196031398,"results":"53","hashOfConfig":"31"},{"size":1351,"mtime":1617729524223,"results":"54","hashOfConfig":"31"},{"size":2064,"mtime":1617729551866,"results":"55","hashOfConfig":"31"},{"size":1777,"mtime":1617729581544,"results":"56","hashOfConfig":"31"},{"size":2247,"mtime":1617733533243,"results":"57","hashOfConfig":"31"},{"size":2002,"mtime":1617729634214,"results":"58","hashOfConfig":"31"},{"size":2336,"mtime":1617733444400,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1vczvzi",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"62"},"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\index.js",[],["136","137"],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\App.js",["138"],"import React from 'react';\r\n\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport DataProvider from './contexts/DataProvider';\r\nimport MultiForm from './MultiForm';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n\r\n    return (\r\n      <DataProvider>\r\n        <MultiForm/>\r\n      </DataProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\reportWebVitals.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Species.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Classes.js",["139","140","141"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    CLASSES = ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return (<></>)\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.CLASSES.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Features.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\services\\roll.js",["142"],"const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\AbilityCells.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Bonus.js",["143"],"import React from 'react';\r\nimport DataContext from './contexts/DataContext';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\n\r\n\r\nclass Bonus extends React.Component {\r\n\r\nconstructor(props, context) {\r\n    super(props);\r\n    \r\n  \r\n    const species = this.props.species;\r\n    let bonus = [...data.speciesBonus[species]];\r\n    let values = bonus.map(item =>{\r\n        if(item !== '') item = `Bonus + ${item}`\r\n        return item;\r\n    })\r\n    this.state = {\r\n       values,\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nrender() {\r\n\r\n    return (\r\n        <>\r\n        {this.state.values.map((bon, index) =>  (\r\n            <TableCell style={{color: \"#fff\", textAlign: \"center\", padding: \"4px 35px\"}} key={index}>{bon}</TableCell>\r\n          ))}\r\n        </>\r\n\r\n    )\r\n    \r\n      \r\n        \r\n        \r\n    \r\n}\r\n\r\n\r\n\r\n}\r\n\r\nBonus.contextType=DataContext;\r\nexport default Bonus;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\contexts\\DataContext.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\contexts\\DataProvider.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\MultiForm.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\FinalValues.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\SpeciesChar.js",["144","145","146","147"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LanguagesPick from './LanguagesPick';\r\nimport TrickPick from './TrickPick';\r\nimport ToolsPick from './ToolsPick';\r\nimport Dragons from './Dragons';\r\nimport {HalfelfSkills} from './Skills';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpeciesChar extends React.Component {\r\n\r\n    constructor(props, context) {\r\n        super(props);\r\n   \r\n        this.state = {\r\n            name: '',\r\n            gender: '',\r\n            alignment: '',\r\n            languages: [],\r\n            tricks: [],\r\n            tools:[],\r\n            dragons: [],\r\n            skills: [],\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n        \r\n    }\r\n    \r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let char = this.state;\r\n        // if(prevState.name !== char.name && prevState.gender !== char.gender && prevState.alignment !== char.alignment && prevProps.button === true) this.handleData();\r\n        if(prevState.name !== char.name) {\r\n            this.context.updatePerson('name',char.name);\r\n        }\r\n        if(prevState.gender !== char.gender) {\r\n            this.context.updatePerson('gender',char.gender);\r\n        }\r\n        if(prevState.alignment !== char.alignment) {\r\n            this.context.updatePerson('alignment',char.alignment);\r\n        }\r\n        if(prevState.languages !== char.languages) {\r\n            this.context.updatePerson('languages',char.languages);\r\n        }\r\n        if(prevState.tricks !== char.tricks) {\r\n            this.context.updatePerson('tricks',char.tricks);\r\n        }\r\n        if(prevState.tools !== char.tools) {\r\n            this.context.updatePerson('tools',char.tools);\r\n        }\r\n        if(prevState.dragons !== char.dragons) {\r\n            this.context.updatePerson('dragons',char.dragons);\r\n        }\r\n        if(prevState.skills !== char.skills) {\r\n            this.context.updatePerson('skills',char.skills, 1);\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    getValue(key, event) {\r\n        const data = event.target.value;\r\n        this.setState({[key]: data}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let char = this.state;\r\n        const species = this.props.species;\r\n        if(char.name !== '' && char.gender !== '' && char.alignment !== '') {\r\n            if(species === 'Drow - Dark Elf' || species === 'Forest Elf' || species === 'Halfling - Lightfoot' || species === 'Halfling - Stout' || species === 'Tiefling' || species === 'Forest Gnome' || species === 'Rock Gnome' || species === 'Half-Orc') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Human' && char.languages.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Half-Elf' && char.languages.length !== 0 && this.context.person.skills.length === 2) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'High Elf' && char.languages.length !== 0 && char.tricks.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Mountain Dwarf' && char.tools.length !== 0 || species === 'Hill Dwarf' && char.tools.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(species === 'Dragonborn' && char.dragons.length !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        if (this.props.currentStep !== 4) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div><h2>Brave {species}. Tell us more about Yourself</h2></div>\r\n            <form className='charData' noValidate autoComplete=\"off\">\r\n                <TextField onChange={(e) =>this.getValue('name', e)} id=\"standard-basic\" label=\"Your name\" value={this.context.person.name} />\r\n                <TextField onChange={(e) =>this.getValue('gender', e)} id=\"standard-basic2\" label=\"Your gender\" value={this.context.person.gender} />\r\n                <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Alignment</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.getValue('alignment', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.alignment}\r\n                >\r\n                      \r\n                    {data.species_char[species].alignment.map((align,index) => (\r\n                        <MenuItem  key={index} value={align}>{align}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {(this.props.species === 'Human' || this.props.species === 'High Elf' || this.props.species === 'Half-Elf') && <LanguagesPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'High Elf') && <TrickPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Mountain Dwarf' || this.props.species === 'Hill Dwarf') && <ToolsPick getValue= {this.getValue} species = {this.props.species}/>}\r\n                {(this.props.species === 'Dragonborn') && <Dragons getValue= {this.getValue} species = {this.props.species}/>}\r\n                \r\n            </FormControl>\r\n            </form>\r\n                {(this.props.species === 'Half-Elf') && <HalfelfSkills getValue= {this.getValue} species = {this.props.species}/>}        \r\n            {(species !== 'Human') && \r\n                <h3>As {species}, You have proficiences: <br/>{data.species_char[species].proficiency.toString()}</h3>\r\n            }\r\n          \r\n            \r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nSpeciesChar.contextType=DataContext;\r\nexport default SpeciesChar;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\LanguagesPick.js",["148"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass LanguagesPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Additional Language</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('languages', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                      {data.species_char[species].languages.map((lang,index) => (\r\n                        <MenuItem  key={index} value={lang}>{lang}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nLanguagesPick.contextType=DataContext;\r\nexport default LanguagesPick;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\TrickPick.js",["149"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass TrickPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick One magic trick</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tricks', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.tricks[0]}\r\n                >\r\n                      {data.species_char[species].tricks.map((trick,index) => (\r\n                        <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nTrickPick.contextType=DataContext;\r\nexport default TrickPick;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\ToolsPick.js",["150"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass ToolsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one artisan`s tool</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('tools', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.tools[0]}\r\n                >\r\n                      \r\n                      {data.species_char[species].tools.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nToolsPick.contextType=DataContext;\r\nexport default ToolsPick;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Dragons.js",["151"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass Dragons extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const species = this.props.species;\r\n        return (\r\n            \r\n            <>\r\n            <Fade in={true}>\r\n                \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Dragon</InputLabel>\r\n                <Select \r\n                    onChange={(e) => this.props.getValue('dragons', e)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                    value={this.context.person.dragons}\r\n                >\r\n                      \r\n                      {data.species_char[species].dragons.map((dragon,index) => (\r\n                        <MenuItem  key={index} value={dragon}>{dragon}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            </Fade>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDragons.contextType=DataContext;\r\nexport default Dragons;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Skills.js",["152","153","154","155","156","157"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\nimport HalfElf from './HalfElf';\r\nimport SkillsClass from './SkillsClass';\r\n\r\n\r\nfunction withSubscription(WrappedComponent, objKey) {\r\n    \r\n    return class Skills extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n        }\r\n        \r\n        render() {\r\n        \r\n            return (\r\n                \r\n                <>\r\n                 <WrappedComponent species={this.props.species} getValue= {this.props.getValue} profession={this.props.profession}/>\r\n                {(this.context.person[objKey].length !== 0) && <h4>You've picked {this.context.person[objKey].toString()}</h4>}\r\n               </> \r\n            )\r\n        }\r\n        \r\n    \r\n    }\r\n    \r\n}\r\n\r\nconst HalfelfSkills = withSubscription(HalfElf, 'skills');\r\nconst ClassSkills = withSubscription(SkillsClass, 'classSkills');\r\nHalfelfSkills.contextType = DataContext;\r\nClassSkills.contextType = DataContext;\r\n\r\n\r\nexport {\r\n    HalfelfSkills,\r\n    ClassSkills,\r\n}","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\data\\data.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\ClassChar.js",["158","159","160","161","162"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport DataContext from './contexts/DataContext';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport modificatorService from './services/modificator';\r\nimport {ClassSkills} from './Skills';\r\nimport Equip from './Equip';\r\nimport Instruments from './Instruments';\r\nimport ClassTricks from './ClassTricks';\r\nimport SpellsPick from './SpellsPick';\r\nimport Button from '@material-ui/core/Button';\r\nimport Domain from './Domain';\r\n\r\nclass ClassChar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            classSkills: [],\r\n            instruments: [],\r\n            classTricks: [],\r\n            spells: [],\r\n            warlock: false,\r\n            warlock_spells: [],\r\n            domain: '',\r\n            deityTricks:[],\r\n        }\r\n\r\n        this.getValue = this.getValue.bind(this);\r\n        this.handleData = this.handleData.bind(this);\r\n        this.setPatron = this.setPatron.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let atr = this.state;\r\n        const profession = this.props.profession;\r\n        if(prevProps.currentStep !== this.props.currentStep) {\r\n        const mods = modificatorService.modificator(this.props.finals);\r\n        this.context.updatePerson('mods', mods);\r\n        }\r\n        if(prevProps.profession !== profession) {\r\n           if(prevProps.profession === 'Druid') this.context.cleanValue('languages');\r\n           if(profession === 'Druid') this.context.addValue('languages', 'Druidic');\r\n        }\r\n        if(prevState.classSkills !== atr.classSkills) {\r\n            this.context.updatePerson('classSkills', atr.classSkills, data.class_char[profession].skills_pick - 1);\r\n        }\r\n        if(prevState.equip1 !== atr.equip1) {\r\n            this.context.updatePerson('equip1', atr.equip1);\r\n        }\r\n        if(prevState.equip2 !== atr.equip2) {\r\n            this.context.updatePerson('equip2', atr.equip2);\r\n        }\r\n        if(prevState.equip3 !== atr.equip3) {\r\n            this.context.updatePerson('equip3', atr.equip3);\r\n        }\r\n        if(prevState.equip4 !== atr.equip4) {\r\n            this.context.updatePerson('equip4', atr.equip4);\r\n        }\r\n        if(prevState.instruments !== atr.instruments) {\r\n            this.context.updatePerson('instruments', atr.instruments, (profession === 'Bard') ? 2 : 0); \r\n        }\r\n        if(prevState.classTricks !== atr.classTricks) {\r\n            this.context.updatePerson('classTricks', atr.classTricks, data.class_char[profession].tricks_pick - 1); \r\n        }\r\n        if(prevState.spells !== atr.spells) {\r\n            this.context.updatePerson('spells', atr.spells, data.class_char[profession].spells_pick - 1); \r\n        }\r\n        if(prevState.domain !== atr.domain) {\r\n            this.context.updatePerson('domain', atr.domain); \r\n        }\r\n        if(prevState.deityTricks !== atr.deityTricks) {\r\n            this.context.updatePerson('deityTricks', atr.deityTricks); \r\n        }\r\n\r\n    }\r\n\r\n    getValue(key, event) {\r\n        this.setState({[key]: event}, this.handleData);\r\n    }\r\n\r\n    handleData() {\r\n        let atr = {...this.context.person};\r\n        const prof = this.props.profession;\r\n        // if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n        // }\r\n        if(atr.classSkills.length !== 0 && atr.equip1.length !== 0 && atr.equip2.length !== 0) {\r\n            if(prof === 'Barbarian') {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if(prof === 'Bard' && atr.equip3 !== 0 && atr.instruments !== 0 && atr.spells !== 0 && atr.classTricks !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Warlock') && atr.equip3 !== 0 && atr.spells !== 0 && atr.classTricks !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            if((prof === 'Druid') && atr.equip3 !== 0 && atr.classTricks !== 0) {\r\n                this.props.buttonState('clicked');\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    setPatron(patron) {\r\n        let spells = [...data.class_char['Warlock'].spells];\r\n        if(patron === 'arcyfey') {\r\n            spells.push('Faerie Fire', 'Sleep')\r\n        } else if(patron === 'fiend') {\r\n            spells.push('Burning hands', 'Command')\r\n        } else {\r\n            spells.push('Bane', 'False life')\r\n        }\r\n        console.log(spells)\r\n        this.setState({warlock_spells: spells, warlock: true})\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.state);\r\n        console.log(this.context.person);\r\n        console.log(this.props.currentStep);\r\n        const profession = this.props.profession;\r\n       \r\n        \r\n        if (this.props.currentStep !== 5) { \r\n            return (<></>)\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"classAtr\"><h2>Brave {this.context.person.name}!</h2>\r\n            <h3>As {profession}:</h3>\r\n            <p><strong>Your class proficiencies are:</strong> {data.class_char[profession].proficiency.toString()}</p>\r\n            <p><strong>You have fighting proficiency in:</strong></p>\r\n                <ul>\r\n                    <li><strong>Armour:</strong> {data.class_char[profession].armor.toString()}</li>\r\n                    <li><strong>Weapon:</strong> {data.class_char[profession].weapons.toString()}</li>\r\n                    {(profession !== 'Bard' && profession !== 'Monk') && data.class_char[profession].tools.length !== 0 ?\r\n                    <p><strong>You have tools proficiency in:</strong> {data.class_char[profession].tools.toString()}</p>\r\n                    : <></>}\r\n                    \r\n                </ul>\r\n          \r\n            <p>Your HitDice is: {data.class_char[profession].hit_dice}</p>\r\n            <p>Your current Hit Points are: {data.class_char[profession].hit_points + this.context.person.mods[2]}</p>\r\n            {/* <h4>As {this.props.profession} You can pick {data.class_char[profession].skills_pick} skills from the list</h4>   */}\r\n            <ClassSkills profession={this.props.profession} getValue={this.getValue}/>\r\n            <Equip profession={this.props.profession} getValue={this.getValue}/>\r\n            {(profession === 'Bard' || profession === 'Monk') && <Instruments profession={profession} getValue={this.getValue}/>}\r\n            {(profession === 'Bard' || profession === 'Warlock' || profession === 'Druid' || profession === 'Cleric') && <ClassTricks profession={profession} mainpick={true} getValue={this.getValue}/>}\r\n            {(profession === 'Bard') && <SpellsPick profession={profession} getValue={this.getValue}/>}\r\n\r\n            {(profession === 'Warlock') &&\r\n                <div className=\"patrons\">\r\n                    <h4>Pick Your Otherworldly Patron</h4>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('arcyfey')}>Arcyfey</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('fiend')}>The Fiend</Button>\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={()=>this.setPatron('undead')}>The Undead</Button>\r\n                </div>\r\n            }\r\n            {(profession === 'Warlock' && this.state.warlock) && <SpellsPick profession={profession} getValue={this.getValue} spells={this.state.warlock_spells}/>}\r\n            {(profession === 'Cleric') && <Domain profession={profession} getValue={this.getValue}/>}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nClassChar.contextType=DataContext;\r\nexport default ClassChar;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\services\\modificator.js",["163"],"\r\n\r\nconst modificator = (values) => {\r\n    let mods = [];\r\n   values.forEach(value => {\r\n        for(let i = -5, b=1; i < 11; i ++) {\r\n            if(value <= b) {\r\n                mods.push(i);\r\n                break;\r\n            }\r\n            b += 2;\r\n        }\r\n    });\r\n    return mods;\r\n}\r\n\r\nexport default {\r\n    modificator,\r\n}","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\HalfElf.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\SkillsClass.js",[],"C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Equip.js",["164","165","166","167","168"],"import React from 'react';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {data} from './data/data.js';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nclass Equip extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        const equipment = data.class_char[profession].equip;\r\n        const standard = (\r\n            <>\r\n                <h3>Your equipment.</h3>\r\n                {data.class_char[profession].equip.map((item, index) => {\r\n                    if(typeof item === \"string\") {\r\n                        return (\r\n                            <p>You have {item} in your equipment. Pick the rest.</p>\r\n                        )\r\n                    } else {\r\n                        return (\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Pick one from these:</FormLabel>\r\n                                    <RadioGroup aria-label=\"equipment\" name={`equipment${index}`} onChange={(e)=> this.props.getValue(`equip${index}`,e.target.value)}>\r\n                                        {item.map((el,i) => (\r\n                                            <FormControlLabel key={i} value={el} control={<Radio />} label={el}/>     \r\n                                        ))}\r\n                                    </RadioGroup>   \r\n                                </FormControl>  \r\n                        )\r\n                            \r\n                            \r\n                    }\r\n                })}\r\n            </>\r\n        );\r\n        return standard;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Equip;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Instruments.js",["169"],"import React from 'react';\r\nimport {data} from './data/data.js';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\n\r\nclass Instruments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const profession = this.props.profession;\r\n        return (\r\n            <div className=\"instruments pick\">\r\n               {profession === \"Bard\" && <h4>You are musician! Pick your three best instruments</h4>}\r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">{profession === 'Bard' ? 'Pick three instruments' : 'Pick one instrument'}</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue('instruments', e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    \r\n                    >\r\n                        \r\n                        {data.class_char[profession].instruments.map((tool,index) => (\r\n                        <MenuItem  key={index} value={tool}>{tool}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                </FormControl>\r\n                {(this.context.person.instruments.length !== 0) && <h4>You've picked {this.context.person.instruments.toString()}</h4>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nInstruments.contextType=DataContext;\r\nexport default Instruments;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\ClassTricks.js",["170"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport {data} from './data/data.js';\r\n\r\nclass ClassTricks extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        let key;\r\n        let numb;\r\n        if(this.context.person.domain === 'Nature' && prof === 'Druid') {\r\n            key = 'deityTricks';\r\n            numb = 1;\r\n        } else { \r\n            key = 'classTricks'\r\n            numb = data.class_char[prof].tricks_pick;\r\n        }\r\n        return (\r\n            <>\r\n            <div className=\"tricks pick\">\r\n                {(this.context.person.domain === 'Nature' && prof === 'Druid') ? \r\n                <h4>As Nature Cleric You can pick 1 Druid trick</h4> \r\n                : <h4>As {prof} You can pick {data.class_char[prof].tricks_pick} tricks</h4>\r\n                }\r\n                 \r\n                <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                    <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {numb} magic trick(s)</InputLabel>\r\n                    <Select \r\n                        onChange={(e) => this.props.getValue(key, e.target.value)}\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"demo-simple-select\"\r\n                        style={{color: \"#fff\"}}\r\n                    >  \r\n                        {data.class_char[prof].classTricks.map((trick,index) => (\r\n                            <MenuItem  key={index} value={trick}>{trick}</MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {(this.context.person.classTricks.length !== 0 && this.props.mainpick) && <h4>You've picked {this.context.person.classTricks.toString()}</h4>}\r\n            </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nClassTricks.contextType=DataContext;\r\nexport default ClassTricks;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\SpellsPick.js",["171","172"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\n\r\nclass SpellsPick extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n\r\n    render() {\r\n        const prof = this.props.profession;\r\n        return (\r\n            \r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As {prof} You can pick {data.class_char[prof].spells_pick} spells</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick {data.class_char[prof].spells_pick} spells</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.props.getValue('spells', e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {(prof === 'Warlock') ? \r\n                    this.props.spells.map((spell,index) => (\r\n                        <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                    ))\r\n                  : data.class_char[prof].spells.map((spell,index) => (\r\n                    <MenuItem  key={index} value={spell}>{spell}</MenuItem>\r\n                ))\r\n\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.spells.length !== 0) && <h4>You've picked {this.context.person.spells.toString()}</h4>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nSpellsPick.contextType=DataContext;\r\nexport default SpellsPick;","C:\\Users\\Własciciel\\Desktop\\Firma\\korki\\React\\dd-generator\\src\\Domain.js",["173"],"import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport DataContext from './contexts/DataContext';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {data} from './data/data.js';\r\nimport ClassTricks from './ClassTricks';\r\n\r\nclass Domain extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.domainEffects = this.domainEffects.bind(this);\r\n        this.getValue = this.getValue.bind(this);\r\n    }\r\n\r\n\r\n    domainEffects(domain) {\r\n        if(domain === 'Tempest') {\r\n            this.context.addValue('weapons','martial weapons','heavy armour','classSpells','Fog Cloud','Thunderwave');\r\n        } else if (domain === 'Nature') {\r\n            this.context.addValue('classSpells','Animal Friendship','Speak with animals','weapons','heavy armour');\r\n        }\r\n        this.props.getValue('domain', domain);\r\n    }\r\n\r\n\r\n    getValue(key, event) {\r\n        this.props.getValue(key, event)\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div className=\"spells pick\">\r\n                <h4>As Cleric You have to choose one domain related to your deity</h4>   \r\n             <FormControl className=\"classic\" style={{marginTop: '16px'}}>\r\n                <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick one domain</InputLabel>\r\n                \r\n                <Select \r\n                    onChange={(e) => this.domainEffects(e.target.value)}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    style={{color: \"#fff\"}}\r\n                >  \r\n                {data.class_char['Cleric'].domains.map((domain,index) => (\r\n                    <MenuItem  key={index} value={domain}>{domain}</MenuItem>\r\n                ))\r\n                }\r\n                </Select>\r\n            </FormControl>\r\n            {(this.context.person.domain === 'Nature') && <ClassTricks profession={'Druid'} mainpick={false} getValue={this.getValue}/>}\r\n           </div>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nDomain.contextType=DataContext;\r\nexport default Domain;",{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":10,"column":3,"nodeType":"180","messageId":"181","endLine":13,"endColumn":4},{"ruleId":"182","severity":1,"message":"183","line":3,"column":10,"nodeType":"184","messageId":"185","endLine":3,"endColumn":20},{"ruleId":"182","severity":1,"message":"186","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":14},{"ruleId":"182","severity":1,"message":"187","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":22},{"ruleId":"188","severity":1,"message":"189","line":30,"column":1,"nodeType":"190","endLine":32,"endColumn":2},{"ruleId":"182","severity":1,"message":"191","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":18},{"ruleId":"192","severity":1,"message":"193","line":91,"column":45,"nodeType":"194","messageId":"195","endLine":91,"endColumn":47},{"ruleId":"192","severity":1,"message":"193","line":91,"column":72,"nodeType":"194","messageId":"195","endLine":91,"endColumn":74},{"ruleId":"192","severity":1,"message":"196","line":91,"column":72,"nodeType":"194","messageId":"195","endLine":91,"endColumn":74},{"ruleId":"192","severity":1,"message":"196","line":91,"column":100,"nodeType":"194","messageId":"195","endLine":91,"endColumn":102},{"ruleId":"178","severity":1,"message":"179","line":12,"column":5,"nodeType":"180","messageId":"181","endLine":14,"endColumn":6},{"ruleId":"178","severity":1,"message":"179","line":12,"column":5,"nodeType":"180","messageId":"181","endLine":14,"endColumn":6},{"ruleId":"178","severity":1,"message":"179","line":12,"column":5,"nodeType":"180","messageId":"181","endLine":14,"endColumn":6},{"ruleId":"178","severity":1,"message":"179","line":12,"column":5,"nodeType":"180","messageId":"181","endLine":14,"endColumn":6},{"ruleId":"182","severity":1,"message":"197","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":19},{"ruleId":"182","severity":1,"message":"198","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":16},{"ruleId":"182","severity":1,"message":"199","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":14},{"ruleId":"182","severity":1,"message":"191","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":18},{"ruleId":"182","severity":1,"message":"200","line":8,"column":9,"nodeType":"184","messageId":"185","endLine":8,"endColumn":13},{"ruleId":"178","severity":1,"message":"179","line":16,"column":9,"nodeType":"180","messageId":"181","endLine":19,"endColumn":10},{"ruleId":"182","severity":1,"message":"201","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":17},{"ruleId":"182","severity":1,"message":"197","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":19},{"ruleId":"182","severity":1,"message":"198","line":6,"column":8,"nodeType":"184","messageId":"185","endLine":6,"endColumn":16},{"ruleId":"182","severity":1,"message":"199","line":7,"column":8,"nodeType":"184","messageId":"185","endLine":7,"endColumn":14},{"ruleId":"182","severity":1,"message":"191","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":17,"column":1,"nodeType":"190","endLine":19,"endColumn":2},{"ruleId":"182","severity":1,"message":"198","line":3,"column":8,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"199","line":4,"column":8,"nodeType":"184","messageId":"185","endLine":4,"endColumn":14},{"ruleId":"182","severity":1,"message":"191","line":5,"column":8,"nodeType":"184","messageId":"185","endLine":5,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":13,"column":5,"nodeType":"180","messageId":"181","endLine":18,"endColumn":6},{"ruleId":"182","severity":1,"message":"202","line":23,"column":15,"nodeType":"184","messageId":"185","endLine":23,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":10,"column":5,"nodeType":"180","messageId":"181","endLine":12,"endColumn":6},{"ruleId":"178","severity":1,"message":"179","line":11,"column":5,"nodeType":"180","messageId":"181","endLine":13,"endColumn":6},{"ruleId":"182","severity":1,"message":"203","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":12},{"ruleId":"178","severity":1,"message":"179","line":12,"column":5,"nodeType":"180","messageId":"181","endLine":15,"endColumn":6},{"ruleId":"182","severity":1,"message":"203","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":12},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'FormHelperText' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'InputLabel' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'data' is defined but never used.","'TextField' is defined but never used.","'equipment' is assigned a value but never used.","'Fade' is defined but never used.","no-global-assign","no-unsafe-negation"]