{"version":3,"sources":["img/dd.png","Species.js","Classes.js","services/roll.js","Features.js","App.js","reportWebVitals.js","index.js"],"names":["Species","props","state","species","picked","handleData","bind","event","this","target","value","setState","buttonState","currentStep","FormControl","className","InputLabel","style","color","id","Select","onChange","labelId","placeholer","map","index","MenuItem","React","Component","Classes","classes","prof","featuresNumbers","rolls","results","i","k6","Math","floor","random","push","sort","a","b","shift","sum","reduce","total","num","Features","features","rolled","featuresUse","rollMethod","useDefault","serviceRoll","console","log","rollsResults","profession","toString","Fade","in","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","feature","rolling","Button","onClick","variant","disabled","App","button","name","handleUserData","_next","_prev","handleButton","checkButtons","key","childData","previousButton","borderColor","size","nextButton","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a8b9fba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/dd.aa28a64d.png\";","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\n\r\nclass Species extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            species : ['Human', 'Elf', 'Dwarf','Halfling','Tiefling','Dragonborn', 'Gnome','Half-Orc','Half-Elf'],\r\n            picked: '',\r\n            \r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('species',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked')\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 1) { // Prop: The current step\r\n            return null\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Species</InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    placeholer=\"human\"\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.state.species.map((species,index) => (\r\n                        <MenuItem  key={index} value={species}>{species}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Species;","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\n\r\nclass Classes extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            classes : ['Barbarian','Bard','Cleric','Druid','Fighter','Monk','Paladin','Ranger','Rogue','Sorcerer','Warlock','Wizard'],\r\n            picked: '',\r\n        }\r\n\r\n        this.handleData = this.handleData.bind(this);\r\n    }\r\n    \r\n\r\n    handleData(event) {\r\n        this.props.handleData('profession',event.target.value)\r\n        this.setState({picked: event.target.value});\r\n        this.props.buttonState('clicked');\r\n    }\r\n\r\n\r\n    render() {\r\n        if (this.props.currentStep !== 2) { \r\n            return null\r\n        }\r\n\r\n        return (\r\n            \r\n            <>\r\n             <FormControl className=\"classic\">\r\n                 <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Pick Your Class </InputLabel>\r\n                <Select \r\n                    onChange={this.handleData}\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value= {this.state.picked}\r\n                    style={{color: \"#fff\"}}\r\n                >\r\n                      \r\n                    {this.state.classes.map((prof,index) => (\r\n                        <MenuItem  key={index} value={prof}>{prof}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n           \r\n           </> \r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Classes;","const roll = () => {\r\n    let featuresNumbers = []\r\n    let rolls = 0 \r\n    while(rolls < 6)  {\r\n\r\n        let results = [];\r\n        let i = 0\r\n        while(i < 4) {\r\n            let k6 = Math.floor(Math.random() *6) + 1;\r\n            results.push(k6);\r\n            i++;\r\n        }\r\n        \r\n        results\r\n            .sort((a, b) => a - b)\r\n            .shift()\r\n\r\n        const sum = results.reduce((total, num) => {\r\n            return total + num;\r\n        })\r\n\r\n        featuresNumbers.push(sum);\r\n        rolls++;\r\n       \r\n    }\r\n\r\n    return featuresNumbers;\r\n}\r\n\r\nexport default {\r\n    roll,\r\n}","import React from 'react';\r\nimport 'fontsource-roboto';\r\nimport Button from '@material-ui/core/Button';\r\nimport serviceRoll from './services/roll';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nclass Features extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            features:[],\r\n            rolled: false,\r\n            featuresUse: [],\r\n        }\r\n\r\n        \r\n        this.rollMethod = this.rollMethod.bind(this);\r\n        this.useDefault = this.useDefault.bind(this);\r\n    }\r\n\r\n    rollMethod() {\r\n        const features = serviceRoll.roll();\r\n        this.setState({features, featuresUse: features, rolled: true})\r\n    }\r\n    useDefault() {\r\n        const defaultNumbers = [15, 14, 13, 12, 10, 8];\r\n        this.setState({features: defaultNumbers , rolled: true})\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        if (this.props.currentStep !== 3) { \r\n            return null\r\n        }\r\n        console.log(this.state.features);\r\n\r\n        const rollsResults = (\r\n            <>\r\n                <h4>Young {this.props.profession}, Please assign these numbers for Your abilities: {this.state.features.toString()}</h4>\r\n                <Fade in={true}>\r\n                <TableContainer >\r\n                    <Table className=\"abilities\">\r\n                        <TableHead>\r\n                            <TableRow> \r\n                                <TableCell>Strength</TableCell>\r\n                                <TableCell>Dexterity</TableCell>\r\n                                <TableCell>Constitution</TableCell>\r\n                                <TableCell>Intelligence</TableCell>\r\n                                <TableCell>Wisdom</TableCell>\r\n                                <TableCell>Charisma</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow key=\"numbers\">\r\n                                <TableCell>\r\n                                    <FormControl >\r\n                                        <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                                        <Select \r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            style={{color: \"#fff\"}}\r\n                                        >\r\n                                            \r\n                                            {this.state.featuresUse.map((feature,index) => (\r\n                                                <MenuItem key={index} value={feature}>{feature}</MenuItem>\r\n                                            ))}\r\n                                        </Select> \r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl >\r\n                                        <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                                        <Select \r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            style={{color: \"#fff\"}}\r\n                                        >\r\n                                            \r\n                                            {this.state.featuresUse.map((feature,index) => (\r\n                                                <MenuItem key={index} value={feature}>{feature}</MenuItem>\r\n                                            ))}\r\n                                        </Select> \r\n                                    </FormControl>        \r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl >\r\n                                        <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                                        <Select \r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            style={{color: \"#fff\"}}\r\n                                        >\r\n                                            \r\n                                            {this.state.featuresUse.map((feature,index) => (\r\n                                                <MenuItem key={index} value={feature}>{feature}</MenuItem>\r\n                                            ))}\r\n                                        </Select> \r\n                                    </FormControl>\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl >\r\n                                        <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                                        <Select \r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            style={{color: \"#fff\"}}\r\n                                        >\r\n                                            \r\n                                            {this.state.featuresUse.map((feature,index) => (\r\n                                                <MenuItem key={index} value={feature}>{feature}</MenuItem>\r\n                                            ))}\r\n                                        </Select> \r\n                                    </FormControl>                \r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl >\r\n                                        <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                                        <Select \r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            style={{color: \"#fff\"}}\r\n                                        >\r\n                                            \r\n                                            {this.state.featuresUse.map((feature,index) => (\r\n                                                <MenuItem key={index} value={feature}>{feature}</MenuItem>\r\n                                            ))}\r\n                                        </Select> \r\n                                    </FormControl>                \r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <FormControl >\r\n                                        <InputLabel style={{color: \"#fff\"}} id=\"demo-simple-select-label\">Value</InputLabel>\r\n                                        <Select \r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id=\"demo-simple-select\"\r\n                                            style={{color: \"#fff\"}}\r\n                                        >\r\n                                            \r\n                                            {this.state.featuresUse.map((feature,index) => (\r\n                                                <MenuItem key={index} value={feature}>{feature}</MenuItem>\r\n                                            ))}\r\n                                        </Select> \r\n                                    </FormControl>                \r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                </Fade>\r\n            </>\r\n        )\r\n        \r\n        const rolling = (\r\n            <>\r\n                <h2>Roll Dices to set Your abilities!!</h2>\r\n                <Button \r\n                    onClick={this.rollMethod}\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Roll! \r\n                </Button>\r\n                <p className=\"big\">or</p>\r\n                <h3>Use default numbers (15, 14, 13, 12, 10, 8)</h3>\r\n                <Button \r\n                    onClick={this.useDefault}\r\n                    variant=\"contained\" \r\n                    color=\"primary\"\r\n                    disabled={this.state.rolled}\r\n                >\r\n                    Use Default\r\n                </Button>\r\n            </>\r\n        )\r\n\r\n        return (\r\n            <>\r\n                {this.state.rolled ? rollsResults : rolling}\r\n            </>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Features;","import React from 'react';\r\nimport logo from './img/dd.png';\r\nimport './App.css';\r\nimport 'fontsource-roboto';\r\nimport Species from './Species';\r\nimport Classes from './Classes';\r\nimport Features from './Features';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\nclass App extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentStep: 1,\r\n      button: true,\r\n      name: '',\r\n      species: '',\r\n      profession: '',\r\n    }\r\n\r\n    this.handleUserData = this.handleUserData.bind(this);\r\n    this._next = this._next.bind(this);\r\n    this._prev = this._prev.bind(this);\r\n    this.handleButton = this.handleButton.bind(this);\r\n    this.checkButtons = this.checkButtons.bind(this);\r\n  }\r\n\r\n handleUserData(key, value) {\r\n    this.setState({[key]: value});\r\n }\r\n handleButton(childData) {\r\n   if(childData === \"clicked\") this.setState({button:false}) \r\n }\r\n\r\n _prev() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: false\r\n    })\r\n    \r\n }\r\n\r\n _next() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    currentStep = currentStep >= 2? 3: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep,\r\n      button: true\r\n    },this.checkButtons)\r\n }\r\n\r\n checkButtons() {\r\n  if(this.state.currentStep === 2 && this.state.profession !== '') this.setState({button: false})\r\n }\r\n\r\n  render () {\r\n    let currentStep = this.state.currentStep;\r\n    console.log(currentStep)\r\n    console.log(this.state.profession)\r\n    const previousButton = (\r\n      <Button style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n        size=\"large\"\r\n        variant=\"outlined\"\r\n        \r\n        onClick={this._prev}>\r\n            Previous\r\n      </Button>\r\n    )\r\n\r\n    const nextButton = (\r\n      <Button style={{color:\"#fff\", borderColor: \"#fff\"}}\r\n      variant=\"outlined\"\r\n      size=\"large\"\r\n      onClick={this._next}\r\n      disabled={this.state.button}\r\n      >\r\n        Next\r\n      </Button> \r\n    )\r\n\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <h1>Your Character Generator</h1>\r\n        </header>\r\n        <main>\r\n        {}\r\n          <Species  buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n          <Classes buttonState={this.handleButton} currentStep={this.state.currentStep} handleData = {this.handleUserData} />\r\n          <Features profession={this.state.profession} currentStep={this.state.currentStep}/>\r\n          {currentStep !== 1 && previousButton}\r\n          {currentStep < 3 && nextButton } \r\n\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}